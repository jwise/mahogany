# -*-makefile-*-
# rules to create object files:
#
ifdef USE_LIBTOOL
%.o: %.cc
	$(LIBTOOL) --mode=compile $(CXX) -fPIC $(CXXFLAGS) -c $<
%.o: %.cpp
	$(LIBTOOL) --mode=compile $(CXX)  -fPIC $(CXXFLAGS) -c $<
%.o: %.c
	$(LIBTOOL) --mode=compile $(CC)  -fPIC $(CFLAGS) -c $<
%.lo: %.cpp
	$(LIBTOOL) --mode=compile $(CXX)  -fPIC $(CXXFLAGS) -c $< 
%.so: %.lo
	$(LIBTOOL) $(CXX) -export-dynamic -fPIC $(CXXFLAGS) -o $@ $<
else
%.o: %.cc
	$(CXX)  -fPIC $(CXXFLAGS) -c $<
%.o: %.cpp
	$(CXX)  -fPIC $(CXXFLAGS) -c $<
%.o: %.c
	$(CC)  -fPIC $(CFLAGS) -c $<

%.so: %.cpp
	$(CXX) -shared -fPIC $(CXXFLAGS) -o $@ $< -L$(BUILDDIR)/src -lM 
endif

%.cpp: %.i
	$(SWIG) $(SWIGFLAGS) -o $(ODIR)/$@ $<

%.py: %.i
	$(SWIG) $(SWIGFLAGS) -o junk $<

%cmodule.so: %.o
	$(CXX) -shared $< -lswigpy -o $(ODIR)/$@

%.dvi: %.htex
	cp $< tmp.tex ; $(BUILDDIR)/extra/scripts/striphelpids tmp.tex ; $(LATEX) tmp.tex ; $(MAKEINDEX) tmp.idx; \
        $(LATEX) tmp.tex ; $(LATEX) tmp.tex ; mv tmp.dvi `basename $< .htex`.dvi; mv tmp.aux `basename $< .htex`.aux ;rm -f tmp.*

%.dvi: %.tex
	$(LATEX) $< ; $(MAKEINDEX) `basename $< .tex`.idx; $(LATEX) $< ; $(LATEX) $<

%.ps: %.dvi
	$(DVIPS) $< -o $@


ifdef HAVE_SGMLTOOLS
%.html: %.sgml
	sgml2html $<
else
%.html: %.sgml
	touch $(ODIR)/$@ 
endif

dep depend:
	$(CXX) -MM $(CXXFLAGS) $(SRC) >.depend
#	$(CC) -MM $(CXXFLAGS) $(CSRC) >>.depend

.depend:
	touch .depend ; $(MAKE) dep

tags:
	etags --c++ $(SRC) $(CXXSRC)

.PHONY: stdclean dep depend tags msgcat

msgcat:
	@touch $(BUILDDIR)/messages.po
	@for i in $(SRC) $(CSRC) ; do $(XGETTEXT) -C -k_ -j -o $(BUILDDIR)/messages.po $$i ; done

stdclean:
	$(RM) $(ODIR)/*.o $(ODIR)/*.so $(ODIR)/*.a $(ODIR)/*.lo libM.so
