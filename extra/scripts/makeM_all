#!/bin/sh
# -*- text -*-
#
# $Id$
# makeM_all script: Checkout, compile and package wxGTK and Mahogany.
# Tested on:    Linux/x86: Debian/Coral, RedHat
#               Linux/axp: Debian Slink
#               Solaris/Sparc
#		FreeBSD/x86
#
echo "##############################################################################"
echo "makeM_deb running on " `hostname` " date: " `date`
echo "##############################################################################"

DOWXWIN=yes  # no or yes
DOINSTALL=yes
DOSHARED=no
DEBUG=no
USETARSRC=no
MKTARSRC=no
ADDON=

while [ ! -z "$1" ]
do
	case "x$1" in
	"x--Monly")
		DOWXWIN=no
		shift
	;;
	"x--debug")
		DEBUG=yes
		shift
	;;
	"x--noinst")
		DOINSTALL=no
		shift
	;;
	"x--shared")
		DOSHARED=yes
		shift
	;;
	"x--fromtar")
		USETARSRC=yes
		shift
	;;
	"x--mktar")
		MKTARSRC=yes
		shift
	;;
	*)
	echo "Illegal argument $1"
	exit 1
	esac
done

PATH=$PATH:/usr/bin:/usr/local/bin
    
CVS=cvs
export CVS

SCP=scp
export scp

BUILDDIR=/usr/local/src/Mbuild
export BUILDDIR

WXPREFIX=/usr/local/stow/wxWindows
export WXPREFIX

MPREFIX=/usr/local
export MPREFIX

DESTDIR=/tmp/Minst
export DESTDIR

USESTABLE=no

#FTPLOCATION="ballueder@shell1.sourceforge.net:/home/groups/ftp/pub/mahogany/daily/"
#WWWDOCLOCATION="ballueder@shell1.sourceforge.net:/home/groups/mahogany/htdocs/doc"
FTPLOCATION="karsten@wxwindows.org:Mftp/daily/"
WWWDOCLOCATION="karsten@wxwindows.org:Mwww/doc/"
WXCVSROOT=":pserver:KB@wxcvs.dhs.org:/home/karsten/CVSSERVER/wxcvs"
MCVSROOT=":pserver:KB@mcvs.dhs.org:/var/cvs/Mahogany"

# Need to hardwire this as we run it as root for rpm/deb generation:
REALHOME=$HOME
KBHOME=/home/karsten
HOME=$KBHOME
WWWDIR=$HOME/WWW/Mahogany/daily
LOGNAME="karsten"
export LOGNAME

MNAME=mahogany
MVERSION=0.23a

WXNAME=wxGTK
WXVERSION=2.1.11

DOCHOST=Matterhorn

# This should be set to "yes" by the Mahogany compilation if it
# succeeds. Used in the debian compilation only for now.
UPLOADWXGTK=no


if [ $DOSHARED = yes ]
then
	ADDON="_wxshared"
else
	ADDON="_wxstatic"
fi

if [ $DEBUG = yes ]
then
	ADDON="${ADDON}_debug"
fi

if [ -f /etc/debian_version ]
then
  DEBIAN=yes
  OSTYPE_ADDON="-Debian"
else
  DEBIAN=no
fi

if [ -f /etc/redhat-release ]
then
  REDHAT=yes
  OSTYPE_ADDON="-RedHat"
else
  REDHAT=no
fi

CC=gcc
CXX=gcc

TMPDIR=/tmp
export TMPDIR

MCONFOPT="--with-modules=static"

#################################################################################
##
## Host/OS specific setups
##
#################################################################################
if [ `hostname` = bidean ]
then
  OSTYPE=SunOS
  OSTYPE_ADDON="-sparc"
fi

if [ "$OSTYPE" = "SunOS" ]
then
  LD_LIBRARY_PATH=$HOME/arch/SunOS/lib:/opt/lib:/usr/openwin/lib:/usr/local/X11R5/lib:/usr/lib:/usr/ucblib:/opt/Fsfgcc/lib:/usr/dt/lib:/opt/GBxpm/lib:$HOME/bin
  LD_LIBRARY_PATH=/opt/lib:/usr/openwin/lib:/usr/local/X11R5/lib:/usr/lib:/usr/ucblib:/opt/Fsfgcc/lib:/usr/dt/lib:/opt/GBxpm/lib:$HOME/bin:$LD_LIBRARY_PATH:/usr/local/lib
  CC=/opt/FSFgcc-2.8.0/bin/gcc
  CXX=/opt/FSFgcc-2.8.0/bin/c++
  LDFLAGS="$LDFLAGS -L/opt/FSFstdc++/lib -L/opt/lib -L/home/karsten/arch/SunOS/lib"
  CPPFLAGS="-I/opt/include -I/opt/FSFstdc++/include/g++ -I/home/karsten/arch/SunOS/include -I$HOME/opt/include" # -I/scratch/karsten/Python/include/python1.5"
  MAKE="gmake -s"
  PATH=/usr/ucb:/sbin:/usr/openwin/bin:/usr/bin:/usr/sbin:/opt/bin:/opt/SUNWspro/bin:/opt/hostsA:/usr/ccs/bin:$PATH:/usr/local/bin
  PATH=$HOME/arch/`uname`/bin:/opt/bin:$PATH
  BISON_SIMPLE=$HOME/arch/SunOS/lib/bison.simple 
  BISON_HAIRY=$HOME/arch/SunOS/lib/bison.hairy 
  export MAKE CPPFLAGS LDFLAGS CXX CC LD_LIBRARY_PATH PATH BISON_HAIRY BISON_SIMPLE
  BUILDDIR=/home/karsten/tmp

  WXPREFIX=/home/karsten/opt
  MPREFIX=/opt
fi

if [ `hostname` = caisteal -o `hostname` = dearg ]
then
  OSTYPE=SunOS
  OSTYPE_ADDON="-sparc"
  CC=gcc
  CXX=c++
  SCP=/usr/local/bin/ssh1/scp
fi

if [ `hostname` = Matterhorn ]
then
  SCP=scp1
fi

if [ `hostname` = ronnie ]
then
  PATH=$PATH:/usr/local/bin
fi

# RH box
if [ `hostname` = oxide.phy.hw.ac.uk ]
then
  WXPREFIX=/usr
  MPREFIX=/tmp/MOPT
  SCP=scp1
fi

# FreeBSD box
if [ `hostname` = Sendero.Simon-Shapiro.ORG ]
then
  BUILDDIR=/home/karsten/src
  WXPREFIX=/usr/local/wxWindows
  MPREFIX=/usr/local/Mahogany
  MAKE=gmake
  OSTYPE=FreeBSD
  CC=/usr/local/bin/gcc295
  CXX=$CC
  LDFLAGS="$LDFLAGS -lreadline -lstdc++ -L/usr/local/pilot/lib"
  export CC CXX OSTYPE LDFLAGS
  USESTABLE=no
  SCP=scp1
  MCONFOPT="$MCONFOPT --without-opt"
fi

if [ ! -d $BUILDDIR ] ; then  mkdir $BUILDDIR ; fi
if [ ! -d $WXPREFIX ] ; then mkdir $WXPREFIX ; fi
if [ ! -d $MPREFIX ] ; then mkdir $MPREFIX ; fi


if [ "x$MAKE" = x ] ; then MAKE=make; fi

RCNAME=.makeMrc    
# obtain central options file from ftp server
$SCP $FTPLOCATION/buildoptions /tmp/makeM_deb.$$ && \
( . /tmp/makeM_deb.$$ ; rm -f /tmp/makeM_deb.$$ )

# obtain local config file:
if [ -r $HOME/$RCNAME ] ; then echo "Reading $HOME/$RCNAME"; . $HOME/$RCNAME ; fi    

# obtain 2nd local config file:
HOSTNAME=`hostname`
if [ -r $HOME/$RCNAME.$HOSTNAME ]
then
  echo "Reading $HOME/$RCNAME"
  . $HOME/$RCNAME
fi    

echo "OSTYPE=$OSTYPE"
echo "OSTYPE_ADDON=$OSTYPE_ADDON"
echo "ADDON=$ADDON"
echo "BUILDDIR=$BUILDDIR"
echo "DEBIAN=$DEBIAN"
echo "REDHAT=$REDHAT"
echo "WXPREFIX=$WXPREFIX"
echo "MPREFIX=$MPREFIX"
echo "DESTDIR=$DESTDIR"
echo "WXCVSROOT=$WXCVSROOT"
echo "MCVSROOT=$MCVSROOT"
echo "DOWXWIN=$DOWXWIN"
echo "DEBUG=$DEBUG"
echo "SCP=$SCP"
echo "DOSHARED=$DOSHARED"
echo "MCONFOPT=$MCONFOPT"
echo "DOINSTALL=$DOINSTALL"
echo "USETARSRC=$USETARSRC"
echo "MKTARSRC=$MKTARSRC"

export OSTYPE

cd $BUILDDIR
if [ $? != 0 ]
then
  echo "Cannot change to $BUILDDIR - exiting.";
  exit 1
fi

echo >cvs.log

OS=`uname -s`-`uname -m`
export OS
HOST=`hostname`.`domainname`

if [ $DOWXWIN = yes ]
then
  echo "##################################################################"
  echo "Building wxGTK."
  echo "##################################################################"


  NAME=$WXNAME
  VERSION="-$WXVERSION"
  if [ $USETARSRC = yes ]   # build from $HOME/wxWindows.tar.gz
  then 
    rm -r -f wxWindows
    cat $HOME/wxWindows.tar.gz | gzip -dc | tar xf -
    if [ $? != 0 ] 
    then
	echo "Failed to unpack $HOME/wxWindows.tar.gz"
	exit 1
    fi
  else   # build from cvs
    if [ "x$TAG" = "x" ]
    then
      if [ $USESTABLE = yes ]
        then
          TAG="-rM_STABLE"
          echo "Using stable version of wxGTK."
        else
          TAG="-A"
        echo "Using latest version of wxGTK."
      fi
    fi
    echo REALHOME=$HOME
    if [ ! -d wxWindows ]
    then
      echo "wxWindows directory does not exist. Doing fresh checkout."
      ( HOME=$REALHOME; $CVS -d"$WXCVSROOT" -Q checkout $TAG wxGTK 2>&1)
    else
      echo "Updating wxWindows sources."
      (HOME=$REALHOME; cd wxWindows && $CVS -d "$WXCVSROOT" -Q update $TAG 2>&1)
    fi
    if [ $? -gt 1 ]
    then
      echo "Calling CVS failed - exiting."
      exit 2
    fi
  fi # TARSRC

  if [ "$DEBUG" = "yes" ] ; then
  	DEBUGOPTS="--enable-debug_flag --enable-debug_info"
  else
	DEBUGOPTS="--disable-debug_flag --disable-debug_info"
  fi

  if [ "$DOSHARED" = yes ]
  then
 	SHAREDFLAG="--enable-shared --disable-static"
  else
	SHAREDFLAG="--disable-shared --enable-static"
  fi

  rm -f wxWindows/*.cache
  cd wxWindows && \
  autoconf && \
	./configure \
	$SHAREDFLAG \
	--with-gtk \
	$DEBUGOPTS \
	--prefix=$WXPREFIX \
	--disable-optimise >config.output && \
  ($MAKE -k && $MAKE -k install) >/dev/null
  if [ $? != 0 ]
  then
    echo "Building wxWindows failed."
  fi
else
   echo "Skipping build of wxWindows."
fi	# if $DOWXWIN

echo "##################################################################"
echo "Setting up Mahogany build."
echo "##################################################################"

PATH="$WXPREFIX/bin:$PATH"
LD_LIBRARY_PATH=$LD_LIBRARY_PATH:$WXPREFIX/lib   
export LD_LIBRARY_PATH

NAME=$MNAME
VERSION=$MVERSION    

export NAME VERSION

cd $BUILDDIR

if [ $USETARSRC = yes ]
then
  rm -r -f M
  cat $HOME/Mahogany.tar.gz | gzip -dc | tar xf -
  if [ $? != 0 ] 
  then
    echo "Unpacking $HOME/Mahogany.tar.gz failed."
    exit 1
  fi
else # build from cvs
  if [ ! -d $NAME-$VERSION ]
  then
    echo "$NAME-$VERSION directory does not exist. Doing fresh checkout."
    rm -rf M
    (HOME=$REALHOME; $CVS -d "$MCVSROOT" -q checkout M 2>&1) && \
    mv M $NAME-$VERSION
  else
    echo "Updating Mahogany sources."
    (HOME=$REALHOME; cd $NAME-$VERSION && $CVS -d "$MCVSROOT" -q update -A 2>&1)
  fi
  if [ $? -gt 1 ]
  then
    echo "Calling CVS failed - exiting."
    exit 2
  fi
fi
    
PATH="/sbin:/usr/sbin:$PATH:$WXPREFIX/bin"
export PATH

# Docs are only generated on our master doc host "$DOCHOST":
if [ `hostname` != $DOCHOST ]
then
  echo "Copying documentation Mdocs.tar.gz to $BUILDDIR/$NAME-$VERSION/doc"
  $SCP $FTPLOCATION/Mdocs.tar.gz $BUILDDIR/$NAME-$VERSION/doc
else
  if [ -f $BUILDDIR/$NAME-$VERSION/doc/Mdocs.tar.gz ]
  then
    echo "Removing old documentation archive."
    rm -f $BUILDDIR/$NAME-$VERSION/doc/Mdocs.tar.gz
  fi
fi
rm -f $NAME-$VERSION/*.cache

###########################
# DEBIAN
###########################
if [ $DEBIAN = yes ]
then
  echo "##################################################################"
  echo "Building Debian package."
  echo "##################################################################"
  rm -f $NAME_$VERSION_*.deb
  (cd $NAME-$VERSION && build)
  test -f $NAME_$VERSION_*.deb
  if [ $? != 0 ]
  then
    echo "Build of $NAME-$VERSION failed."
  else
    if [ "$DOINSTALL" = "yes" ] ; then
	# do not install locally        (cd $NAME-$VERSION && super debi)
        $SCP mahogany_* $FTPLOCATION
    fi
    echo "Build of $NAME-$VERSION, debian, successful."
    UPLOADWXGTK=yes # cause wxWindow snapshot to be generated
  fi
fi

############################
## RedHat Linux
############################
if [ $REDHAT = yes ]
then
  echo "##################################################################"
  echo "Building RedHat package"
  echo "##################################################################"
  cd $BUILDDIR && \
  (cd $NAME-$VERSION && make allclean 2>/dev/null 2>&1 || true) && \
  $SCP $FTPLOCATION/Mdocs.tar.gz $BUILDDIR/$NAME-$VERSION/doc && \
  tar czf /usr/src/redhat/SOURCES/$NAME-$VERSION.tar.gz $NAME-$VERSION && \
  cp $BUILDDIR/$NAME-$VERSION/redhat/M.spec /usr/src/redhat/SPECS/M.spec && \
  cp $BUILDDIR/$NAME-$VERSION/redhat/mahogany.gif /usr/src/redhat/SOURCES && \
  cd /usr/src/redhat/ && \
  rpm -ba SPECS/M.spec
  if [ "$DOINSTALL" = "yes" ] ; then
	  $SCP RPMS/i386/$NAME*.rpm $FTPLOCATION && rm RPMS/i386/$NAME*.rpm
	  $SCP SRPMS/$NAME*.rpm $FTPLOCATION && rm SRPMS/$NAME*.rpm
  fi
fi

###########################
# .tar.gz
###########################
if [ "$DEBUG" = "yes" ] ; then
	DEBUGOPTS="--with-debug"
else
	DEBUGOPTS="--without-debug"
fi
echo "##################################################################"
echo "Building tar.gz package."
echo "##################################################################"
cd $BUILDDIR
( cd $NAME-$VERSION && ( $MAKE clean >/dev/null 2>&1 ; \
  rm -f configure ; autoconf && ./configure $DEBUGOPTS --prefix=$MPREFIX $MCONFOPT>config.output && \
  ( $MAKE depend >/dev/null 2>&1 ; $MAKE all >/dev/null) ))

if [ $? = 0 ]
then
  rm -rf $DESTDIR; mkdir $DESTDIR
  if [ `hostname` = $DOCHOST ]
  then
    echo "Building and packaging documentation..."
    ( cd $BUILDDIR/$NAME-$VERSION && $MAKE doc && $MAKE install_all DESTDIR=$DESTDIR ) >/dev/null
    echo "Copying docs in $DESTDIR/share/Mahogany/doc to WWW..."
    ( cd $DESTDIR/share/Mahogany/doc &&  $SCP -r * $WWWDOCLOCATION )
    echo "Packing docs in $DESTDIR/share/Mahogany/doc..."
    (cd $DESTDIR/share/Mahogany/doc && \
	tar czvf /tmp/Mdocs.tar.gz * && $SCP /tmp/Mdocs.tar.gz $FTPLOCATION)
    rm -f /tmp/Mdocs.tar.gz
  else
    echo "Copying documentation from ftp server."
    $SCP $FTPLOCATION/Mdocs.tar.gz $BUILDDIR/$NAME-$VERSION/doc/
  fi
  cd $BUILDDIR/$NAME-$VERSION && $MAKE install_all DESTDIR=$DESTDIR  >/dev/null && \
  cd $DESTDIR && tar cvf $BUILDDIR/$NAME-$VERSION-$OSTYPE$OSTYPE_ADDON$ADDON.tar * && \
  gzip -f -9 $BUILDDIR/$NAME-$VERSION-$OSTYPE$OSTYPE_ADDON$ADDON.tar

else
  echo "Build of $NAME-$VERSION.tar.gz, failed."
fi

if [ "$DOINSTALL" = "yes" ] ; then
	(cd $BUILDDIR; $SCP $NAME-*.gz $FTPLOCATION) 
fi


#######################################
## Upload wxWindows shared lib to ftp
#######################################
if [ $DOSHARED = yes -a $DOINSTALL = yes ]
then
  echo "Uploading wxWindows shared library to ftp server"
  cd $WXPREFIX && \
  tar cvf wxGTK-SharedLibs-$OSTYPE$OSTYPE_ADDON$ADDON.tar lib/libwx_gtk* && \
  gzip -f -9 wxGTK-SharedLibs-$OSTYPE$OSTYPE_ADDON$ADDON.tar && \
  $SCP wxGTK-SharedLibs-$OSTYPE$OSTYPE_ADDON$ADDON.tar.gz $FTPLOCATION && \
  rm -f wxGTK-SharedLibs-$OSTYPE$OSTYPE_ADDON$ADDON.tar*
fi

##########################################################
## Build $HOME/wxWindows.tar.gz and $HOME/Mahogany.tar.gz
##########################################################
if [ $MKTARSRC = yes ]
then
  echo "Cleaning and building $HOME/wxWindows.tar.gz"
  cd $BUILDDIR/wxWindows && ($MAKE clean; rm -f *cache ) >/dev/null 2>&1
  cd $BUILDDIR && \
  (tar cf $HOME/wxWindows.tar wxWindows && gzip -f -9 $HOME/wxWindows.tar)
  echo "Cleaning and building $HOME/Mahogany.tar.gz"
  cd $BUILDDIR/$MNAME-$MVERSION && ($MAKE allclean; rm -f *cache ) >/dev/null 2>&1
    cd $BUILDDIR && \
      (mv $MNAME-$MVERSION M && tar cf $HOME/Mahogany.tar M && gzip -f -9 $HOME/Mahogany.tar)
  	mv $BUILDDIR/M $BUILDDIR/$MNAME-$MVERSION
fi

############################
## Upload wxWindows to ftp
############################
if [ $UPLOADWXGTK = yes -a $DOINSTALL = yes ]
then
  echo "Cleaning and uploading wxGTK snapshot"
  cd $BUILDDIR/wxWindows && ($MAKE clean; rm -f *cache ) >/dev/null 2>&1
  cd $BUILDDIR && \
    (tar cf wxWindows.tar wxWindows && gzip -f -9 wxWindows.tar) && \
    $SCP wxWindows.tar.gz $FTPLOCATION && rm -f wxWindows.tar.gz
fi
