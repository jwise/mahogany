#This file was created by <karsten> Sun Nov 22 18:28:40 1998
#LyX 1.0 (C) 1995-1998 Matthias Ettrich and the LyX Team
\lyxformat 2.15
\textclass article
\language default
\inputencoding default
\fontscheme palatino
\graphics default
\paperfontsize 12
\spacing single 
\papersize Default
\paperpackage a4
\use_geometry 0
\use_amsmath 0
\paperorientation portrait
\secnumdepth 3
\tocdepth 3
\paragraph_separation indent
\defskip medskip
\quotes_language english
\quotes_times 2
\papercolumns 1
\papersides 1
\paperpagestyle default

\layout Title

C++ Coding Style Guide
\layout Author

Karsten Ballüder
\latex latex 

\backslash 

\backslash 

\latex default 
 (
\family typewriter 
Ballueder@usa.net, http://Ballueder.home.ml.org
\family default 
)
\layout Abstract

This document is a set of notes explaining my preferred style of coding
 for C++, as it should be used throughout M in order to avoid unnecessary
 reformatting between different developers.
 The following guidelines have proven themselves to be useful during several
 cross-platform projects.
\layout Section

Preprocessor Usage
\layout Subsection

#define's
\layout Subsubsection

Features and Compile time defines
\layout Standard

As most platforms use the GNU 
\family typewriter 
configure
\family default 
 system to set defines, we have to follow its way of doing things.
 Therefor all defines which enable or disable features, should follow the
 following conventions:
\layout Enumerate

If they define a compile time option, they should be called 
\family typewriter 
USE_XXX
\family default 
, if they define the availability of something, they should be called 
\family typewriter 
HAVE_XXX
\family default 
.
\layout Enumerate

If defined, they must have the value 1.
 Never define it to be 0, but use 
\family typewriter 
#undef
\family default 
 instead.
\layout Enumerate

To test a define, do 
\shape italic 
not
\shape default 
 use 
\family typewriter 
#if
\family default 
, but use 
\family typewriter 
#ifdef
\family default 
, 
\family typewriter 
#if defined()
\family default 
 or 
\family typewriter 
#ifndef
\family default 
 .
\layout Enumerate

Try to reduce duplicate code in preprocessor dependent sources to avoid
 confusing 
\family typewriter 
DOC++
\family default 
.
 I.e.
 do not repeat multiple class declarations, but keep only one which changes
 depending on the predefined symbols.
 See section 
\begin_inset LatexCommand \ref{DOCXX}

\end_inset 

 for an example.
\layout Subsubsection

Operating system identifiers
\layout Standard

The source code must never reference any prdefined symbols such as 
\family typewriter 
__unix__
\family default 
 or 
\family typewriter 
__WINDOWS__
\family default 
.
 Instead, the global source configuration header file should check for them
 and define appropriate 
\family typewriter 
OS_XX
\family default 
 values.
 Examples are: 
\family typewriter 
OS_WIN
\family default 
, 
\family typewriter 
OS_UNIX
\family default 
, 
\family typewriter 
OS_LINUX
\family default 
, 
\family typewriter 
OS_SOLARIS
\family default 
.
 Obviously, more than one of them can be defined at the same time, e.g.
 
\family typewriter 
OS_UNIX
\family default 
 and 
\family typewriter 
OS_SOLARIS
\family default 
.
 Also, 
\family typewriter 
OS_POSIX
\family default 
 may be helpful.
 All of thes are either defined to 1 or undefined.
\layout Subsubsection

Compiler identifiers
\layout Standard

For identifying different compilers rules analog to operating systems hold.
 I.e.
 there should be defines of the type 
\family typewriter 
CC_XXX
\family default 
 defined.
 So far, M supports the following two compilers:
\layout Itemize

GNU gcc: 
\family typewriter 
CC_GCC
\family default 
, including egcs.
\layout Itemize

Microsoft Visual C++: 
\family typewriter 
CC_MSC
\layout Subsection

#include's
\layout Subsubsection

precompiled headers
\layout Standard

To support precompiled headers and to avoid unnecessarily compiling headers
 multiple times, one global header file 
\family typewriter 
Mpch.h
\family default 
 exists and should be used in the following way:
\layout Itemize

On systems that support precompiled headers: it includes 
\family typewriter 
Mconfig.h
\family default 
 and all other header files which are used reasonably often.
\layout Itemize

On systems without precompiled headers, it only includes 
\family typewriter 
Mconfig.h
\family default 
.
\layout Itemize

On systems that support precompiled headers, the define 
\family typewriter 
USE_PCH
\family default 
 will be defined.
\layout Standard

All source files should include 
\family typewriter 
Mpch.h
\family default 
, all header files should include 
\family typewriter 
Mconfig.h
\family default 
.
\layout Subsection

Indentation
\layout Itemize

All preprocessor directives must start at column 0.
 Indentation should happen between the leading hash (#) and the directive.
\layout Itemize

Indentation is by a three spaces.
\layout Itemize

Between a 
\family typewriter 
#include
\family default 
 and the file name, there should be three spaces.
\layout Standard

Example:
\layout Standard


\latex latex 

\backslash 
verb|#ifdef OS_UNIX|
\layout Standard


\latex latex 

\backslash 
verb|#        include <unistd.h>|
\layout Standard


\latex latex 

\backslash 
verb|#endif|
\layout Section

Naming conventions
\layout Subsection

General
\layout Itemize

Do not use names starting with underscores, like 
\family typewriter 
_malloc
\family default 
 or 
\family typewriter 
__malloc
\family default 
.
\layout Itemize

Class names always start with capital letters, variable names start with
 lower case letters, i.e.
 
\family typewriter 
MApplication
\family default 
 is a class name, 
\family typewriter 
mApplication
\family default 
 is a variable name.
\layout Itemize

Class method names are capitalised, i.e.
 
\family typewriter 
MyClass::MyMethod()
\family default 
, but function names always start with a lowercase letter, i.e.
 
\family typewriter 
void exitFunc()
\family default 
.
\layout Itemize

Do not use 
\family typewriter 
hungarian
\family default 
 notation.
\layout Itemize

Do use the 
\family typewriter 
m_
\family default 
 prefix for member variables.
\layout Itemize

When using names consisting of several words, use mixed capitalisation,
 not underscores, i.e.
 use 
\family typewriter 
MyNewClass
\family default 
, not 
\family typewriter 
My_new_class
\family default 
.
\layout Itemize

Avoid duplicating names of classes as variable names, i.e.
 
\family typewriter 
MApplication
\family default 
 and 
\family typewriter 
mApplication
\family default 
, unless when there is only one instance of that class, then it should be
 the same name, e.g.
 
\family typewriter 
MyApp myApp;
\family default 
.
\layout Itemize

Use 
\family typewriter 
const
\family default 
 wherever possible, both for parameters and for methods.
\layout Itemize

Try to avoid templates.
\layout Section

Formatting of C/C++ code
\layout Subsection

Rule of thumb
\layout Standard

Format your code like seen in Bjarne Stroustrup's 
\shape italic 
The C++ Programming Language.
\layout Subsection

Braces 
\layout Standard

Braces should always be on a line by themselves.
 If following a control statement, they should be on the same indentation
 level as that statement.
 E.g.
 the brace after an 
\family typewriter 
if()
\family default 
 statement should be directly under the 
\begin_inset Quotes eld
\end_inset 


\family typewriter 
i
\family default 

\begin_inset Quotes erd
\end_inset 


\layout Standard

Do not write code like:
\layout Standard


\latex latex 

\backslash 
verb|if(foo == bar) {|
\latex default 
 
\layout Standard


\latex latex 

\backslash 
verb| printf("foo is bar
\backslash 
n");|
\layout Standard

but write
\layout Standard


\latex latex 

\backslash 
verb|if(foo == bar)|
\layout Standard


\latex latex 

\backslash 
verb|{|
\layout Standard


\latex latex 

\backslash 
verb| printf("foo is bar
\backslash 
n");|
\layout Subsection

Tabulators and Spaces
\layout Standard

To make cooperation easier we have agreed to 
\emph on 
not
\emph default 
 to use any tabulator characters in the sources.
 Instead three spaces should be used.
 The basic indentation depth is three spaces per level.
\layout Subsection

Comments
\layout Subsubsection

Comment markers
\layout Standard

Comments should be marked by 
\family typewriter 
//
\family default 
 only if they are short.
 If they continue over more than one line, they should be marked as C-style
 comments.
\layout Subsubsection

FIXME comments
\layout Standard

To mark places in the source which need further attention or fixing, a comment
 containing the word 
\family typewriter 
FIXME
\family default 
 should be used.
\layout Subsubsection

Use DOC++ comments
\layout Standard


\begin_inset LatexCommand \label{DOCXX}

\end_inset 

 It's pretty buggy, but maybe some day there will be a working version of
 it, so use it.
\layout Paragraph

Avoid duplicate definitions or declarations in multiple branches of compilation:
\layout Standard

The following example confuses 
\family typewriter 
DOC++
\family default 
:
\layout Standard


\latex latex 

\backslash 
verb|#ifdef XXX|
\layout Standard


\latex latex 

\backslash 
verb|class Class : public class BaseClass|
\layout Standard


\latex latex 

\backslash 
verb|#else|
\layout Standard


\latex latex 

\backslash 
verb|class Class|
\layout Standard


\latex latex 

\backslash 
verb|#endif|
\layout Standard

Instead, use code like this:
\layout Standard


\latex latex 

\backslash 
verb|class Class| 
\layout Standard


\latex latex 

\backslash 
verb|#ifdef XXX|
\layout Standard


\latex latex 

\backslash 
verb|: public class BaseClass|
\layout Standard


\latex latex 

\backslash 
verb|#endif|
\layout Section

Other coding issues
\layout Subsection

Local data
\layout Standard

Do not define arrays as local variables, but explicitly allocate and deallocate
 them using 
\family typewriter 
new []
\family default 
 and 
\family typewriter 
delete []
\family default 
.
 If defined as local variables, they will get allocated on the stack which
 might overflow and produce wrong results without any warnings, which is
 difficult to detect.
\layout Subsection

Use prefixes in global names
\layout Standard

When defining macros or global variable names (In some cases, this should
 also apply to class names.), use a library or application specific prefix
 to avoid conflicts with symbols defined in other libraries.
 
\layout Standard

Example:
\layout Standard

Do not define a global macro such as 
\family typewriter 
SIZE(x)
\family default 
, but call it 
\family typewriter 
mylibSIZE(x)
\family default 
 or 
\family typewriter 
mSIZE(x)
\family default 
.
\layout Subsection

Version Control
\layout Standard

The sources are managed by the 
\family typewriter 
CVS
\family default 
 version control system.
 For easy identification, each file should start with a comment, including
 at least the 
\family typewriter 
$Id$
\family default 
 and the 
\family typewriter 
$Log$
Revision 1.9  1998/11/22 19:48:36  KB
New documentation generation system. Automatically produces PS, HTML and wxhelp.map.
Revision 1.8  1998/08/16 16:32:16  KBupdatesRevision
 1.7  1998/05/20 13:32:10  KBEventually fixed that Doc++ core dump problem
 and added a note aboutthis in the StyleGuide.Revision 1.6  1998/05/14 18:49:07
  KBExtended naming conventions, added postscript versions.Revision 1.5  1998/05/0
2 18:29:51  KBAfter many problems, Python integration is eventually taking
 off -works.

\family default 
 tags.
 Including the 
\family typewriter 
$Log$
Revision 1.9  1998/11/22 19:48:36  KB
New documentation generation system. Automatically produces PS, HTML and wxhelp.map.
Revision 1.8  1998/08/16 16:32:16  KBupdatesRevision
 1.7  1998/05/20 13:32:10  KBEventually fixed that Doc++ core dump problem
 and added a note aboutthis in the StyleGuide.Revision 1.6  1998/05/14 18:49:07
  KBExtended naming conventions, added postscript versions.Revision 1.5  1998/05/0
2 18:29:51  KBAfter many problems, Python integration is eventually taking
 off -works.

\family default 
 information in each file somehow inflates the code, but as the CVS archive
 might only be accessible through a dial-up internet connection, it provides
 valuable information.
\the_end
