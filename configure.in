dnl $Id$

AC_DEFUN(AC_OVERRIDES_PREPARE,
[
rm -f ${OSTYPE}.system.cache.tmp
touch ${OSTYPE}.system.cache.tmp
touch ${OSTYPE}.system.cache
])

AC_DEFUN(AC_OVERRIDES_DONE,
[
mv ${OSTYPE}.system.cache.tmp ${OSTYPE}.system.cache
])

dnl package,message,helpmessage,variable
AC_DEFUN(AC_OVERRIDES,
[
AC_MSG_CHECKING("for $2")
AC_ARG_WITH($1,$3,
[if test "x$with_$1" = xyes; then
  ac_cv_use_$1='$4="1"'
else
  ac_cv_use_$1='$4="0"'
fi],
[
  LINE=`grep "$4" ${OSTYPE}.system.cache`
  if test "x$LINE" != x ; then
    eval "DEFAULT_$LINE"
  fi
  ac_cv_use_$1='$4='$DEFAULT_$4
])
eval "$ac_cv_use_$1"
echo $ac_cv_use_$1 >> ${OSTYPE}.system.cache.tmp
if test "$$4" = 1; then
  AC_MSG_RESULT(yes)
else
  AC_MSG_RESULT(no)
fi
])

dnl package,message,helpmessage,variable
AC_DEFUN(AC_OVERRIDES_OLD,
[
AC_MSG_CHECKING("for $2")
AC_CACHE_VAL(ac_cv_use_$1,
[
AC_ARG_WITH($1,$3,
[if test "x$with_$1" = xyes; then
  ac_cv_use_$1='$4="1"'
else
  ac_cv_use_$1='$4="0"'
fi],[ac_cv_use_$1='$4=$DEFAULT_$4'])
])
eval "$ac_cv_use_$1"

if test "$$4" = 1; then
  AC_MSG_RESULT(yes)
else
  AC_MSG_RESULT(no)
fi
])



AC_DEFUN(AC_PATH_FIND_INCLUDES,
[
ac_find_includes=
for ac_dir in $1;
  do
    if test -f "$ac_dir/$2"; then
      ac_find_includes=$ac_dir
      break
    fi
  done
])

AC_DEFUN(AC_PATH_FIND_LIBRARIES,
[
ac_find_libraries=
for ac_dir in $1;
  do
    for ac_extension in a so sl; do
      if test -f "$ac_dir/lib$2.$ac_extension"; then
        ac_find_libraries=$ac_dir
        break 2
      fi
    done
  done
])

dnl Path to include, already defined
AC_DEFUN(AC_INCLUDE_PATH_EXIST,
[
  ac_path_to_include=$1
  echo "$2" | grep "\-I$1" > /dev/null
  result=$?
  if test $result = 0; then
    ac_path_to_include=""
  else
    ac_path_to_include="-I$1"    
  fi
])

dnl Path to link, already defined
AC_DEFUN(AC_LINK_PATH_EXIST,
[
  echo "$2" | grep "\-L$1" > /dev/null
  result=$?
  if test $result = 0; then
    ac_path_to_link=""
    ac_pure_path_to_link=""
  else
    ac_path_to_link="-L$1"    
    ac_pure_path_to_link="$1"
  fi
])

dnl ------------------------------------------------------------------------
dnl ========================================================================
dnl ########################################################################
dnl ========================================================================
dnl ------------------------------------------------------------------------
dnl Process this file with autoconf to produce a configure script.
AC_INIT(configure.in)

OS="${OSTYPE}"

if test "x$OS" = "x"; then
  UNAME=`uname`
  AC_MSG_ERROR("The system variable OS has not been set"
               "please set is everytime befor compiling on this system"
               "A good example for this system would be:"
               "setenv OSTYPE $UNAME        for csh as a SHELL"
               "EXPORT OSTYPE=$UNAME        for sh as SHELL"
               "please set this and restart again."
              )
fi


AC_OVERRIDES_PREPARE

DEFAULT_USE_WXGTK=1
DEFAULT_USE_PYTHON=1
DEFAULT_USE_WXXT=0
DEFAULT_USE_WXWINDOWS=0
DEFAULT_USE_WXWINDOWS2=1
DEFAULT_USE_WXSTRING=1
DEFAULT_USE_WXCONFIG=1
DEFAULT_USE_APPCONF=0
DEFAULT_USE_EFENCE=0
DEFAULT_USE_DEBUG=1

MAKE_USE_WXTAB="USE_WXTAB=1"


dnl ================ User editable settings ============================
dnl where to find Python source
PYTHON_PATH="/usr/local/src/Python-1.5"
dnl name of the python library, omit "lib" and ".a" or ".so"
PYTHON_LIB="python1.5"
dnl ================ do not edit below here ============================


dnl search path for includes and libraries

SEARCH_INCLUDE="\
    ./extra/include	      \
    /usr/include              \
    /usr/Motif1.2/include     \
			      \
    /usr/X11R6/include        \
    /usr/X11R5/include        \
    /usr/X11R4/include        \
                              \
    /usr/include/X11R6        \
    /usr/include/X11R5        \
    /usr/include/X11R4        \
                              \
    /usr/local/X11R6/include  \
    /usr/local/X11R5/include  \
    /usr/local/X11R4/include  \
                              \
    /usr/local/include/X11R6  \
    /usr/local/include/X11R5  \
    /usr/local/include/X11R4  \
    /usr/local/include        \        
    /usr/local/src            \        
    /usr/scratch/tmp          \
                              \
    /usr/X11/include          \
    /usr/include/X11          \
    /usr/local/X11/include    \
    /usr/local/include/X11    \
                              \
    /usr/X386/include         \
    /usr/x386/include         \
    /usr/XFree86/include/X11  \
                              \
    /usr/local/include        \
    /usr/unsupported/include  \
    /usr/athena/include       \
    /usr/local/x11r5/include  \
    /usr/lpp/Xamples/include  \
                              \
    /usr/openwin/include      \
    /usr/openwin/share/include \
    /opt/include              \
"

# add additional src directories:
for p in `pwd`/extra/src/*
do
SEARCH_INCLUDE="$p \
                $SEARCH_INCLUDE"
done

PWD=`pwd`
SEARCH_INCLUDE="   \
$PWD               \
$PWD/include       \
$PWD/extra/include \
$PYTHON_PATH/Include \
$SEARCH_INCLUDE    \
"

SEARCH_LIB="`echo "$SEARCH_INCLUDE" | sed s/include/lib/g` \
    "
                              \
SEARCH_LIB="\
    $SEARCH_LIB \
    $PYTHON_PATH \
"

AC_CONFIG_HEADER(include/config.h)

dnl ###################
dnl # options         #
dnl ###################

AC_OVERRIDES(wxXt,wxXt,
--with-wxXt               use wxXt,
USE_WXXT)

AC_OVERRIDES(wxGTK,wxGTK,
--with-wxGTK              use wxGTK,
USE_WXGTK)

AC_OVERRIDES(wxString,wxString,
--with-wxString           use wxString,
USE_WXSTRING)

AC_OVERRIDES(python,python,
--with-python             use python,
USE_PYTHON)

AC_OVERRIDES(wxConfig,wxConfig,
--with-wxConfig           use wxConfig,
USE_WXCONFIG)

AC_OVERRIDES(appConf,appConf,
--with-appConf            use appConf,
USE_APPCONF)

AC_OVERRIDES(efence,efence,
--with-efence             use ElectricFence,
USE_EFENCE)

AC_OVERRIDES(threads,threads,
--with-threads            link with libpthread,
USE_THREADS)

AC_OVERRIDES(debug,debug,
--with-debug              use debug info/code,
USE_DEBUG)


AC_CONFIG_AUX_DIR(extra/scripts)

dnl ###################
dnl # checks programs #
dnl ###################

dnl C-compiler checks
dnl =================
dnl use what compiler
AC_PROG_CC
dnl   defines CC with the compiler to use
dnl   defines GCC with yes if using gcc
dnl   defines GCC empty if not using gcc
dnl   defines CFLAGS

CFLAGS=`echo "$CFLAGS" | sed 's/-g//g'`
if test "$GCC" = "yes"
then
	CFLAGS="$CFLAGS -DCC_GCC  -fno-exceptions -Wall -pedantic "
fi

dnl does compiler support -c and -o simultaniously
AC_PROG_CC_C_O
dnl   defines NO_MINUS_C_MINUS_O if compiler does not accept 
dnl                              both switches simultaniously
dnl what is the c-preprocessor
AC_PROG_CPP
dnl   defines CPP with the c-preprocessor
dnl is -traditional needed for correct compilations
AC_PROG_GCC_TRADITIONAL
dnl   adds -traditional for gcc if needed

AC_LANG_SAVE

AC_PROG_INSTALL


dnl C++-compiler checks
dnl ===================
dnl use what compiler
AC_PROG_CXX
dnl   defines CXX with the compiler to use
dnl   defines GXX with yes if using gxx
dnl   defines GXX empty if not using gxx
dnl   defines CXXFLAGS
dnl what is the C++-preprocessor
AC_PROG_CXXCPP
dnl   defines CXXCPP with the C++-preprocessor

CXXFLAGS=`echo "$CXXFLAGS" | sed 's/-g//g'`

AC_LANG_RESTORE

AC_PROG_MAKE_SET
AC_ISC_POSIX

dnl we use C++ so we always have prototypes
AC_DEFINE(HAVE_PROTOTYPES)

works=no
AC_MSG_CHECKING(for variable length prototypes and stdarg.h)
AC_TRY_COMPILE([
#include <stdarg.h>
int foo(int x, ...) {
	va_list va;
	va_start(va, x);
	va_arg(va, int);
	va_arg(va, char *);
	va_arg(va, double);
	return 0;
}
], [return foo(10, "", 3.14);],
AC_DEFINE(HAVE_STDARG_PROTOTYPES) works=yes)
AC_MSG_RESULT($works)

if test "$have_prototypes" = yes; then
bad_prototypes=no
AC_MSG_CHECKING(for bad exec* prototypes)
AC_TRY_COMPILE([#include <unistd.h>], [char **t;execve("@",t,t);], ,
	AC_DEFINE(BAD_EXEC_PROTOTYPES) bad_prototypes=yes)
AC_MSG_RESULT($bad_prototypes)
fi

dnl find the X11 include and library files
AC_PATH_XTRA
dnl   defines x_includes and x_libraries
XT_LIBS="-lXaw -lXext -lXmu -lXt"

if test "$USE_WXSTRING" = 1; then
  AC_DEFINE(USE_WXSTRING)
fi

if test "$USE_WXGTK" = 1; then
  USE_WXXT=0
  USE_WXWINDOWS=1  
  USE_WXWINDOWS2=1
  USE_WXSTRING=1
  AC_DEFINE(USE_WXGTK)
  AC_DEFINE(USE_WXWINDOWS)
  AC_DEFINE(USE_WXWINDOWS2)
  AC_DEFINE(USE_WXSTRING)
  WX_LINK=
  AC_MSG_CHECKING(for wxWindows(wxGTK) libraries)
  AC_PATH_FIND_INCLUDES($SEARCH_INCLUDE,wxWindows/include/wx/wx.h)
  if test "$ac_find_includes" != "" ; then
    AC_PATH_FIND_LIBRARIES($SEARCH_LIB,wx_gtk)
    if test "$ac_find_libraries" != "" ; then
      AC_INCLUDE_PATH_EXIST($ac_find_includes,$CHECK_INCLUDE)
      AC_LINK_PATH_EXIST($ac_find_libraries,$CHECK_LIB)
      CHECK_LINK="$CHECK_INCLUDE $ac_path_to_link"
      CHECK_INCLUDE="$CHECK_INCLUDE $ac_path_to_include"
      WX_LINK="$ac_path_to_link -lwx_gtk"
      WX_SLINK="$ac_pure_path_to_link/libwx_gtk.a"
      WX_INCLUDE="$ac_path_to_include/wxWindows/include $ac_path_to_include/wxWindows/setup/${OSTYPE}"
      WX_DEFS=-D__WXGTK__
      AC_MSG_RESULT(yes)
      WX_DEFS=-D__WXGTK__
    else
      AC_MSG_RESULT(no)
    fi
  else
    AC_MSG_RESULT(no)
  fi
  AC_MSG_CHECKING(for gtk libraries)
  AC_PATH_FIND_INCLUDES($SEARCH_INCLUDE,gtk/gtk.h)
  if test "$ac_find_includes" != "" ; then
    AC_PATH_FIND_LIBRARIES($SEARCH_LIB,gtk)
    if test "$ac_find_libraries" != "" ; then
      AC_INCLUDE_PATH_EXIST($ac_find_includes,$CHECK_INCLUDE)
      AC_LINK_PATH_EXIST($ac_find_libraries,$CHECK_LIB)
      CHECK_LINK="$CHECK_INCLUDE $ac_path_to_link"
      CHECK_INCLUDE="$CHECK_INCLUDE $ac_path_to_include"
      WX_LINK="$WX_LINK $ac_path_to_link -lgtk -lgdk -lglib -lXext"
      WX_SLINK="$WX_SLINK $ac_path_to_link -lgtk -lgdk -lglib -lXext"
      WX_INCLUDE="$WX_INCLUDE $ac_path_to_include $ac_path_to_include/gtk $ac_path_to_include/gdk $ac_path_to_include/glib"
      tmp=`echo $ac_path_to_link/glib/include | sed "1,$ s/-L/-I/g"`
      WX_INCLUDE="$WX_INCLUDE $tmp"
      AC_MSG_RESULT(yes)
    else
      AC_MSG_RESULT(no)
    fi
  else
    AC_MSG_RESULT(no)
  fi
else
  if test "$USE_WXXT" = 1; then
    USE_WXGTK=0
    USE_WXWINDOWS=1  
    USE_WXWINDOWS2=0
    AC_DEFINE(USE_WXXT)
    AC_DEFINE(USE_WXWINDOWS)
    WX_LINK=
    AC_MSG_CHECKING(for wxWindows(Xt) libraries)
    AC_PATH_FIND_INCLUDES($SEARCH_INCLUDE,wxxt/wx/wx.h)
    if test "$ac_find_includes" != "" ; then
      AC_PATH_FIND_LIBRARIES($SEARCH_LIB,wx_xt)
      if test "$ac_find_libraries" != "" ; then
        AC_INCLUDE_PATH_EXIST($ac_find_includes,$CHECK_INCLUDE)
        AC_LINK_PATH_EXIST($ac_find_libraries,$CHECK_LIB)
        CHECK_LINK="$CHECK_INCLUDE $ac_path_to_link"
        CHECK_INCLUDE="$CHECK_INCLUDE $ac_path_to_include"
        WX_LINK="$ac_path_to_link -lwx_xt -lwx_xtwidgets $XT_LIBS $XLIBS"
        WX_SLINK="$ac_pure_path_to_link/libwx_xt.a $ac_pure_path_to_link/libwx_xtwidgets.a $XT_LIBS $XLIBS"
	WX_INCLUDE="$ac_path_to_include/wxxt $ac_path_to_include/wxxt/setup/${OSTYPE}"
	AC_MSG_RESULT(yes)
      else
        AC_MSG_RESULT(no)
      fi
    else
      AC_MSG_RESULT(no)
    fi
  fi
fi
AC_SUBST(WX_INCLUDE)
AC_SUBST(WX_LINK)
AC_SUBST(WX_SLINK)
AC_SUBST(WX_DEFS)

if test "$USE_WXCONFIG" = 1; then
	if test "$USE_WXWINDOWS2" = 0; then
		AC_MSG_ERROR("wxConfig can only be used with wxWindows version 2."
               		     "Please correct the settings and restart again.")
	else
		AC_DEFINE(USE_WXCONFIG)
	fi
	USE_APPCONF=0
fi

if test "$USE_WXWINDOWS2" = 1; then
	MAKE_USE_WXTAB=
fi
AC_SUBST(MAKE_USE_WXTAB)


dnl Checks for libraries.
dnl =====================

XPM_LINK=
AC_MSG_CHECKING(for XPM library)
AC_PATH_FIND_INCLUDES($SEARCH_INCLUDE,X11/xpm.h)
if test "$ac_find_includes" != "" ; then
  AC_PATH_FIND_LIBRARIES($SEARCH_LIB,Xpm)
  if test "$ac_find_libraries" != "" ; then
    AC_INCLUDE_PATH_EXIST($ac_find_includes,$CHECK_INCLUDE)
    AC_LINK_PATH_EXIST($ac_find_libraries,$CHECK_LIB)
    CHECK_LINK="$CHECK_INCLUDE $ac_path_to_link"
    CHECK_INCLUDE="$CHECK_INCLUDE $ac_path_to_include"
    XPM_LINK="$ac_path_to_link -lXpm"
    XPM_INCLUDE="$ac_path_to_include"
    AC_MSG_RESULT(yes)
  else
    AC_MSG_RESULT(no)
  fi
else
  AC_MSG_RESULT(no)
fi

AC_SUBST(XPM_LINK)
AC_SUBST(XPM_INCLUDE)

if test "$USE_PYTHON" = "1" ; then
  PYTHON_LINK=
  SWIG=
  SWIG_LINK=
  AC_MSG_CHECKING(for Python)
  AC_PATH_FIND_INCLUDES($SEARCH_INCLUDE,Python.h)
  if test "$ac_find_includes" != "" ; then
    AC_PATH_FIND_LIBRARIES($SEARCH_LIB,$PYTHON_LIB)
    if test "$ac_find_libraries" != "" ; then
      AC_INCLUDE_PATH_EXIST($ac_find_includes,$CHECK_INCLUDE)
      AC_LINK_PATH_EXIST($ac_find_libraries,$CHECK_LIB)
      CHECK_LINK="$CHECK_INCLUDE $ac_path_to_link"
      CHECK_INCLUDE="$CHECK_INCLUDE $ac_path_to_include"
      PYTHON_LINK="$ac_path_to_link -l$PYTHON_LIB"
      PYTHON_INCLUDE="$ac_path_to_include"
      AC_DEFINE(USE_PYTHON)
      MAKE_USE_PYTHON="USE_PYTHON=1"
      AC_MSG_RESULT(yes)
    else
      AC_MSG_RESULT(no)
      USE_PYTHON=0
      MAKE_USE_PYTHON=
    fi
  else
    AC_MSG_RESULT(no)
    USE_PYTHON=0
    MAKE_USE_PYTHON=
  fi
fi

AC_SUBST(MAKE_USE_PYTHON)
AC_SUBST(PYTHON_LINK)
AC_SUBST(PYTHON_INCLUDE)

HAVE_SWIGLIB=0
if test "$USE_PYTHON" = "1" ; then
  AC_PATH_PROG(SWIG,swig)
  if test -n "$SWIG"; then
    AC_MSG_CHECKING(for libswigpy)
    AC_PATH_FIND_LIBRARIES($SEARCH_LIB,swigpy)
    if test "$ac_find_libraries" != "" ; then
      AC_LINK_PATH_EXIST($ac_find_libraries,$CHECK_LIB)
      SWIG_LINK="$ac_path_to_link -lswigpy"
      AC_MSG_RESULT(yes)
      HAVE_SWIGLIB=1
      AC_DEFINE(HAVE_SWIGLIB)
    else
      AC_MSG_RESULT(no)
    fi
  fi
fi
AC_SUBST(SWIG_LINK)


LIBDL_LINK=
AC_MSG_CHECKING(for dl library)
AC_PATH_FIND_LIBRARIES($SEARCH_LIB,dl)
if test "$ac_find_libraries" != "" ; then
AC_LINK_PATH_EXIST($ac_find_libraries,$CHECK_LIB)
CHECK_LINK="$CHECK_INCLUDE $ac_path_to_link"
LIBDL_LINK="$ac_path_to_link -ldl"
AC_MSG_RESULT(yes)
else
AC_MSG_RESULT(no)
fi
AC_SUBST(LIBDL_LINK)


LIBINTL_LINK=
AC_MSG_CHECKING(for intl library)
AC_PATH_FIND_LIBRARIES($SEARCH_LIB,intl)
if test "$ac_find_libraries" != "" ; then
AC_LINK_PATH_EXIST($ac_find_libraries,$CHECK_LIB)
CHECK_LINK="$CHECK_INCLUDE $ac_path_to_link"
LIBINTL_LINK="$ac_path_to_link -lintl"
AC_MSG_RESULT(yes)
else
AC_MSG_RESULT(no)
fi
AC_SUBST(LIBINTL_LINK)

COMPFACE_LINK=
AC_MSG_CHECKING(for compface library)
AC_PATH_FIND_INCLUDES($SEARCH_INCLUDE,compface.h)
if test "$ac_find_includes" != "" ; then
  AC_MSG_RESULT(yes)
  COMPFACE_LINK="-lcompface"
  AC_DEFINE(HAVE_COMPFACE_H)
else
  AC_MSG_RESULT(no)
fi
AC_SUBST(COMPFACE_LINK)


dnl extra lib dirs
EXTRA_SRC_LIB=
EXTRA_SRC_INC=
for i in `pwd`/extra/src/*
do
	EXTRA_SRC_LIB="$EXTRA_SRC_LIB -L$i"
	EXTRA_SRC_INC="$EXTRA_SRC_INC -I$i"
done
AC_SUBST(EXTRA_SRC_LIB)
AC_SUBST(EXTRA_SRC_INC)

dnl Checks for header files.
AC_PATH_X
AC_HEADER_STDC
AC_CHECK_HEADERS(strings.h unistd.h)
AC_CHECK_HEADERS(libintl.h)
AC_CHECK_HEADERS(stdlib.h)
AC_CHECK_HEADERS(stdarg.h)

dnl Checks for typedefs, structures, and compiler characteristics.
AC_C_CONST
AC_C_INLINE
AC_TYPE_SIZE_T
AC_STRUCT_TM

dnl Checks for library functions.
AC_CHECK_FUNCS(strerror strstr strsep)

dnl glibc2 has crypt in extra library
NEED_LIB_CRYPT=0
AC_CHECK_FUNC(crypt, NEED_LIB_CRYPT=0,NEED_LIB_CRYPT=1)
if test "$NEED_LIB_CRYPT" = 1; then
	EXTRA_LINK="$EXTRA_LINK -lcrypt"
fi

dnl electric fence
if test "$USE_EFENCE" = 1; then
	EXTRA_LINK="$EXTRA_LINK -lefence"
fi

dnl add pthreads to libraries
if test "$USE_THREADS" = 1; then
	EXTRA_LINK="$EXTRA_LINK -lpthread"
fi

AC_SUBST(EXTRA_LINK)

dnl set debug/optimisation flags
dnl we don't use CFLAGS/CXXFLAGS from autoconf
DBGFLAGS=
OPTFLAGS=$CXXFLAGS
if test "$USE_DEBUG" = 1; then
	DBGFLAGS="-g2 -DDEBUG"
	OPTFLAGS="$CXXFLAGS -O0" # turn off all optimisations
fi

dnl we need to set the target for c-client library:
dnl supported OSTYPE values are linux* and solaris* and freebsd*

AC_MSG_CHECKING(for c-client library OS type)
CCOSTYPE=
case "${OSTYPE}" in
linux*)
  CCOSTYPE=lnx
  AC_MSG_RESULT(lnx)
  ;;
solaris*)
  if test "$GCC" = "yes"
  then
    CCOSTYPE=gso
    AC_MSG_RESULT(gso)
  else
    CCOSTYPE=sol
    AC_MSG_RESULT(sol)
  fi
  ;;
freebsd*)
  CCOSTYPE=bsf
  AC_MSG_RESULT(bsf)
  ;;
esac

if test "x$CCOSTYPE" = "x" ; then
  echo "Cannot determine OS type for c-client library. Supported are linux, solaris, freebsd."
  exit 1
fi

AC_SUBST(CCOSTYPE)
AC_SUBST(OPTFLAGS)
AC_SUBST(DBGFLAGS)

BUILDDIR=`pwd`
AC_SUBST(BUILDDIR)

AC_OUTPUT(makeopts)
