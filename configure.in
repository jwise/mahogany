dnl Process this file with autoconf to produce a configure script.

AC_INIT(configure.in)
AC_REVISION([$Id$])

rm -f conftestdata
if ln -s X conftestdata 2>/dev/null
then	rm -f conftestdata
else	AC_MSG_ERROR([Sorry, this build system will not work on a
	system without symbolic links.  It depends on the ability
	to create links to directories, so this is not something
	that can be worked around.])
fi

case "$OSTYPE" in '')
	UNAME=`uname`
	AC_MSG_ERROR([The system variable OSTYPE has not been set
	Please set it every time before compiling on this system
	A possible value for this system might be:
	setenv OSTYPE $UNAME        for csh as a SHELL
	export OSTYPE=$UNAME        for sh as SHELL
	Please set this and restart.])
esac

AC_CONFIG_HEADER(include/config.h)
AC_CONFIG_AUX_DIR(extra/scripts)

dnl --------------------------------------------------------------------------
dnl Mahogany parameter evaluation
dnl Usage: M_OVERRIDES(package,message,variable,default,help)
dnl --------------------------------------------------------------------------

## TEMPORARY
rm -f ${OSTYPE}.system.cache*

M_OVERRIDES(python,Python,USE_PYTHON,1,
--disable-python        no Python scripting)

M_OVERRIDES(strict,strict compiler options,USE_STRICT,0,
--with-strict         strict compiler flags - may not work on all systems)

M_OVERRIDES(opt,optimization,USE_OPT,1,
--disable-opt           no compiler optimisations - may not be effective)

M_OVERRIDES(debug,debug code,USE_DEBUG,0,
--with-debug          compile debug code)

M_OVERRIDES(debuginfo,debuging info,USE_DEBUG_INFO,0,
--with-debuginfo      include debug info from compiler)

M_OVERRIDES(wxdebug,wxWin debug libs,USE_WXDEBUG,0,
--with-wxdebug          use debug wxWindows libraries)

M_OVERRIDES(wxconfigprg,wxWin config prog,USE_WXCONFIGPRG,,
--with-wxconfigprg=xxx  use wx-config program named xxx e.g. wxgtkd-config)

M_OVERRIDES(prof,profiling,USE_PROFILER,0,
--with-prof           generate profiling code)

M_OVERRIDES(experimental,experimental code,USE_EXPERIMENTAL,0,
--with-experimental   compile experimental code)

M_OVERRIDES(threads,multi-threading,USE_THREADS,0,
--with-threads        multi-threaded version)

M_OVERRIDES(dmalloc,dmalloc library,USE_DMALLOC,0,
--with-dmalloc          use dmalloc library for debugging)

M_OVERRIDES(leaktracer,LeakTracer,USE_LEAKTRACER,0,
--with-leaktracer       use LeakTracer for debugging)

M_OVERRIDES(efence,ElectricFence,USE_EFENCE,0,
--with-efence           use ElectricFence for debugging)

dnl no longer updated in makefiles
dnl M_OVERRIDES(libtool,libtool,USE_LIBTOOL,0,
dnl --with-libtool          use GNU libtool)

M_OVERRIDES(ccostype,c-client OS type,USE_CCOSTYPE,,
--with-ccostype=xxx     use OS type xxx for c-client compilation)

M_OVERRIDES(modules,modules,USE_MODULES,auto,
--with-modules=xxx      one of static/none/dynamic)

M_OVERRIDES(ssl,SSL support,USE_SSL,1,
--with-ssl=DIR          path to SSL directories (requires OpenSSL))

AC_MSG_CHECKING(for install location)
case "$prefix" in
NONE)	AC_CACHE_VAL(m_cv_prefix,m_cv_prefix=$ac_default_prefix);;
*)	m_cv_prefix=$prefix ;;
esac
AC_MSG_RESULT($m_cv_prefix)
case "$m_cv_prefix" in /*) ;; *)
	AC_MSG_WARN([--prefix=$prefix must be an absolute path name, using $ac_default_prefix])
	m_cv_prefix=$ac_default_prefix
esac
prefix=$m_cv_prefix

dnl save parameter settings in case stuff below aborts
AC_CACHE_SAVE

dnl --------------------------------------------------------------------------
dnl testing operating system and compilers
dnl --------------------------------------------------------------------------

AC_CANONICAL_HOST
dnl setting the OS type for information
AC_DEFINE_UNQUOTED(M_CANONICAL_HOST,"$host")
AC_DEFINE_UNQUOTED(M_OSINFO,"`uname -s -r -m`")
AC_DEFINE_UNQUOTED(M_PREFIX,"$prefix")

dnl set the top level directories
dnl use "exec pwd" to avoid shell built-in
dnl use "cd ." so FreeBSD shell will fork subshell
SOURCEDIR=`cd $srcdir; exec pwd`
AC_SUBST(SOURCEDIR)
BUILDDIR=`cd .; exec pwd`
AC_SUBST(BUILDDIR)

dnl ###################
dnl # checks programs #
dnl ###################

dnl C-compiler checks
dnl =================

dnl use what compiler?
CFLAGS=${CFLAGS=}	# magic incantation so CFLAGS not set by AC_PROG_CC
AC_PROG_CC
dnl   defines CC with the compiler to use
dnl   defines GCC with yes if using gcc, else empty
dnl   defines CFLAGS

dnl fixups for UNIX variants
AC_ISC_POSIX

dnl does compiler support -c and -o simultaniously?
dnl AC_PROG_CC_C_O
dnl   defines NO_MINUS_C_MINUS_O if compiler does not accept 
dnl                              both switches simultaniously

dnl disable support for exceptions if the compiler is gcc and
dnl new enough to support it.
case "$GCC" in yes)
	AC_CACHE_CHECK(whether ${CC-gcc} accepts -fno-exceptions,
	m_cv_gcc_exceptions,
	[echo 'void f(){}' >conftest.c
	case "`${CC-cc} -fno-exceptions -c conftest.c 2>&1`" in
	'')	m_cv_gcc_exceptions=yes ;;
	*)	m_cv_gcc_exceptions=no ;;
	esac
	rm -f conftest*])
	case "$m_cv_gcc_exceptions" in yes)
		CFLAGS="$CFLAGS -fno-exceptions"
	esac
dnl	CFLAGS="$CFLAGS -DCC_GCC -Wall "
esac

dnl how to generate dependencies...
dnl for now, we just support -MD on gcc
case "$GCC" in yes)
	CFLAGS="$CFLAGS -MD"
esac

dnl what is the c-preprocessor?
AC_PROG_CPP
dnl   defines CPP with the c-preprocessor

dnl is -traditional needed for correct compilations?
AC_PROG_GCC_TRADITIONAL
dnl   adds -traditional for gcc if needed

dnl Checks for compiler characteristics.
AC_C_CONST
AC_C_INLINE

dnl C++-compiler checks
dnl ===================

AC_LANG_CPLUSPLUS

dnl use what compiler?
CXXFLAGS=${CXXFLAGS=}	# magic incantation so CXXFLAGS not set by AC_PROG_CXX
AC_PROG_CXX
dnl   defines CXX with the compiler to use
dnl   defines GXX with yes if using gxx, else empty
dnl   defines CXXFLAGS

dnl disable support for exceptions if the compiler is g++ and
dnl new enough to support it.
case "$GXX" in yes)
	AC_CACHE_CHECK(whether ${CXX-g++} accepts -fno-exceptions,
	m_cv_gxx_exceptions,
	[echo 'void f(){}' >conftest.cc
	case "`${CC-g++} -fno-exceptions -c conftest.cc 2>&1`" in
	'')	m_cv_gxx_exceptions=yes ;;
	*)	m_cv_gxx_exceptions=no ;;
	esac
	rm -f conftest*])
	case "$m_cv_gxx_exceptions" in yes)
		CXXFLAGS="$CXXFLAGS -fno-exceptions"
	esac
dnl	CXXFLAGS="$CXXFLAGS -DCC_GCC"
esac

dnl how to generate dependencies...
dnl for now, we just support -MD on g++
case "$GXX" in
yes)	CXXFLAGS="$CXXFLAGS -MD" ;;
*)	AC_MSG_WARN([*** dependencies not supported ***
	Dependencies are not supported for this compiler.  If this
	message appears, then we need to talk---we think we know
	how to fix this, but we don't have a machine where we can
	test it.  Please go to http://www.wxwindows.org/m-bugs and
	submit a bug against the Build component so we can give
	you some code to try.]);;
esac

dnl Various other commands needed
dnl =============================

dnl set RANLIB to ranlib location or nothing
AC_PROG_RANLIB

dnl check for M4
AC_PATH_PROG(M4, m4)

dnl set YACC to yacc location
AC_PROG_YACC

AC_PROG_INSTALL

AC_PROG_MAKE_SET

dnl Are we using libtool?
case "$USE_LIBTOOL" in
1)	MAKE_LIBTOOL="USE_LIBTOOL=yes"
	AM_PROG_LIBTOOL ;;
*)	MAKE_LIBTOOL=
	LIBTOOL=
	AC_SUBST(LIBTOOL) ;;
esac
AC_SUBST(MAKE_LIBTOOL)

dnl --------------------------------------------------------------------------
dnl check for features and functions
dnl --------------------------------------------------------------------------

dnl we use C++ so we always have prototypes - Python.h needs this
AC_DEFINE(HAVE_PROTOTYPES)

dnl used by python
AC_CACHE_CHECK(for variable length prototypes and stdarg.h,
	m_cv_stdarg_prototypes,
	[AC_TRY_COMPILE(
	[#include <stdarg.h>
	int foo(int x, ...) {
		va_list va;
		va_start(va, x);
		va_arg(va, int);
		va_arg(va, char *);
		va_arg(va, double);
		return 0;
	}], [return foo(10, "", 3.14);],
		m_cv_stdarg_prototypes=yes, m_cv_stdarg_prototypes=no)])
case "$m_cv_stdarg_prototypes" in yes)
	AC_DEFINE(HAVE_STDARG_PROTOTYPES)dnl
esac

AC_CACHE_CHECK(for bad exec* prototypes, m_cv_bad_exec,
	[AC_TRY_COMPILE([#include <unistd.h>], [char **t;execve("@",t,t);],
		m_cv_bad_exec=yes, m_cv_bad_exec=no)])
case "$m_cv_bad_exec" in yes)
	AC_DEFINE(BAD_EXEC_PROTOTYPES)dnl
esac

dnl Checks for typedefs and structures.
AC_TYPE_SIZE_T
AC_STRUCT_TM
AC_CHECK_FUNCS(strsep)

dnl --------------------------------------------------------------------------
dnl check for the overridable options
dnl --------------------------------------------------------------------------

dnl memory debug libraries get tested last to make sure they are linked last

dnl electric fence
case "$USE_EFENCE" in 1)
	AC_CHECK_LIB(efence,main,
		LIB_EFENCE="-lefence",
		AC_MSG_WARN(efence library configured but not available.))
esac

dnl dmalloc debugging lib
case "$USE_DMALLOC" in 1)
	AC_CHECK_LIB(dmalloc,main,
		LIB_DMALLOC="-ldmalloc",
		AC_MSG_WARN(dmalloc library configured but not available.))
esac

dnl LeakTracer debugging lib
case "$USE_LEAKTRACER" in
1)	MAKE_USE_LEAKTRACER="USE_LEAKTRACER=yes" ;;
*)	MAKE_USE_LEAKTRACER="" ;;
esac
AC_SUBST(MAKE_USE_LEAKTRACER)

case "$USE_THREADS" in 1)
	AC_CHECK_LIB(pthread,main,,AC_CHECK_LIB(pthreads,main))
	AC_DEFINE(USE_THREADS)
	LDFLAGS="$LDFLAGS -lpthread"
esac

dnl set debug/optimisation flags

case "$USE_DEBUG" in
1)	AC_DEFINE(DEBUG)
	CPPFLAGS="$CPPFLAGS -DDEBUG"
	if test -z "$DEBUGUSER" ; then DEBUGUSER="$USER"; fi
	for i in $DEBUGUSER
	do
		CPPFLAGS="$CPPFLAGS -DDEBUG_$i"
	done  
	USE_DEBUG_INFO=1
	MAKE_DEBUG="DEBUG=yes" ;;
*)	MAKE_DEBUG='' ;;
esac
AC_SUBST(MAKE_DEBUG)

case "$USE_WXDEBUG" in
1)	# AC_DEFINE(__WXDEBUG__)
	USE_OPT=0
	WXCONFIG_NAME="wxgtkd-config" ;;
*)	WXCONFIG_NAME="wx-config" ;;
esac
case "$USE_WXCONFIGPRG" in
'')	;;
*)	WXCONFIG_NAME="$USE_WXCONFIGPRG" ;;
esac

case "$USE_OPT" in
1)	MYFLAGS="-O2" ;;
*)	MYFLAGS="-O0" ;;
esac


case "$USE_DEBUG_INFO.$GXX.$ac_cv_prog_cc_g" in
1.yes.*)	MYFLAGS="$MYFLAGS -g3" ;;
1.no.yes)	MYFLAGS="$MYFLAGS -g" ;;
esac

case "$USE_PROFILER" in 1)
	MYFLAGS="$MYFLAGS -pg"
esac

dnl experimental code (unstable!)
case "$USE_EXPERIMENTAL" in
1)	AC_DEFINE(EXPERIMENTAL)
	CPPFLAGS="$CPPFLAGS -DEXPERIMENTAL"
	if test -z "$EXPERIMENTAL" ; then EXPERIMENTAL="$USER"; fi
	for i in $EXPERIMENTAL
	do
	  CPPFLAGS="$CPPFLAGS -DEXPERIMENTAL_$i"
	done  
	MAKE_EXPERIMENTAL="EXPERIMENTAL=yes" ;;
*)	MAKE_EXPERIMENTAL='' ;;
esac
AC_SUBST(MAKE_EXPERIMENTAL)

dnl precompiled headers
case "$USE_PCH" in 1)
	AC_DEFINE(USE_PCH)
esac

dnl Use SSL (requires openSSL)
case "$USE_SSL" in
0)	ssl_option=nope ;;
1)	AC_CHECK_HEADER(openssl/ssl.h, ssl_option=ok, ssl_option=fail) ;;
/*)	AC_CHECK_HEADER(openssl/ssl.h, ssl_option=ok,
	[AC_MSG_CHECKING(for openssl/ssl.h in $USE_SSL/include)
	if test -f "$USE_SSL"/include/openssl/ssl.h
	then	AC_MSG_RESULT(yes)
		ssl_option=okdir
	else	AC_MSG_RESULT(no)
		ssl_option=fail
	fi]) ;;
*)	AC_MSG_WARN([Did not understand --with-ssl=$USE_SSL])
	ssl_option=fail ;;
esac
MAKE_USESSL=
CCLIENT_EXTRAAUTHENTICATORS=
CCLIENT_EXTRACFLAGS=
case "$ssl_option" in
nope)	;;
fail)	AC_MSG_WARN([Cannot find openssl/ssl.h - SSL support disabled])
	m_cv_USE_SSL=0 ;;
ok*)	AC_CHECK_FUNC(socket,, AC_CHECK_LIB(socket,socket))
	AC_CHECK_FUNC(gethostname,, AC_CHECK_LIB(resolv,gethostname))
	AC_CHECK_FUNC(gethostbyname,, AC_CHECK_LIB(nsl,gethostbyname))
	MAKE_USESSL="USESSL=yes"
	CCLIENT_EXTRAAUTHENTICATORS="\"EXTRAAUTHENTICATORS=ssl\""
	AC_DEFINE(USE_SSL)dnl
	# We assume no idea/no dsa/no rsa as this is easiest
	# to compile. It doesn't matter anyway as we load openssl
	# later, but we must be able to compile the header file.
	AC_DEFINE(NO_IDEA)AC_DEFINE(NO_DSA)AC_DEFINE(NO_RSA)dnl
	CCLIENT_EXTRACFLAGS="-DNO_IDEA -DNO_DSA -DNO_RSA"
	dnl THIS IS NOT NEEDED (KB): LIBS="-lssl -lcrypto $LIBS" 
	case "$ssl_option" in okdir)
		CCLIENT_EXTRACFLAGS="-I$USE_SSL/include $CCLIENT_EXTRACFLAGS"
		CPPFLAGS="$CPPFLAGS -I$USE_SSL/include"
		dnl NO SSL LIB REQUIRED!! (KB) LIBS="-L$USE_SSL/lib $LIBS"
	;; esac
esac
AC_SUBST(MAKE_USESSL)
AC_SUBST(CCLIENT_EXTRAAUTHENTICATORS)
AC_SUBST(CCLIENT_EXTRACFLAGS)

dnl --------------------------------------------------------------------------
dnl check for other libraries
dnl --------------------------------------------------------------------------

dnl we might need dl (depending on wxGTK and python config),
dnl so link with it if it is available 
AC_CHECK_LIB(dl,main,,AC_MSG_WARN(dl library might be needed.))

dnl c-client library needs the crypt() function which is either in the 
dnl c library or in libcrypt
AC_CHECK_FUNC(crypt,,
  [AC_CHECK_LIB(crypt,crypt,,
    [AC_MSG_ERROR([Cannot find crypt function.
It appears that the c library does not contain it, nor is libcrypt
installed on your system.  It is needed for password authentication,
so before compiling Mahogany, you need to install libcrypt.  You
can download the source for a suitable libcrypt from the Mahogany
ftp server (ftp://ronnie.phy.hw.ac.uk/pub/Mahogany/Libraries).])])]) 

dnl If we have a libshadow, link with it. I am not sure whether we
dnl really need this.
AC_CHECK_LIB(shadow,main)

dnl libresolv or libbind
USE_RBL=1
AC_CHECK_LIB(resolv,res_init,,
	AC_CHECK_LIB(bind,res_init,,
		[AC_MSG_WARN(cannot use RBL spam checker.)
		USE_RBL=0 ] ))
case "$USE_RBL" in 1) AC_DEFINE(USE_RBL) ;; esac

dnl POSIX.2 regexp support
HAVE_POSIX_REGEX=0
AC_CHECK_HEADER(regex.h,
	AC_CHECK_FUNC(regcomp, HAVE_POSIX_REGEX=1,
		AC_CHECK_LIB(regex,regcomp, [LIBS="-lregex $LIBS"
			HAVE_POSIX_REGEX=1])))
case "$HAVE_POSIX_REGEX" in 1) AC_DEFINE(HAVE_POSIX_REGEX) ;; esac

dnl --------------------------------------------------------------------------
dnl check for python (a bit lengthy thanks to its stupid installation)
dnl --------------------------------------------------------------------------

case "$USE_PYTHON" in 1)
   M_CHECK_MYHEADER(Python.h,
       [ /usr \
         /usr/include \
         /usr/include/python1.5 \
         /usr/local \
         /usr/local/include \
         /usr/local/include/python1.5 \
         /home/local \
         /home/local/include \
         /home/local/include/python1.5 \
       ],
       [ M_CHECK_MYLIB(python1.5,main,
           [ /usr \
             /usr/lib \
             /usr/lib/python1.5 \
             /usr/lib/python1.5/config \
             /usr/local \
             /usr/local/lib \
             /usr/local/lib/python1.5 \
             /usr/local/lib/python1.5/config \
             /usr/local/python1.5/config\
             /home/local \
             /home/local/lib \
             /home/local/lib/python1.5 \
             /home/local/lib/python1.5/config \
             /home/local/python1.5/config\
           ],
             [ PYTHON_LIBS="$libpath_python1_5_main -lpython1.5"
#               AC_CHECK_LIB(swigpy,main,
#               [  AC_DEFINE(HAVE_SWIGLIB)
#                  PYTHON_LIBS="$PYTHON_LIBS -lswigpy"
#               ],
#               [ AC_MSG_WARN(Cannot find SWIG library for python - trying anyway.)
#               ],
#               $PYTHON_LIBS)
           ], [ USE_PYTHON=0 ]
         )
       ], [ USE_PYTHON=0 ]
   )
esac

AC_PATH_PROG(SWIG,swig)
case "$SWIG" in
'')	AC_MSG_WARN([cannot find SWIG - will try to use intermediate files
	to compile Python support.  If possible, please install SWIG.])
	MAKE_USE_SWIG= ;;
*)	MAKE_USE_SWIG="USE_SWIG=yes" ;;
esac
AC_SUBST(MAKE_USE_SWIG)

case "$USE_PYTHON" in
1)	AC_DEFINE(USE_PYTHON)
	MAKE_USE_PYTHON="USE_PYTHON=yes"
	dnl extra libs required by python on freebsd
	case "$OSTYPE" in freebsd* | FreeBSD*)
		LIBS="-readline $LIBS" ;;
	esac ;;
*)	MAKE_USE_PYTHON=
	AC_MSG_WARN(Building M without Python leads to reduced functionality!)
	PYTHON_LIBS='' ;;
esac
AC_SUBST(MAKE_USE_PYTHON)

dnl check for xgettext
AC_PATH_PROG(XGETTEXT,xgettext)
case "$XGETTEXT" in '')
	AC_MSG_WARN(cannot generate messages.po for translations.)
	XGETTEXT="true xgettext"
esac
AC_SUBST(XGETTEXT)

dnl check for msgfmt
AC_PATH_PROG(MSGFMT,msgfmt)
case "$MSGFMT" in '')
	AC_MSG_WARN(cannot translate messages.)
	MSGFMT="true msgfmt"
esac
AC_SUBST(MSGFMT)

dnl --------------------------------------------------------------------------
dnl check for (wx)gtk libraries
dnl --------------------------------------------------------------------------

dnl check for wx-config
WX_CONFIG="$WXCONFIG_NAME"	# Bug in autoconf?
AC_PATH_PROG(WX_CONFIG,$WXCONFIG_NAME)
case "$WX_CONFIG" in '')
	AC_MSG_ERROR([cannot find $WXCONFIG_NAME program to get the wxWin
	configuration.  If it's not in the standard PATH, use the
	--with-wxconfigprg option to specify it.])
esac

CPPFLAGS="$CPPFLAGS `$WX_CONFIG --cflags`"

GTK_LDFLAGS=`$WX_CONFIG --libs`
AC_SUBST(GTK_LDFLAGS)
GUI_LIBS_STATIC=`echo $GTK_LDFLAGS | sed '
s/-lgtk/-Wl,-Bstatic -lgtk/g
s/-lglib/-lglib -Wl,-Bdynamic/g'`
AC_SUBST(GUI_LIBS_STATIC)

dnl only now can we check for wx.h because it would
dnl fail without the gtk headers
AC_CHECK_HEADER(wx/wx.h,,AC_MSG_ERROR([cannot find wx/wx.h header file.
	You must have wxWindows installed to compile Mahogany.]))

dnl --------------------------------------------------------------------------
dnl c-client library: set the proper OSTYPE and compiler variables
dnl --------------------------------------------------------------------------

LIB_PAM=
dnl we need to set the target for c-client library
case "$USE_CCOSTYPE" in
''|0|1)	AC_MSG_CHECKING(for c-client library OS type)
	case "$OSTYPE" in
	linux* | Linux*)
		AC_CHECK_LIB(pam, pam_end,
		[
			CCOSTYPE=lnp
			LIB_PAM="-lpam"
		],
		[
			CCOSTYPE=slx
		]) ;;
	Solaris* | solaris* | SunOS*)
		case "$GXX" in
		yes)	CCOSTYPE=gso ;;
		*)	CCOSTYPE=sol ;;
		esac ;;
	freebsd* | FreeBSD*)
		CCOSTYPE=bsf ;;
	hpux_9*)
		CCOSTYPE=hpp ;;
	hpux_10*)
		CCOSTYPE=hpx ;;
	OSF1*)
		case "$GXX" in
		yes)	CCOSTYPE=gof ;;
		*)	CCOSTYPE=osf ;;
		esac ;;
	*)
		AC_MSG_RESULT(unknown)
		AC_MSG_ERROR([cannot determine c-client OS type for $OSTYPE])
		;;
	esac
	dnl cache it to be picked up as a parameter next time
	m_cv_USE_CCOSTYPE="$CCOSTYPE"
	AC_MSG_RESULT($CCOSTYPE) ;;
*)	CCOSTYPE="$USE_CCOSTYPE" ;;
esac
AC_SUBST(CCOSTYPE)

dnl this must come after we checked for wxGTK and network libraries
dnl Check if we have the pi-sock library and headers for PalmOS support.
MAKE_PISOCKLIB=
AC_CHECK_HEADER(pi-source.h,
 AC_CHECK_LIB(pisock, main,
  [ AC_DEFINE(USE_PISOCK)
    MAKE_PISOCKLIB="PISOCK_LIB=-lpisock"
    AC_CHECK_LIB(pisock, pi_setmaxspeed,AC_DEFINE(HAVE_PI_SETMAXSPEED),
    AC_MSG_WARN(Your pisock library is old - some functionality will be disabled.))
  ],
  AC_MSG_WARN(Cannot find pisock library - support for PalmOS disabled.)
 ),
 AC_MSG_WARN(Cannot find pisock library headers - support for PalmOS disabled.)
)
AC_SUBST(MAKE_PISOCKLIB)    

MAKE_HAVE_LIBMAL=
dnl Check if we have libmal source in extra/src
case "$MAKE_PISOCKLIB" in '') ;; *)
	AC_MSG_CHECKING(for libmal in extra/src)
	if test ! -d $srcdir/extra/src/libmal 
	then
		AC_MSG_RESULT(not found - no MAL synch for PalmOS)
	elif test "$SOURCEDIR" != "$BUILDDIR"
	then
		##### TODO
		AC_MSG_RESULT(not supported for separate build tree)
	else
		AC_MSG_RESULT(found - MAL synch for PalmOS activiated)
		dnl the following settings are used by the libmal/Makefile
		dnl MALTOP=$SOURCEDIR/extra/src/libmal/malsync_src
		MALTOP=malsync_src
		AC_SUBST(MALTOP)
		cflags="$CFLAGS -I$MALTOP/mal/client/common -I$MALTOP/mal/common"
		PILOT_LIBS=$PISOCK_LIB
		AC_SUBST(cflags) AC_SUBST(PILOT_LIBS)
		libs=
		llibs=
		ccoptions=
		AC_SUBST(libs) AC_SUBST(llibs) AC_SUBST(ccoptions)
		MAKE_HAVE_LIBMAL="HAVE_LIBMAL=yes"
	fi
esac
AC_SUBST(MAKE_HAVE_LIBMAL)


dnl --------------------------------------------------------------------------
dnl How do we want to use modules?
dnl --------------------------------------------------------------------------
dnl must be done after configuring wxWin
case "$USE_MODULES" in
none|None|NONE|0|'')
	m_cv_USE_MODULES=none
	MAKE_USE_MODULES=
	;;
dynamic|Dynamic|DYNAMIC)
	m_cv_USE_MODULES=dynamic
	AC_DEFINE(USE_MODULES)
	MAKE_USE_MODULES="USE_MODULES=dynamic"
	;;
static|Static|STATIC)
	m_cv_USE_MODULES=static
	AC_DEFINE(USE_MODULES_STATIC)
	AC_DEFINE(USE_MODULES)
	MAKE_USE_MODULES="USE_MODULES=static"
	;;
auto|Auto|AUTO|1)
	dnl check for wxGTK dynamic linkage
	echo "int main() { return 0; }" >conftest.c
	if $CXX -o conftest $GTK_LDFLAGS conftest.c && \
		ldd conftest | fgrep libwx  >/dev/null
	then
		m_cv_USE_MODULES=dynamic
		MAKE_USE_MODULES="USE_MODULES=dynamic"
	else
		m_cv_USE_MODULES=static
		MAKE_USE_MODULES="USE_MODULES=static"
		AC_DEFINE(USE_MODULES_STATIC)
	fi
	rm -f conftest*
	AC_DEFINE(USE_MODULES)
	;;
*)
	AC_MSG_ERROR(Set --with-modules= to one of static/dynamic/none)
esac
AC_SUBST(MAKE_USE_MODULES)

dnl --------------------------------------------------------------------------
dnl set up generators for class documentation
dnl --------------------------------------------------------------------------

dnl use scandoc
DOCHTML="\$(SCANDOCHTML)"
AC_SUBST(DOCHTML)

dnl check for latex/dvips
AC_PATH_PROG(PERL,perl)
AC_PATH_PROG(LATEX,latex)
AC_PATH_PROG(MAKEINDEX,makeindex)
AC_PATH_PROG(DVIPS,dvips)
if test "x$LATEX" = x -o "x$DVIPS" = x -o "x$MAKEINDEX" = x
then
	LATEX="echo \"No latex available.\""
	DVIPS="echo \"No dvips available.\""
	MAKEINDEX="echo \"No makeindex available.\""
fi
AC_SUBST(LATEX)
AC_SUBST(DVIPS)
AC_SUBST(MAKEINDEX)

AC_PATH_PROG(PSTOPDF,ps2pdf)
case "$PSTOPDF" in '')
	PSTOPDF="echo \"ps2pdf not available.\""
esac
AC_SUBST(PSTOPDF)

AC_PATH_PROG(LATEX2HTML,latex2html)
case "$LATEX2HTML" in
'')	LATEX2HTML="echo \"No doc generator(html) available.\""
	MAKE_HAVE_LATEX2HTML='' ;;
*)	MAKE_HAVE_SGMLTOOLS="HAVE_LATEX2HTML=yes" ;;
esac
AC_SUBST(MAKE_HAVE_LATEX2HTML)
AC_SUBST(LATEX2HTML)

dnl --------------------------------------------------------------------------
dnl add our extra directories to the search path
dnl --------------------------------------------------------------------------

dnl set the extra include and lib directories
CPPFLAGS="-I$SOURCEDIR/include $CPPFLAGS -I$SOURCEDIR/extra/include"
case "$BUILDDIR" in "$SOURCEDIR") ;; *)
	CPPFLAGS="-I$BUILDDIR/include $CPPFLAGS" ;;
esac

dnl add all extra/src directories to the search paths
dnl	c-client
CPPFLAGS="$CPPFLAGS -I$BUILDDIR/extra/src/c-client"
LIBS="$BUILDDIR/extra/src/c-client/c-client.a $LIBS"
dnl	compface
CPPFLAGS="$CPPFLAGS -I$SOURCEDIR/extra/src/compface"
LIBS="$LIBS -L$BUILDDIR/extra/src/compface -lMcompface"

dnl --------------------------------------------------------------------------
dnl final settings, concatenation of args, etc
dnl --------------------------------------------------------------------------

dnl Only now can we add them, or otherwise some tests would have failed
case "$GXX" in yes)
	case "$USE_STRICT" in
	1)	CXXFLAGS="$CXXFLAGS -Werror -pedantic" ;;
	*)	CXXFLAGS="$CXXFLAGS -Wall" ;;
	esac ;;	
esac

dnl add other flags
CFLAGS="$CFLAGS $MYFLAGS"
CXXFLAGS="$CXXFLAGS $MYFLAGS"
LIBS="$LIBS $PYTHON_LIBS $LIB_EFENCE $LIB_DMALLOCi $LIB_PAM"

dnl Python code produces warnings at present, so don't break compilation:
CXXFLAGS_RELAXED=`echo $CXXFLAGS | sed 's/-Werror/-Wall/g'`
AC_SUBST(CXXFLAGS_RELAXED)

dnl Make sure we get statically linked against wxGTK
LIBS_STATIC=`echo $LIBS | sed 's/-lwx_gtk./-Wl,-Bstatic & -Wl,-Bdynamic/g'`
dnl libtool does not like -L.
LIBS=`echo $LIBS | sed 's/-L\.//g'`
AC_SUBST(LIBS_STATIC)

OUTPUT="makeopts"
COPY=Makefile DIR=
for dir in `cd $srcdir; find include extra src locale doc -type d -print`
do	case "$dir" in
	CVS | */CVS)		continue ;;
	extra/src)		DIR="$DIR $dir" ;;   # no Makefile in this dir
	extra/src/libmal*)	continue ;;
	esac
	if test -f $srcdir/$dir/Makefile.in
	then	OUTPUT="$OUTPUT $dir/Makefile"
		DIR="$DIR $dir"
	elif test -f $srcdir/$dir/Makefile
	then	COPY="$COPY $dir/Makefile"
		DIR="$DIR $dir"
	fi
done
case "$MAKE_HAVE_LIBMAL" in '') ;; *)
	OUTPUT="$OUTPUT extra/src/libmal/Makefile" ;;
esac

AC_OUTPUT_COMMANDS(
[case "$SRC" in
"$OBJ")	# source and object jumbled together
	for dir in . $DIR
	do	rm -f $dir/.src
		ln -s . $dir/.src
	done ;;
*)	# using separate object directories
	rm -f .src Makefile makerules
	ln -s $src .src
	ln -s .src/Makefile Makefile
	ln -s .src/makerules makerules
	for dir in $DIR
	do	test -d $dir || mkdir $dir
		rm -f $dir/.src
		case "$src" in
		/*)	ln -s $src/$dir $dir/.src ;;
		*)	lnk=`echo "$dir" | sed 's,\([^/][^/]*\),..,g'`
			ln -s $lnk/$src/$dir $dir/.src ;;
		esac
	done
	for mf in $COPY
	do	echo "linking $mf"
		rm -f $mf
		ln -s .src/Makefile $mf
	done
	if  test -d extra/src/libmal/.
	then	: ln -s .src/malsync_src extra/src/libmal/malsync_src
		######## TODO
	fi ;;
esac
sh .src/makeversion.in],
src="$srcdir" SRC="$SOURCEDIR" OBJ="$BUILDDIR"
DIR="$DIR"
COPY="$COPY")

AC_OUTPUT($OUTPUT)
exit
