/*
 * FILE : ./Message.cpp
 * 
 * This file was automatically generated by :
 * Simplified Wrapper and Interface Generator (SWIG)
 * Version 1.1 (Patch 2)
 * 
 * Portions Copyright (c) 1995-1997
 * The University of Utah and The Regents of the University of California.
 * Permission is granted to distribute this file in any manner provided
 * this notice remains intact.
 * 
 * Do not make changes to this file--changes will be lost!
 *
 */


#define SWIGCODE
/* Implementation : PYTHON */

#define SWIGPYTHON
#include <string.h>
#include <stdlib.h>
/* Definitions for Windows/Unix exporting */
#if defined(__WIN32__)
#   if defined(_MSC_VER)
#	define SWIGEXPORT(a,b) __declspec(dllexport) a b
#   else
#	if defined(__BORLANDC__)
#	    define SWIGEXPORT(a,b) a _export b
#	else
#	    define SWIGEXPORT(a,b) a b
#	endif
#   endif
#else
#   define SWIGEXPORT(a,b) a b
#endif

#ifdef __cplusplus
extern "C" {
#endif
#include "Python.h"
extern void SWIG_MakePtr(char *, void *, char *);
extern void SWIG_RegisterMapping(char *, char *, void *(*)(void *));
extern char *SWIG_GetPtr(char *, void **, char *);
extern void SWIG_addvarlink(PyObject *, char *, PyObject *(*)(void), int (*)(PyObject *));
extern PyObject *SWIG_newvarlink(void);
#ifdef __cplusplus
}
#endif

#define SWIG_init    initMessagec

#define SWIG_name    "Messagec"

#include   "Mpch.h"
#include   "Mcommon.h"   
#include   "Message.h"
#include   "kbList.h"
   
// we don't want to export our functions as we don't build a shared library
#undef SWIGEXPORT
#define SWIGEXPORT(a,b) a b

static PyObject *_wrap_python_const_MAT_FROM;
static PyObject *_wrap_python_const_MAT_SENDER;
static PyObject *_wrap_python_const_MAT_REPLYTO;
static PyObject *_wrap_python_const_Message_MSG_TYPETEXT;
static PyObject *_wrap_python_const_Message_MSG_TYPEMULTIPART;
static PyObject *_wrap_python_const_Message_MSG_TYPEMESSAGE;
static PyObject *_wrap_python_const_Message_MSG_TYPEAPPLICATION;
static PyObject *_wrap_python_const_Message_MSG_TYPEAUDIO;
static PyObject *_wrap_python_const_Message_MSG_TYPEIMAGE;
static PyObject *_wrap_python_const_Message_MSG_TYPEVIDEO;
static PyObject *_wrap_python_const_Message_MSG_TYPEMODEL;
static PyObject *_wrap_python_const_Message_MSG_TYPEOTHER;
static PyObject *_wrap_python_const_Message_MSG_TYPEMAX;
static String * MessageParameter_name_set(MessageParameter *obj, String *val) {
    obj->name = *(val);
    return (String *) val;
}
static PyObject *_wrap_MessageParameter_name_set(PyObject *self, PyObject *args) {
    PyObject * _resultobj;
    String * _result;
    MessageParameter * _arg0;
    String * _arg1;
    char * _argc0 = 0;
    char * _argc1 = 0;
    char _ptemp[128];

    self = self;
    if(!PyArg_ParseTuple(args,"ss:MessageParameter_name_set",&_argc0,&_argc1)) 
        return NULL;
    if (_argc0) {
        if (SWIG_GetPtr(_argc0,(void **) &_arg0,"_MessageParameter_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of MessageParameter_name_set. Expected _MessageParameter_p.");
        return NULL;
        }
    }
    if (_argc1) {
        if (SWIG_GetPtr(_argc1,(void **) &_arg1,"_String_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 2 of MessageParameter_name_set. Expected _String_p.");
        return NULL;
        }
    }
    _result = (String *)MessageParameter_name_set(_arg0,_arg1);
    SWIG_MakePtr(_ptemp, (char *) _result,"_String_p");
    _resultobj = Py_BuildValue("s",_ptemp);
    return _resultobj;
}

static String * MessageParameter_name_get(MessageParameter *obj) {
    String * result;
    result = (String *)&obj->name;
    return result;
}

static PyObject *_wrap_MessageParameter_name_get(PyObject *self, PyObject *args) {
    PyObject * _resultobj;
    String * _result;
    MessageParameter * _arg0;
    char * _argc0 = 0;
    char _ptemp[128];

    self = self;
    if(!PyArg_ParseTuple(args,"s:MessageParameter_name_get",&_argc0)) 
        return NULL;
    if (_argc0) {
        if (SWIG_GetPtr(_argc0,(void **) &_arg0,"_MessageParameter_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of MessageParameter_name_get. Expected _MessageParameter_p.");
        return NULL;
        }
    }
    _result = (String *)MessageParameter_name_get(_arg0);
    SWIG_MakePtr(_ptemp, (char *) _result,"_String_p");
    _resultobj = Py_BuildValue("s",_ptemp);
    return _resultobj;
}

static String * MessageParameter_value_set(MessageParameter *obj, String *val) {
    obj->value = *(val);
    return (String *) val;
}
static PyObject *_wrap_MessageParameter_value_set(PyObject *self, PyObject *args) {
    PyObject * _resultobj;
    String * _result;
    MessageParameter * _arg0;
    String * _arg1;
    char * _argc0 = 0;
    char * _argc1 = 0;
    char _ptemp[128];

    self = self;
    if(!PyArg_ParseTuple(args,"ss:MessageParameter_value_set",&_argc0,&_argc1)) 
        return NULL;
    if (_argc0) {
        if (SWIG_GetPtr(_argc0,(void **) &_arg0,"_MessageParameter_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of MessageParameter_value_set. Expected _MessageParameter_p.");
        return NULL;
        }
    }
    if (_argc1) {
        if (SWIG_GetPtr(_argc1,(void **) &_arg1,"_String_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 2 of MessageParameter_value_set. Expected _String_p.");
        return NULL;
        }
    }
    _result = (String *)MessageParameter_value_set(_arg0,_arg1);
    SWIG_MakePtr(_ptemp, (char *) _result,"_String_p");
    _resultobj = Py_BuildValue("s",_ptemp);
    return _resultobj;
}

static String * MessageParameter_value_get(MessageParameter *obj) {
    String * result;
    result = (String *)&obj->value;
    return result;
}

static PyObject *_wrap_MessageParameter_value_get(PyObject *self, PyObject *args) {
    PyObject * _resultobj;
    String * _result;
    MessageParameter * _arg0;
    char * _argc0 = 0;
    char _ptemp[128];

    self = self;
    if(!PyArg_ParseTuple(args,"s:MessageParameter_value_get",&_argc0)) 
        return NULL;
    if (_argc0) {
        if (SWIG_GetPtr(_argc0,(void **) &_arg0,"_MessageParameter_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of MessageParameter_value_get. Expected _MessageParameter_p.");
        return NULL;
        }
    }
    _result = (String *)MessageParameter_value_get(_arg0);
    SWIG_MakePtr(_ptemp, (char *) _result,"_String_p");
    _resultobj = Py_BuildValue("s",_ptemp);
    return _resultobj;
}

static void  Message_GetHeaderLine(Message *obj,const String *_arg0,String *_arg1) {
    obj->GetHeaderLine(*_arg0,*_arg1);
}
static PyObject *_wrap_Message_GetHeaderLine(PyObject *self, PyObject *args) {
    PyObject * _resultobj;
    Message * _arg0;
    String * _arg1;
    String * _arg2;
    char * _argc0 = 0;
    char * _argc1 = 0;
    char * _argc2 = 0;

    self = self;
    if(!PyArg_ParseTuple(args,"sss:Message_GetHeaderLine",&_argc0,&_argc1,&_argc2)) 
        return NULL;
    if (_argc0) {
        if (SWIG_GetPtr(_argc0,(void **) &_arg0,"_Message_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of Message_GetHeaderLine. Expected _Message_p.");
        return NULL;
        }
    }
    if (_argc1) {
        if (SWIG_GetPtr(_argc1,(void **) &_arg1,"_String_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 2 of Message_GetHeaderLine. Expected _String_p.");
        return NULL;
        }
    }
    if (_argc2) {
        if (SWIG_GetPtr(_argc2,(void **) &_arg2,"_String_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 3 of Message_GetHeaderLine. Expected _String_p.");
        return NULL;
        }
    }
    Message_GetHeaderLine(_arg0,_arg1,_arg2);
    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

static char * Message_GetHeader(Message *obj) {
    char * _result = (char *)obj->GetHeader();
    return _result;
}
static PyObject *_wrap_Message_GetHeader(PyObject *self, PyObject *args) {
    PyObject * _resultobj;
    char * _result;
    Message * _arg0;
    char * _argc0 = 0;

    self = self;
    if(!PyArg_ParseTuple(args,"s:Message_GetHeader",&_argc0)) 
        return NULL;
    if (_argc0) {
        if (SWIG_GetPtr(_argc0,(void **) &_arg0,"_Message_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of Message_GetHeader. Expected _Message_p.");
        return NULL;
        }
    }
    _result = (char *)Message_GetHeader(_arg0);
    _resultobj = Py_BuildValue("s", _result);
    return _resultobj;
}

static String * Message_Subject(Message *obj) {
    const String & _result = obj->Subject();
    return (String *) &_result;
}
static PyObject *_wrap_Message_Subject(PyObject *self, PyObject *args) {
    PyObject * _resultobj;
    String * _result;
    Message * _arg0;
    char * _argc0 = 0;
    char _ptemp[128];

    self = self;
    if(!PyArg_ParseTuple(args,"s:Message_Subject",&_argc0)) 
        return NULL;
    if (_argc0) {
        if (SWIG_GetPtr(_argc0,(void **) &_arg0,"_Message_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of Message_Subject. Expected _Message_p.");
        return NULL;
        }
    }
    _result = (String *)Message_Subject(_arg0);
    SWIG_MakePtr(_ptemp, (char *) _result,"_String_p");
    _resultobj = Py_BuildValue("s",_ptemp);
    return _resultobj;
}

static String  Message_Address(Message *obj,String *_arg0,MessageAddressType _arg1) {
    String  _result = (String )obj->Address(*_arg0,_arg1);
    return _result;
}
static PyObject *_wrap_Message_Address(PyObject *self, PyObject *args) {
    PyObject * _resultobj;
    String * _result;
    Message * _arg0;
    String * _arg1;
    MessageAddressType  _arg2 = (MAT_FROM);
    char * _argc0 = 0;
    char * _argc1 = 0;
    char _ptemp[128];

    self = self;
    if(!PyArg_ParseTuple(args,"ss|i:Message_Address",&_argc0,&_argc1,&_arg2)) 
        return NULL;
    if (_argc0) {
        if (SWIG_GetPtr(_argc0,(void **) &_arg0,"_Message_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of Message_Address. Expected _Message_p.");
        return NULL;
        }
    }
    if (_argc1) {
        if (SWIG_GetPtr(_argc1,(void **) &_arg1,"_String_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 2 of Message_Address. Expected _String_p.");
        return NULL;
        }
    }
    _result = new String (Message_Address(_arg0,_arg1,_arg2));
    SWIG_MakePtr(_ptemp, (void *) _result,"_String_p");
    _resultobj = Py_BuildValue("s",_ptemp);
    return _resultobj;
}

static String  Message_From(Message *obj) {
    String  _result = (String )obj->From();
    return _result;
}
static PyObject *_wrap_Message_From(PyObject *self, PyObject *args) {
    PyObject * _resultobj;
    String * _result;
    Message * _arg0;
    char * _argc0 = 0;
    char _ptemp[128];

    self = self;
    if(!PyArg_ParseTuple(args,"s:Message_From",&_argc0)) 
        return NULL;
    if (_argc0) {
        if (SWIG_GetPtr(_argc0,(void **) &_arg0,"_Message_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of Message_From. Expected _Message_p.");
        return NULL;
        }
    }
    _result = new String (Message_From(_arg0));
    SWIG_MakePtr(_ptemp, (void *) _result,"_String_p");
    _resultobj = Py_BuildValue("s",_ptemp);
    return _resultobj;
}

static String * Message_Date(Message *obj) {
    const String & _result = obj->Date();
    return (String *) &_result;
}
static PyObject *_wrap_Message_Date(PyObject *self, PyObject *args) {
    PyObject * _resultobj;
    String * _result;
    Message * _arg0;
    char * _argc0 = 0;
    char _ptemp[128];

    self = self;
    if(!PyArg_ParseTuple(args,"s:Message_Date",&_argc0)) 
        return NULL;
    if (_argc0) {
        if (SWIG_GetPtr(_argc0,(void **) &_arg0,"_Message_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of Message_Date. Expected _Message_p.");
        return NULL;
        }
    }
    _result = (String *)Message_Date(_arg0);
    SWIG_MakePtr(_ptemp, (char *) _result,"_String_p");
    _resultobj = Py_BuildValue("s",_ptemp);
    return _resultobj;
}

static char * Message_FetchText(Message *obj) {
    char * _result = (char *)obj->FetchText();
    return _result;
}
static PyObject *_wrap_Message_FetchText(PyObject *self, PyObject *args) {
    PyObject * _resultobj;
    char * _result;
    Message * _arg0;
    char * _argc0 = 0;

    self = self;
    if(!PyArg_ParseTuple(args,"s:Message_FetchText",&_argc0)) 
        return NULL;
    if (_argc0) {
        if (SWIG_GetPtr(_argc0,(void **) &_arg0,"_Message_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of Message_FetchText. Expected _Message_p.");
        return NULL;
        }
    }
    _result = (char *)Message_FetchText(_arg0);
    _resultobj = Py_BuildValue("s", _result);
    return _resultobj;
}

static int  Message_CountParts(Message *obj) {
    int  _result = (int )obj->CountParts();
    return _result;
}
static PyObject *_wrap_Message_CountParts(PyObject *self, PyObject *args) {
    PyObject * _resultobj;
    int  _result;
    Message * _arg0;
    char * _argc0 = 0;

    self = self;
    if(!PyArg_ParseTuple(args,"s:Message_CountParts",&_argc0)) 
        return NULL;
    if (_argc0) {
        if (SWIG_GetPtr(_argc0,(void **) &_arg0,"_Message_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of Message_CountParts. Expected _Message_p.");
        return NULL;
        }
    }
    _result = (int )Message_CountParts(_arg0);
    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

static char * Message_GetPartContent(Message *obj,int _arg0,unsigned long *_arg1) {
    char * _result = (char *)obj->GetPartContent(_arg0,_arg1);
    return _result;
}
static PyObject *_wrap_Message_GetPartContent(PyObject *self, PyObject *args) {
    PyObject * _resultobj;
    char * _result;
    Message * _arg0;
    int  _arg1 = 0;
    unsigned long * _arg2 = NULL;
    char * _argc0 = 0;
    char * _argc2 = 0;

    self = self;
    if(!PyArg_ParseTuple(args,"s|is:Message_GetPartContent",&_argc0,&_arg1,&_argc2)) 
        return NULL;
    if (_argc0) {
        if (SWIG_GetPtr(_argc0,(void **) &_arg0,"_Message_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of Message_GetPartContent. Expected _Message_p.");
        return NULL;
        }
    }
    if (_argc2) {
        if (SWIG_GetPtr(_argc2,(void **) &_arg2,"_unsigned_long_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 3 of Message_GetPartContent. Expected _unsigned_long_p.");
        return NULL;
        }
    }
    _result = (char *)Message_GetPartContent(_arg0,_arg1,_arg2);
    _resultobj = Py_BuildValue("s", _result);
    return _resultobj;
}

static int  Message_GetPartType(Message *obj,int _arg0) {
    int  _result = (int )obj->GetPartType(_arg0);
    return _result;
}
static PyObject *_wrap_Message_GetPartType(PyObject *self, PyObject *args) {
    PyObject * _resultobj;
    int  _result;
    Message * _arg0;
    int  _arg1 = 0;
    char * _argc0 = 0;

    self = self;
    if(!PyArg_ParseTuple(args,"s|i:Message_GetPartType",&_argc0,&_arg1)) 
        return NULL;
    if (_argc0) {
        if (SWIG_GetPtr(_argc0,(void **) &_arg0,"_Message_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of Message_GetPartType. Expected _Message_p.");
        return NULL;
        }
    }
    _result = (int )Message_GetPartType(_arg0,_arg1);
    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

static int  Message_GetPartEncoding(Message *obj,int _arg0) {
    int  _result = (int )obj->GetPartEncoding(_arg0);
    return _result;
}
static PyObject *_wrap_Message_GetPartEncoding(PyObject *self, PyObject *args) {
    PyObject * _resultobj;
    int  _result;
    Message * _arg0;
    int  _arg1 = 0;
    char * _argc0 = 0;

    self = self;
    if(!PyArg_ParseTuple(args,"s|i:Message_GetPartEncoding",&_argc0,&_arg1)) 
        return NULL;
    if (_argc0) {
        if (SWIG_GetPtr(_argc0,(void **) &_arg0,"_Message_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of Message_GetPartEncoding. Expected _Message_p.");
        return NULL;
        }
    }
    _result = (int )Message_GetPartEncoding(_arg0,_arg1);
    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

static size_t  Message_GetPartSize(Message *obj,int _arg0,bool _arg1) {
    size_t  _result = (size_t )obj->GetPartSize(_arg0,_arg1);
    return _result;
}
static PyObject *_wrap_Message_GetPartSize(PyObject *self, PyObject *args) {
    PyObject * _resultobj;
    size_t * _result;
    Message * _arg0;
    int  _arg1 = 0;
    bool  _arg2 = false;
    char * _argc0 = 0;
    char _ptemp[128];

    self = self;
    if(!PyArg_ParseTuple(args,"s|ii:Message_GetPartSize",&_argc0,&_arg1,&_arg2)) 
        return NULL;
    if (_argc0) {
        if (SWIG_GetPtr(_argc0,(void **) &_arg0,"_Message_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of Message_GetPartSize. Expected _Message_p.");
        return NULL;
        }
    }
    _result = new size_t (Message_GetPartSize(_arg0,_arg1,_arg2));
    SWIG_MakePtr(_ptemp, (void *) _result,"_size_t_p");
    _resultobj = Py_BuildValue("s",_ptemp);
    return _resultobj;
}

static MessageParameterList * Message_GetParameters(Message *obj,int _arg0) {
    MessageParameterList & _result = obj->GetParameters(_arg0);
    return (MessageParameterList *) &_result;
}
static PyObject *_wrap_Message_GetParameters(PyObject *self, PyObject *args) {
    PyObject * _resultobj;
    MessageParameterList * _result;
    Message * _arg0;
    int  _arg1 = -1;
    char * _argc0 = 0;
    char _ptemp[128];

    self = self;
    if(!PyArg_ParseTuple(args,"s|i:Message_GetParameters",&_argc0,&_arg1)) 
        return NULL;
    if (_argc0) {
        if (SWIG_GetPtr(_argc0,(void **) &_arg0,"_Message_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of Message_GetParameters. Expected _Message_p.");
        return NULL;
        }
    }
    _result = (MessageParameterList *)Message_GetParameters(_arg0,_arg1);
    SWIG_MakePtr(_ptemp, (char *) _result,"_MessageParameterList_p");
    _resultobj = Py_BuildValue("s",_ptemp);
    return _resultobj;
}

static MessageParameterList * Message_GetDisposition(Message *obj,int _arg0,String *_arg1) {
    MessageParameterList & _result = obj->GetDisposition(_arg0,_arg1);
    return (MessageParameterList *) &_result;
}
static PyObject *_wrap_Message_GetDisposition(PyObject *self, PyObject *args) {
    PyObject * _resultobj;
    MessageParameterList * _result;
    Message * _arg0;
    int  _arg1 = -1;
    String * _arg2 = NULL;
    char * _argc0 = 0;
    char * _argc2 = 0;
    char _ptemp[128];

    self = self;
    if(!PyArg_ParseTuple(args,"s|is:Message_GetDisposition",&_argc0,&_arg1,&_argc2)) 
        return NULL;
    if (_argc0) {
        if (SWIG_GetPtr(_argc0,(void **) &_arg0,"_Message_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of Message_GetDisposition. Expected _Message_p.");
        return NULL;
        }
    }
    if (_argc2) {
        if (SWIG_GetPtr(_argc2,(void **) &_arg2,"_String_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 3 of Message_GetDisposition. Expected _String_p.");
        return NULL;
        }
    }
    _result = (MessageParameterList *)Message_GetDisposition(_arg0,_arg1,_arg2);
    SWIG_MakePtr(_ptemp, (char *) _result,"_MessageParameterList_p");
    _resultobj = Py_BuildValue("s",_ptemp);
    return _resultobj;
}

static bool  Message_ExpandParameter(Message *obj,MessageParameterList *_arg0,String *_arg1,String *_arg2) {
    bool  _result = (bool )obj->ExpandParameter(*_arg0,*_arg1,_arg2);
    return _result;
}
static PyObject *_wrap_Message_ExpandParameter(PyObject *self, PyObject *args) {
    PyObject * _resultobj;
    bool  _result;
    Message * _arg0;
    MessageParameterList * _arg1;
    String * _arg2;
    String * _arg3;
    char * _argc0 = 0;
    char * _argc1 = 0;
    char * _argc2 = 0;
    char * _argc3 = 0;

    self = self;
    if(!PyArg_ParseTuple(args,"ssss:Message_ExpandParameter",&_argc0,&_argc1,&_argc2,&_argc3)) 
        return NULL;
    if (_argc0) {
        if (SWIG_GetPtr(_argc0,(void **) &_arg0,"_Message_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of Message_ExpandParameter. Expected _Message_p.");
        return NULL;
        }
    }
    if (_argc1) {
        if (SWIG_GetPtr(_argc1,(void **) &_arg1,"_MessageParameterList_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 2 of Message_ExpandParameter. Expected _MessageParameterList_p.");
        return NULL;
        }
    }
    if (_argc2) {
        if (SWIG_GetPtr(_argc2,(void **) &_arg2,"_String_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 3 of Message_ExpandParameter. Expected _String_p.");
        return NULL;
        }
    }
    if (_argc3) {
        if (SWIG_GetPtr(_argc3,(void **) &_arg3,"_String_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 4 of Message_ExpandParameter. Expected _String_p.");
        return NULL;
        }
    }
    _result = (bool )Message_ExpandParameter(_arg0,_arg1,_arg2,_arg3);
    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

static String * Message_GetPartMimeType(Message *obj,int _arg0) {
    String & _result = obj->GetPartMimeType(_arg0);
    return (String *) &_result;
}
static PyObject *_wrap_Message_GetPartMimeType(PyObject *self, PyObject *args) {
    PyObject * _resultobj;
    String * _result;
    Message * _arg0;
    int  _arg1 = 0;
    char * _argc0 = 0;
    char _ptemp[128];

    self = self;
    if(!PyArg_ParseTuple(args,"s|i:Message_GetPartMimeType",&_argc0,&_arg1)) 
        return NULL;
    if (_argc0) {
        if (SWIG_GetPtr(_argc0,(void **) &_arg0,"_Message_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of Message_GetPartMimeType. Expected _Message_p.");
        return NULL;
        }
    }
    _result = (String *)Message_GetPartMimeType(_arg0,_arg1);
    SWIG_MakePtr(_ptemp, (char *) _result,"_String_p");
    _resultobj = Py_BuildValue("s",_ptemp);
    return _resultobj;
}

static String * Message_GetPartDesc(Message *obj,int _arg0) {
    String & _result = obj->GetPartDesc(_arg0);
    return (String *) &_result;
}
static PyObject *_wrap_Message_GetPartDesc(PyObject *self, PyObject *args) {
    PyObject * _resultobj;
    String * _result;
    Message * _arg0;
    int  _arg1 = 0;
    char * _argc0 = 0;
    char _ptemp[128];

    self = self;
    if(!PyArg_ParseTuple(args,"s|i:Message_GetPartDesc",&_argc0,&_arg1)) 
        return NULL;
    if (_argc0) {
        if (SWIG_GetPtr(_argc0,(void **) &_arg0,"_Message_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of Message_GetPartDesc. Expected _Message_p.");
        return NULL;
        }
    }
    _result = (String *)Message_GetPartDesc(_arg0,_arg1);
    SWIG_MakePtr(_ptemp, (char *) _result,"_String_p");
    _resultobj = Py_BuildValue("s",_ptemp);
    return _resultobj;
}

static String * Message_GetPartSpec(Message *obj,int _arg0) {
    String & _result = obj->GetPartSpec(_arg0);
    return (String *) &_result;
}
static PyObject *_wrap_Message_GetPartSpec(PyObject *self, PyObject *args) {
    PyObject * _resultobj;
    String * _result;
    Message * _arg0;
    int  _arg1 = 0;
    char * _argc0 = 0;
    char _ptemp[128];

    self = self;
    if(!PyArg_ParseTuple(args,"s|i:Message_GetPartSpec",&_argc0,&_arg1)) 
        return NULL;
    if (_argc0) {
        if (SWIG_GetPtr(_argc0,(void **) &_arg0,"_Message_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of Message_GetPartSpec. Expected _Message_p.");
        return NULL;
        }
    }
    _result = (String *)Message_GetPartSpec(_arg0,_arg1);
    SWIG_MakePtr(_ptemp, (char *) _result,"_String_p");
    _resultobj = Py_BuildValue("s",_ptemp);
    return _resultobj;
}

static void  Message_WriteString(Message *obj,String *_arg0) {
    obj->WriteString(*_arg0);
}
static PyObject *_wrap_Message_WriteString(PyObject *self, PyObject *args) {
    PyObject * _resultobj;
    Message * _arg0;
    String * _arg1;
    char * _argc0 = 0;
    char * _argc1 = 0;

    self = self;
    if(!PyArg_ParseTuple(args,"ss:Message_WriteString",&_argc0,&_argc1)) 
        return NULL;
    if (_argc0) {
        if (SWIG_GetPtr(_argc0,(void **) &_arg0,"_Message_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of Message_WriteString. Expected _Message_p.");
        return NULL;
        }
    }
    if (_argc1) {
        if (SWIG_GetPtr(_argc1,(void **) &_arg1,"_String_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 2 of Message_WriteString. Expected _String_p.");
        return NULL;
        }
    }
    Message_WriteString(_arg0,_arg1);
    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

static void  Message_WriteToString(Message *obj,String *_arg0,bool _arg1) {
    obj->WriteToString(*_arg0,_arg1);
}
static PyObject *_wrap_Message_WriteToString(PyObject *self, PyObject *args) {
    PyObject * _resultobj;
    Message * _arg0;
    String * _arg1;
    bool  _arg2 = true;
    char * _argc0 = 0;
    char * _argc1 = 0;

    self = self;
    if(!PyArg_ParseTuple(args,"ss|i:Message_WriteToString",&_argc0,&_argc1,&_arg2)) 
        return NULL;
    if (_argc0) {
        if (SWIG_GetPtr(_argc0,(void **) &_arg0,"_Message_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of Message_WriteToString. Expected _Message_p.");
        return NULL;
        }
    }
    if (_argc1) {
        if (SWIG_GetPtr(_argc1,(void **) &_arg1,"_String_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 2 of Message_WriteToString. Expected _String_p.");
        return NULL;
        }
    }
    Message_WriteToString(_arg0,_arg1,_arg2);
    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

static void delete_Message(Message *obj) {
    delete obj;
}
static PyObject *_wrap_delete_Message(PyObject *self, PyObject *args) {
    PyObject * _resultobj;
    Message * _arg0;
    char * _argc0 = 0;

    self = self;
    if(!PyArg_ParseTuple(args,"s:delete_Message",&_argc0)) 
        return NULL;
    if (_argc0) {
        if (SWIG_GetPtr(_argc0,(void **) &_arg0,"_Message_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of delete_Message. Expected _Message_p.");
        return NULL;
        }
    }
    delete_Message(_arg0);
    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

static bool  Message_IsInitialised(Message *obj) {
    bool  _result = (bool )obj->IsInitialised();
    return _result;
}
static PyObject *_wrap_Message_IsInitialised(PyObject *self, PyObject *args) {
    PyObject * _resultobj;
    bool  _result;
    Message * _arg0;
    char * _argc0 = 0;

    self = self;
    if(!PyArg_ParseTuple(args,"s:Message_IsInitialised",&_argc0)) 
        return NULL;
    if (_argc0) {
        if (SWIG_GetPtr(_argc0,(void **) &_arg0,"_Message_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of Message_IsInitialised. Expected _Message_p.");
        return NULL;
        }
    }
    _result = (bool )Message_IsInitialised(_arg0);
    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

static char * Message_GetClassName(Message *obj) {
    char * _result = (char *)obj->GetClassName();
    return _result;
}
static PyObject *_wrap_Message_GetClassName(PyObject *self, PyObject *args) {
    PyObject * _resultobj;
    char * _result;
    Message * _arg0;
    char * _argc0 = 0;

    self = self;
    if(!PyArg_ParseTuple(args,"s:Message_GetClassName",&_argc0)) 
        return NULL;
    if (_argc0) {
        if (SWIG_GetPtr(_argc0,(void **) &_arg0,"_Message_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of Message_GetClassName. Expected _Message_p.");
        return NULL;
        }
    }
    _result = (char *)Message_GetClassName(_arg0);
    _resultobj = Py_BuildValue("s", _result);
    return _resultobj;
}

static PyMethodDef MessagecMethods[] = {
	 { "Message_GetClassName", _wrap_Message_GetClassName, 1 },
	 { "Message_IsInitialised", _wrap_Message_IsInitialised, 1 },
	 { "delete_Message", _wrap_delete_Message, 1 },
	 { "Message_WriteToString", _wrap_Message_WriteToString, 1 },
	 { "Message_WriteString", _wrap_Message_WriteString, 1 },
	 { "Message_GetPartSpec", _wrap_Message_GetPartSpec, 1 },
	 { "Message_GetPartDesc", _wrap_Message_GetPartDesc, 1 },
	 { "Message_GetPartMimeType", _wrap_Message_GetPartMimeType, 1 },
	 { "Message_ExpandParameter", _wrap_Message_ExpandParameter, 1 },
	 { "Message_GetDisposition", _wrap_Message_GetDisposition, 1 },
	 { "Message_GetParameters", _wrap_Message_GetParameters, 1 },
	 { "Message_GetPartSize", _wrap_Message_GetPartSize, 1 },
	 { "Message_GetPartEncoding", _wrap_Message_GetPartEncoding, 1 },
	 { "Message_GetPartType", _wrap_Message_GetPartType, 1 },
	 { "Message_GetPartContent", _wrap_Message_GetPartContent, 1 },
	 { "Message_CountParts", _wrap_Message_CountParts, 1 },
	 { "Message_FetchText", _wrap_Message_FetchText, 1 },
	 { "Message_Date", _wrap_Message_Date, 1 },
	 { "Message_From", _wrap_Message_From, 1 },
	 { "Message_Address", _wrap_Message_Address, 1 },
	 { "Message_Subject", _wrap_Message_Subject, 1 },
	 { "Message_GetHeader", _wrap_Message_GetHeader, 1 },
	 { "Message_GetHeaderLine", _wrap_Message_GetHeaderLine, 1 },
	 { "MessageParameter_value_get", _wrap_MessageParameter_value_get, 1 },
	 { "MessageParameter_value_set", _wrap_MessageParameter_value_set, 1 },
	 { "MessageParameter_name_get", _wrap_MessageParameter_name_get, 1 },
	 { "MessageParameter_name_set", _wrap_MessageParameter_name_set, 1 },
	 { NULL, NULL }
};
static PyObject *SWIG_globals;
#ifdef __cplusplus
extern "C" 
#endif
SWIGEXPORT(void,initMessagec)() {
	 PyObject *m, *d;
	 SWIG_globals = SWIG_newvarlink();
	 m = Py_InitModule("Messagec", MessagecMethods);
	 d = PyModule_GetDict(m);
	 _wrap_python_const_MAT_FROM = PyInt_FromLong(MAT_FROM);
	 PyDict_SetItemString(d,"MAT_FROM", _wrap_python_const_MAT_FROM);
	 _wrap_python_const_MAT_SENDER = PyInt_FromLong(MAT_SENDER);
	 PyDict_SetItemString(d,"MAT_SENDER", _wrap_python_const_MAT_SENDER);
	 _wrap_python_const_MAT_REPLYTO = PyInt_FromLong(MAT_REPLYTO);
	 PyDict_SetItemString(d,"MAT_REPLYTO", _wrap_python_const_MAT_REPLYTO);
	 _wrap_python_const_Message_MSG_TYPETEXT = PyInt_FromLong(Message::MSG_TYPETEXT);
	 PyDict_SetItemString(d,"Message_MSG_TYPETEXT", _wrap_python_const_Message_MSG_TYPETEXT);
	 _wrap_python_const_Message_MSG_TYPEMULTIPART = PyInt_FromLong(Message::MSG_TYPEMULTIPART);
	 PyDict_SetItemString(d,"Message_MSG_TYPEMULTIPART", _wrap_python_const_Message_MSG_TYPEMULTIPART);
	 _wrap_python_const_Message_MSG_TYPEMESSAGE = PyInt_FromLong(Message::MSG_TYPEMESSAGE);
	 PyDict_SetItemString(d,"Message_MSG_TYPEMESSAGE", _wrap_python_const_Message_MSG_TYPEMESSAGE);
	 _wrap_python_const_Message_MSG_TYPEAPPLICATION = PyInt_FromLong(Message::MSG_TYPEAPPLICATION);
	 PyDict_SetItemString(d,"Message_MSG_TYPEAPPLICATION", _wrap_python_const_Message_MSG_TYPEAPPLICATION);
	 _wrap_python_const_Message_MSG_TYPEAUDIO = PyInt_FromLong(Message::MSG_TYPEAUDIO);
	 PyDict_SetItemString(d,"Message_MSG_TYPEAUDIO", _wrap_python_const_Message_MSG_TYPEAUDIO);
	 _wrap_python_const_Message_MSG_TYPEIMAGE = PyInt_FromLong(Message::MSG_TYPEIMAGE);
	 PyDict_SetItemString(d,"Message_MSG_TYPEIMAGE", _wrap_python_const_Message_MSG_TYPEIMAGE);
	 _wrap_python_const_Message_MSG_TYPEVIDEO = PyInt_FromLong(Message::MSG_TYPEVIDEO);
	 PyDict_SetItemString(d,"Message_MSG_TYPEVIDEO", _wrap_python_const_Message_MSG_TYPEVIDEO);
	 _wrap_python_const_Message_MSG_TYPEMODEL = PyInt_FromLong(Message::MSG_TYPEMODEL);
	 PyDict_SetItemString(d,"Message_MSG_TYPEMODEL", _wrap_python_const_Message_MSG_TYPEMODEL);
	 _wrap_python_const_Message_MSG_TYPEOTHER = PyInt_FromLong(Message::MSG_TYPEOTHER);
	 PyDict_SetItemString(d,"Message_MSG_TYPEOTHER", _wrap_python_const_Message_MSG_TYPEOTHER);
	 _wrap_python_const_Message_MSG_TYPEMAX = PyInt_FromLong(Message::MSG_TYPEMAX);
	 PyDict_SetItemString(d,"Message_MSG_TYPEMAX", _wrap_python_const_Message_MSG_TYPEMAX);
/*
 * These are the pointer type-equivalency mappings. 
 * (Used by the SWIG pointer type-checker).
 */
	 SWIG_RegisterMapping("_signed_long","_long",0);
	 SWIG_RegisterMapping("_Message","_class_Message",0);
	 SWIG_RegisterMapping("_ProfileBase","_class_ProfileBase",0);
	 SWIG_RegisterMapping("_long","_unsigned_long",0);
	 SWIG_RegisterMapping("_long","_signed_long",0);
	 SWIG_RegisterMapping("_class_Message","_Message",0);
	 SWIG_RegisterMapping("_unsigned_long","_long",0);
	 SWIG_RegisterMapping("_signed_int","_int",0);
	 SWIG_RegisterMapping("_MObject","_class_MObject",0);
	 SWIG_RegisterMapping("_unsigned_short","_short",0);
	 SWIG_RegisterMapping("_signed_short","_short",0);
	 SWIG_RegisterMapping("_MObjectRC","_class_MObjectRC",0);
	 SWIG_RegisterMapping("_unsigned_int","_int",0);
	 SWIG_RegisterMapping("_class_ProfileBase","_ProfileBase",0);
	 SWIG_RegisterMapping("_short","_unsigned_short",0);
	 SWIG_RegisterMapping("_short","_signed_short",0);
	 SWIG_RegisterMapping("_String","_class_String",0);
	 SWIG_RegisterMapping("_MessageParameter","_class_MessageParameter",0);
	 SWIG_RegisterMapping("_int","_unsigned_int",0);
	 SWIG_RegisterMapping("_int","_signed_int",0);
	 SWIG_RegisterMapping("_class_MObjectRC","_MObjectRC",0);
	 SWIG_RegisterMapping("_class_MObject","_MObject",0);
	 SWIG_RegisterMapping("_class_String","_String",0);
	 SWIG_RegisterMapping("_class_MessageParameter","_MessageParameter",0);
}
