# This file was automatically generated by SWIG (http://www.swig.org).
# Version 1.3.40
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.
# This file is compatible with both classic and new-style classes.

from sys import version_info
if version_info >= (2,6,0):
    def swig_import_helper():
        from os.path import dirname
        import imp
        fp = None
        try:
            fp, pathname, description = imp.find_module('_HeaderInfo', [dirname(__file__)])
        except ImportError:
            import _HeaderInfo
            return _HeaderInfo
        if fp is not None:
            try:
                _mod = imp.load_module('_HeaderInfo', fp, pathname, description)
            finally:
                fp.close()
            return _mod
    _HeaderInfo = swig_import_helper()
    del swig_import_helper
else:
    import _HeaderInfo
del version_info
try:
    _swig_property = property
except NameError:
    pass # Python < 2.2 doesn't have 'property'.
def _swig_setattr_nondynamic(self,class_type,name,value,static=1):
    if (name == "thisown"): return self.this.own(value)
    if (name == "this"):
        if type(value).__name__ == 'SwigPyObject':
            self.__dict__[name] = value
            return
    method = class_type.__swig_setmethods__.get(name,None)
    if method: return method(self,value)
    if (not static) or hasattr(self,name):
        self.__dict__[name] = value
    else:
        raise AttributeError("You cannot add attributes to %s" % self)

def _swig_setattr(self,class_type,name,value):
    return _swig_setattr_nondynamic(self,class_type,name,value,0)

def _swig_getattr(self,class_type,name):
    if (name == "thisown"): return self.this.own()
    method = class_type.__swig_getmethods__.get(name,None)
    if method: return method(self)
    raise AttributeError(name)

def _swig_repr(self):
    try: strthis = "proxy of " + self.this.__repr__()
    except: strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)

try:
    _object = object
    _newclass = 1
except AttributeError:
    class _object : pass
    _newclass = 0


class HeaderInfo(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, HeaderInfo, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, HeaderInfo, name)
    __repr__ = _swig_repr
    def __init__(self): 
        this = _HeaderInfo.new_HeaderInfo()
        try: self.this.append(this)
        except: self.this = this
    def GetSubject(self): return _HeaderInfo.HeaderInfo_GetSubject(self)
    def GetFrom(self): return _HeaderInfo.HeaderInfo_GetFrom(self)
    def GetTo(self): return _HeaderInfo.HeaderInfo_GetTo(self)
    def GetNewsgroups(self): return _HeaderInfo.HeaderInfo_GetNewsgroups(self)
    def GetDate(self): return _HeaderInfo.HeaderInfo_GetDate(self)
    def GetId(self): return _HeaderInfo.HeaderInfo_GetId(self)
    def GetUId(self): return _HeaderInfo.HeaderInfo_GetUId(self)
    def GetReferences(self): return _HeaderInfo.HeaderInfo_GetReferences(self)
    def GetInReplyTo(self): return _HeaderInfo.HeaderInfo_GetInReplyTo(self)
    def GetStatus(self): return _HeaderInfo.HeaderInfo_GetStatus(self)
    def GetSize(self): return _HeaderInfo.HeaderInfo_GetSize(self)
    def GetLines(self): return _HeaderInfo.HeaderInfo_GetLines(self)
    def SetEncoding(self, *args): return _HeaderInfo.HeaderInfo_SetEncoding(self, *args)
    def GetEncoding(self): return _HeaderInfo.HeaderInfo_GetEncoding(self)
    def HasEncoding(self): return _HeaderInfo.HeaderInfo_HasEncoding(self)
    def IsValid(self): return _HeaderInfo.HeaderInfo_IsValid(self)
    Invalid = _HeaderInfo.HeaderInfo_Invalid
    From = _HeaderInfo.HeaderInfo_From
    To = _HeaderInfo.HeaderInfo_To
    Newsgroup = _HeaderInfo.HeaderInfo_Newsgroup
    __swig_getmethods__["GetFromOrTo"] = lambda x: _HeaderInfo.HeaderInfo_GetFromOrTo
    if _newclass:GetFromOrTo = staticmethod(_HeaderInfo.HeaderInfo_GetFromOrTo)
    __swig_destroy__ = _HeaderInfo.delete_HeaderInfo
    __del__ = lambda self : None;
HeaderInfo_swigregister = _HeaderInfo.HeaderInfo_swigregister
HeaderInfo_swigregister(HeaderInfo)

def HeaderInfo_GetFromOrTo(*args):
  return _HeaderInfo.HeaderInfo_GetFromOrTo(*args)
HeaderInfo_GetFromOrTo = _HeaderInfo.HeaderInfo_GetFromOrTo

class HeaderInfoList(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, HeaderInfoList, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, HeaderInfoList, name)
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    __swig_getmethods__["Create"] = lambda x: _HeaderInfo.HeaderInfoList_Create
    if _newclass:Create = staticmethod(_HeaderInfo.HeaderInfoList_Create)
    def Count(self): return _HeaderInfo.HeaderInfoList_Count(self)
    def GetItemByIndex(self, *args): return _HeaderInfo.HeaderInfoList_GetItemByIndex(self, *args)
    def GetItemByMsgno(self, *args): return _HeaderInfo.HeaderInfoList_GetItemByMsgno(self, *args)
    def GetItem(self, *args): return _HeaderInfo.HeaderInfoList_GetItem(self, *args)
    def GetIdxFromUId(self, *args): return _HeaderInfo.HeaderInfoList_GetIdxFromUId(self, *args)
    def GetEntryUId(self, *args): return _HeaderInfo.HeaderInfoList_GetEntryUId(self, *args)
    __swig_getmethods__["GetIdxFromMsgno"] = lambda x: _HeaderInfo.HeaderInfoList_GetIdxFromMsgno
    if _newclass:GetIdxFromMsgno = staticmethod(_HeaderInfo.HeaderInfoList_GetIdxFromMsgno)
    __swig_getmethods__["GetMsgnoFromIdx"] = lambda x: _HeaderInfo.HeaderInfoList_GetMsgnoFromIdx
    if _newclass:GetMsgnoFromIdx = staticmethod(_HeaderInfo.HeaderInfoList_GetMsgnoFromIdx)
    def GetIdxFromPos(self, *args): return _HeaderInfo.HeaderInfoList_GetIdxFromPos(self, *args)
    def GetPosFromIdx(self, *args): return _HeaderInfo.HeaderInfoList_GetPosFromIdx(self, *args)
    def GetOldPosFromIdx(self, *args): return _HeaderInfo.HeaderInfoList_GetOldPosFromIdx(self, *args)
    def GetIndentation(self, *args): return _HeaderInfo.HeaderInfoList_GetIndentation(self, *args)
    def OnRemove(self, *args): return _HeaderInfo.HeaderInfoList_OnRemove(self, *args)
    def OnAdd(self, *args): return _HeaderInfo.HeaderInfoList_OnAdd(self, *args)
    def OnClose(self): return _HeaderInfo.HeaderInfoList_OnClose(self)
    def FindHeaderByFlag(self, *args): return _HeaderInfo.HeaderInfoList_FindHeaderByFlag(self, *args)
    def FindHeaderByFlagWrap(self, *args): return _HeaderInfo.HeaderInfoList_FindHeaderByFlagWrap(self, *args)
    def GetAllHeadersByFlag(self, *args): return _HeaderInfo.HeaderInfoList_GetAllHeadersByFlag(self, *args)
    def SetSortOrder(self, *args): return _HeaderInfo.HeaderInfoList_SetSortOrder(self, *args)
    def SetThreadParameters(self, *args): return _HeaderInfo.HeaderInfoList_SetThreadParameters(self, *args)
    def GetLastMod(self): return _HeaderInfo.HeaderInfoList_GetLastMod(self)
    def HasChanged(self, *args): return _HeaderInfo.HeaderInfoList_HasChanged(self, *args)
    def CachePositions(self, *args): return _HeaderInfo.HeaderInfoList_CachePositions(self, *args)
    def CacheMsgnos(self, *args): return _HeaderInfo.HeaderInfoList_CacheMsgnos(self, *args)
    def IsInCache(self, *args): return _HeaderInfo.HeaderInfoList_IsInCache(self, *args)
    def ReallyGet(self, *args): return _HeaderInfo.HeaderInfoList_ReallyGet(self, *args)
    __swig_destroy__ = _HeaderInfo.delete_HeaderInfoList
    __del__ = lambda self : None;
HeaderInfoList_swigregister = _HeaderInfo.HeaderInfoList_swigregister
HeaderInfoList_swigregister(HeaderInfoList)

def HeaderInfoList_Create(*args):
  return _HeaderInfo.HeaderInfoList_Create(*args)
HeaderInfoList_Create = _HeaderInfo.HeaderInfoList_Create

def HeaderInfoList_GetIdxFromMsgno(*args):
  return _HeaderInfo.HeaderInfoList_GetIdxFromMsgno(*args)
HeaderInfoList_GetIdxFromMsgno = _HeaderInfo.HeaderInfoList_GetIdxFromMsgno

def HeaderInfoList_GetMsgnoFromIdx(*args):
  return _HeaderInfo.HeaderInfoList_GetMsgnoFromIdx(*args)
HeaderInfoList_GetMsgnoFromIdx = _HeaderInfo.HeaderInfoList_GetMsgnoFromIdx



