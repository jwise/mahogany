/*
 * FILE : ./MAppBase.cpp
 * 
 * This file was automatically generated by :
 * Simplified Wrapper and Interface Generator (SWIG)
 * Version 1.1 (Patch 5)
 * 
 * Portions Copyright (c) 1995-1998
 * The University of Utah and The Regents of the University of California.
 * Permission is granted to distribute this file in any manner provided
 * this notice remains intact.
 * 
 * Do not make changes to this file--changes will be lost!
 *
 */


#define SWIGCODE
/* Implementation : PYTHON */

#define SWIGPYTHON
#include <string.h>
#include <stdlib.h>
/* Definitions for Windows/Unix exporting */
#if defined(__WIN32__)
#   if defined(_MSC_VER)
#	define SWIGEXPORT(a,b) __declspec(dllexport) a b
#   else
#	if defined(__BORLANDC__)
#	    define SWIGEXPORT(a,b) a _export b
#	else
#	    define SWIGEXPORT(a,b) a b
#	endif
#   endif
#else
#   define SWIGEXPORT(a,b) a b
#endif

#ifdef __cplusplus
extern "C" {
#endif
#include "Python.h"
extern void SWIG_MakePtr(char *, void *, char *);
extern void SWIG_RegisterMapping(char *, char *, void *(*)(void *));
extern char *SWIG_GetPtr(char *, void **, char *);
extern void SWIG_addvarlink(PyObject *, char *, PyObject *(*)(void), int (*)(PyObject *));
extern PyObject *SWIG_newvarlink(void);
#ifdef __cplusplus
}
#endif

#define SWIG_init    initMAppBasec

#define SWIG_name    "MAppBasec"

#include	"Mpch.h"
#ifndef	USE_PCH
#   include   "Mcommon.h"
#   include   "strutil.h"
#   include   "Profile.h"
#   include   "MFrame.h"
#   include   "MLogFrame.h"
#   include   "MimeList.h"
#   include   "MimeTypes.h"
#   include   "Mdefaults.h"
#   include   "MApplication.h"
#   include   "wxMApp.h"
#   include   "gui/wxMDialogs.h"
#endif
static PyObject *_wrap_wxGetApp(PyObject *self, PyObject *args) {
    PyObject * _resultobj;
    MAppBase * _result;
    char _ptemp[128];

    self = self;
    if(!PyArg_ParseTuple(args,":wxGetApp")) 
        return NULL;
    MAppBase & _result_ref = wxGetApp();
    _result = (MAppBase *) &_result_ref;
    SWIG_MakePtr(_ptemp, (char *) _result,"_MAppBase_p");
    _resultobj = Py_BuildValue("s",_ptemp);
    return _resultobj;
}

static PyObject *_wrap_MDialog_ErrorMessage(PyObject *self, PyObject *args) {
    PyObject * _resultobj;
    char * _arg0;
    MFrame * _arg1 = NULL;
    char * _arg2 = MDIALOG_ERRTITLE;
    bool  _arg3 = false;
    char * _argc1 = 0;
    int tempbool3;

    self = self;
    if(!PyArg_ParseTuple(args,"s|ssi:MDialog_ErrorMessage",&_arg0,&_argc1,&_arg2,&tempbool3)) 
        return NULL;
    if (_argc1) {
        if (SWIG_GetPtr(_argc1,(void **) &_arg1,"_MFrame_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 2 of MDialog_ErrorMessage. Expected _MFrame_p.");
        return NULL;
        }
    }
    _arg3 = (bool ) tempbool3;
    MDialog_ErrorMessage(_arg0,_arg1,_arg2,_arg3);
    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

static PyObject *_wrap_MDialog_SystemErrorMessage(PyObject *self, PyObject *args) {
    PyObject * _resultobj;
    char * _arg0;
    MFrame * _arg1 = NULL;
    char * _arg2 = MDIALOG_SYSERRTITLE;
    bool  _arg3 = false;
    char * _argc1 = 0;
    int tempbool3;

    self = self;
    if(!PyArg_ParseTuple(args,"s|ssi:MDialog_SystemErrorMessage",&_arg0,&_argc1,&_arg2,&tempbool3)) 
        return NULL;
    if (_argc1) {
        if (SWIG_GetPtr(_argc1,(void **) &_arg1,"_MFrame_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 2 of MDialog_SystemErrorMessage. Expected _MFrame_p.");
        return NULL;
        }
    }
    _arg3 = (bool ) tempbool3;
    MDialog_SystemErrorMessage(_arg0,_arg1,_arg2,_arg3);
    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

static PyObject *_wrap_MDialog_FatalErrorMessage(PyObject *self, PyObject *args) {
    PyObject * _resultobj;
    char * _arg0;
    MFrame * _arg1 = NULL;
    char * _arg2 = MDIALOG_FATALERRTITLE;
    char * _argc1 = 0;

    self = self;
    if(!PyArg_ParseTuple(args,"s|ss:MDialog_FatalErrorMessage",&_arg0,&_argc1,&_arg2)) 
        return NULL;
    if (_argc1) {
        if (SWIG_GetPtr(_argc1,(void **) &_arg1,"_MFrame_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 2 of MDialog_FatalErrorMessage. Expected _MFrame_p.");
        return NULL;
        }
    }
    MDialog_FatalErrorMessage(_arg0,_arg1,_arg2);
    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

static PyObject *_wrap_MDialog_Message(PyObject *self, PyObject *args) {
    PyObject * _resultobj;
    char * _arg0;

    self = self;
    if(!PyArg_ParseTuple(args,"s:MDialog_Message",&_arg0)) 
        return NULL;
    MDialog_Message(_arg0);
    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

static PyObject *_wrap_MDialog_YesNoDialog(PyObject *self, PyObject *args) {
    PyObject * _resultobj;
    bool  _result;
    char * _arg0;
    MFrame * _arg1 = NULL;
    bool  _arg2 = false;
    char * _arg3 = MDIALOG_YESNOTITLE;
    bool  _arg4 = true;
    char * _argc1 = 0;
    int tempbool2;
    int tempbool4;

    self = self;
    if(!PyArg_ParseTuple(args,"s|sisi:MDialog_YesNoDialog",&_arg0,&_argc1,&tempbool2,&_arg3,&tempbool4)) 
        return NULL;
    if (_argc1) {
        if (SWIG_GetPtr(_argc1,(void **) &_arg1,"_MFrame_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 2 of MDialog_YesNoDialog. Expected _MFrame_p.");
        return NULL;
        }
    }
    _arg2 = (bool ) tempbool2;
    _arg4 = (bool ) tempbool4;
    _result = (bool )MDialog_YesNoDialog(_arg0,_arg1,_arg2,_arg3,_arg4);
    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

static PyObject *_wrap_MDialog_FileRequester(PyObject *self, PyObject *args) {
    PyObject * _resultobj;
    char * _result;
    String * _arg0;
    MWindow * _arg1 = NULL;
    String * _arg2 = &NULLstring;
    String * _arg3 = &NULLstring;
    String * _arg4 = &NULLstring;
    String * _arg5 = &NULLstring;
    bool  _arg6 = false;
    ProfileBase * _arg7 = NULL;
    char * _argc0 = 0;
    char * _argc1 = 0;
    char * _argc2 = 0;
    char * _argc3 = 0;
    char * _argc4 = 0;
    char * _argc5 = 0;
    int tempbool6;
    char * _argc7 = 0;

    self = self;
    if(!PyArg_ParseTuple(args,"s|sssssis:MDialog_FileRequester",&_argc0,&_argc1,&_argc2,&_argc3,&_argc4,&_argc5,&tempbool6,&_argc7)) 
        return NULL;
    if (_argc0) {
        if (SWIG_GetPtr(_argc0,(void **) &_arg0,"_String_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of MDialog_FileRequester. Expected _String_p.");
        return NULL;
        }
    }
    if (_argc1) {
        if (SWIG_GetPtr(_argc1,(void **) &_arg1,"_MWindow_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 2 of MDialog_FileRequester. Expected _MWindow_p.");
        return NULL;
        }
    }
    if (_argc2) {
        if (SWIG_GetPtr(_argc2,(void **) &_arg2,"_String_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 3 of MDialog_FileRequester. Expected _String_p.");
        return NULL;
        }
    }
    if (_argc3) {
        if (SWIG_GetPtr(_argc3,(void **) &_arg3,"_String_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 4 of MDialog_FileRequester. Expected _String_p.");
        return NULL;
        }
    }
    if (_argc4) {
        if (SWIG_GetPtr(_argc4,(void **) &_arg4,"_String_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 5 of MDialog_FileRequester. Expected _String_p.");
        return NULL;
        }
    }
    if (_argc5) {
        if (SWIG_GetPtr(_argc5,(void **) &_arg5,"_String_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 6 of MDialog_FileRequester. Expected _String_p.");
        return NULL;
        }
    }
    _arg6 = (bool ) tempbool6;
    if (_argc7) {
        if (SWIG_GetPtr(_argc7,(void **) &_arg7,"_ProfileBase_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 8 of MDialog_FileRequester. Expected _ProfileBase_p.");
        return NULL;
        }
    }
    _result = (char *)MDialog_FileRequester(*_arg0,_arg1,*_arg2,*_arg3,*_arg4,*_arg5,_arg6,_arg7);
    _resultobj = Py_BuildValue("s", _result);
    return _resultobj;
}

static PyObject *_wrap_MDialog_AdbLookupList(PyObject *self, PyObject *args) {
    PyObject * _resultobj;
    AdbEntry * _result;
    AdbExpandListType * _arg0;
    MFrame * _arg1 = NULL;
    char * _argc0 = 0;
    char * _argc1 = 0;
    char _ptemp[128];

    self = self;
    if(!PyArg_ParseTuple(args,"s|s:MDialog_AdbLookupList",&_argc0,&_argc1)) 
        return NULL;
    if (_argc0) {
        if (SWIG_GetPtr(_argc0,(void **) &_arg0,"_AdbExpandListType_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of MDialog_AdbLookupList. Expected _AdbExpandListType_p.");
        return NULL;
        }
    }
    if (_argc1) {
        if (SWIG_GetPtr(_argc1,(void **) &_arg1,"_MFrame_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 2 of MDialog_AdbLookupList. Expected _MFrame_p.");
        return NULL;
        }
    }
    _result = (AdbEntry *)MDialog_AdbLookupList(_arg0,_arg1);
    SWIG_MakePtr(_ptemp, (char *) _result,"_AdbEntry_p");
    _resultobj = Py_BuildValue("s",_ptemp);
    return _resultobj;
}

#define MAppBase_Exit(_swigobj,_swigarg0)  (_swigobj->Exit(_swigarg0))
static PyObject *_wrap_MAppBase_Exit(PyObject *self, PyObject *args) {
    PyObject * _resultobj;
    MAppBase * _arg0;
    int  _arg1;
    char * _argc0 = 0;

    self = self;
    if(!PyArg_ParseTuple(args,"si:MAppBase_Exit",&_argc0,&_arg1)) 
        return NULL;
    if (_argc0) {
        if (SWIG_GetPtr(_argc0,(void **) &_arg0,"_MAppBase_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of MAppBase_Exit. Expected _MAppBase_p.");
        return NULL;
        }
    }
    MAppBase_Exit(_arg0,_arg1);
    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define MAppBase_TopLevelFrame(_swigobj)  (_swigobj->TopLevelFrame())
static PyObject *_wrap_MAppBase_TopLevelFrame(PyObject *self, PyObject *args) {
    PyObject * _resultobj;
    MFrame * _result;
    MAppBase * _arg0;
    char * _argc0 = 0;
    char _ptemp[128];

    self = self;
    if(!PyArg_ParseTuple(args,"s:MAppBase_TopLevelFrame",&_argc0)) 
        return NULL;
    if (_argc0) {
        if (SWIG_GetPtr(_argc0,(void **) &_arg0,"_MAppBase_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of MAppBase_TopLevelFrame. Expected _MAppBase_p.");
        return NULL;
        }
    }
    _result = (MFrame *)MAppBase_TopLevelFrame(_arg0);
    SWIG_MakePtr(_ptemp, (char *) _result,"_MFrame_p");
    _resultobj = Py_BuildValue("s",_ptemp);
    return _resultobj;
}

#define MAppBase_GetText(_swigobj,_swigarg0)  (_swigobj->GetText(_swigarg0))
static PyObject *_wrap_MAppBase_GetText(PyObject *self, PyObject *args) {
    PyObject * _resultobj;
    char * _result;
    MAppBase * _arg0;
    char * _arg1;
    char * _argc0 = 0;

    self = self;
    if(!PyArg_ParseTuple(args,"ss:MAppBase_GetText",&_argc0,&_arg1)) 
        return NULL;
    if (_argc0) {
        if (SWIG_GetPtr(_argc0,(void **) &_arg0,"_MAppBase_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of MAppBase_GetText. Expected _MAppBase_p.");
        return NULL;
        }
    }
    _result = (char *)MAppBase_GetText(_arg0,_arg1);
    _resultobj = Py_BuildValue("s", _result);
    return _resultobj;
}

#define MAppBase_GetGlobalDir(_swigobj)  (_swigobj->GetGlobalDir())
static PyObject *_wrap_MAppBase_GetGlobalDir(PyObject *self, PyObject *args) {
    PyObject * _resultobj;
    String * _result;
    MAppBase * _arg0;
    char * _argc0 = 0;
    char _ptemp[128];

    self = self;
    if(!PyArg_ParseTuple(args,"s:MAppBase_GetGlobalDir",&_argc0)) 
        return NULL;
    if (_argc0) {
        if (SWIG_GetPtr(_argc0,(void **) &_arg0,"_MAppBase_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of MAppBase_GetGlobalDir. Expected _MAppBase_p.");
        return NULL;
        }
    }
    String & _result_ref = MAppBase_GetGlobalDir(_arg0);
    _result = (String *) &_result_ref;
    SWIG_MakePtr(_ptemp, (char *) _result,"_String_p");
    _resultobj = Py_BuildValue("s",_ptemp);
    return _resultobj;
}

#define MAppBase_GetLocalDir(_swigobj)  (_swigobj->GetLocalDir())
static PyObject *_wrap_MAppBase_GetLocalDir(PyObject *self, PyObject *args) {
    PyObject * _resultobj;
    String * _result;
    MAppBase * _arg0;
    char * _argc0 = 0;
    char _ptemp[128];

    self = self;
    if(!PyArg_ParseTuple(args,"s:MAppBase_GetLocalDir",&_argc0)) 
        return NULL;
    if (_argc0) {
        if (SWIG_GetPtr(_argc0,(void **) &_arg0,"_MAppBase_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of MAppBase_GetLocalDir. Expected _MAppBase_p.");
        return NULL;
        }
    }
    String & _result_ref = MAppBase_GetLocalDir(_arg0);
    _result = (String *) &_result_ref;
    SWIG_MakePtr(_ptemp, (char *) _result,"_String_p");
    _resultobj = Py_BuildValue("s",_ptemp);
    return _resultobj;
}

#define MAppBase_GetMimeList(_swigobj)  (_swigobj->GetMimeList())
static PyObject *_wrap_MAppBase_GetMimeList(PyObject *self, PyObject *args) {
    PyObject * _resultobj;
    MimeList * _result;
    MAppBase * _arg0;
    char * _argc0 = 0;
    char _ptemp[128];

    self = self;
    if(!PyArg_ParseTuple(args,"s:MAppBase_GetMimeList",&_argc0)) 
        return NULL;
    if (_argc0) {
        if (SWIG_GetPtr(_argc0,(void **) &_arg0,"_MAppBase_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of MAppBase_GetMimeList. Expected _MAppBase_p.");
        return NULL;
        }
    }
    _result = (MimeList *)MAppBase_GetMimeList(_arg0);
    SWIG_MakePtr(_ptemp, (char *) _result,"_MimeList_p");
    _resultobj = Py_BuildValue("s",_ptemp);
    return _resultobj;
}

#define MAppBase_GetMimeTypes(_swigobj)  (_swigobj->GetMimeTypes())
static PyObject *_wrap_MAppBase_GetMimeTypes(PyObject *self, PyObject *args) {
    PyObject * _resultobj;
    MimeTypes * _result;
    MAppBase * _arg0;
    char * _argc0 = 0;
    char _ptemp[128];

    self = self;
    if(!PyArg_ParseTuple(args,"s:MAppBase_GetMimeTypes",&_argc0)) 
        return NULL;
    if (_argc0) {
        if (SWIG_GetPtr(_argc0,(void **) &_arg0,"_MAppBase_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of MAppBase_GetMimeTypes. Expected _MAppBase_p.");
        return NULL;
        }
    }
    _result = (MimeTypes *)MAppBase_GetMimeTypes(_arg0);
    SWIG_MakePtr(_ptemp, (char *) _result,"_MimeTypes_p");
    _resultobj = Py_BuildValue("s",_ptemp);
    return _resultobj;
}

#define MAppBase_GetProfile(_swigobj)  (_swigobj->GetProfile())
static PyObject *_wrap_MAppBase_GetProfile(PyObject *self, PyObject *args) {
    PyObject * _resultobj;
    ProfileBase * _result;
    MAppBase * _arg0;
    char * _argc0 = 0;
    char _ptemp[128];

    self = self;
    if(!PyArg_ParseTuple(args,"s:MAppBase_GetProfile",&_argc0)) 
        return NULL;
    if (_argc0) {
        if (SWIG_GetPtr(_argc0,(void **) &_arg0,"_MAppBase_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of MAppBase_GetProfile. Expected _MAppBase_p.");
        return NULL;
        }
    }
    _result = (ProfileBase *)MAppBase_GetProfile(_arg0);
    SWIG_MakePtr(_ptemp, (char *) _result,"_ProfileBase_p");
    _resultobj = Py_BuildValue("s",_ptemp);
    return _resultobj;
}

#define MAppBase_GetAdb(_swigobj)  (_swigobj->GetAdb())
static PyObject *_wrap_MAppBase_GetAdb(PyObject *self, PyObject *args) {
    PyObject * _resultobj;
    Adb * _result;
    MAppBase * _arg0;
    char * _argc0 = 0;
    char _ptemp[128];

    self = self;
    if(!PyArg_ParseTuple(args,"s:MAppBase_GetAdb",&_argc0)) 
        return NULL;
    if (_argc0) {
        if (SWIG_GetPtr(_argc0,(void **) &_arg0,"_MAppBase_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of MAppBase_GetAdb. Expected _MAppBase_p.");
        return NULL;
        }
    }
    _result = (Adb *)MAppBase_GetAdb(_arg0);
    SWIG_MakePtr(_ptemp, (char *) _result,"_Adb_p");
    _resultobj = Py_BuildValue("s",_ptemp);
    return _resultobj;
}

static PyMethodDef MAppBasecMethods[] = {
	 { "MAppBase_GetAdb", _wrap_MAppBase_GetAdb, 1 },
	 { "MAppBase_GetProfile", _wrap_MAppBase_GetProfile, 1 },
	 { "MAppBase_GetMimeTypes", _wrap_MAppBase_GetMimeTypes, 1 },
	 { "MAppBase_GetMimeList", _wrap_MAppBase_GetMimeList, 1 },
	 { "MAppBase_GetLocalDir", _wrap_MAppBase_GetLocalDir, 1 },
	 { "MAppBase_GetGlobalDir", _wrap_MAppBase_GetGlobalDir, 1 },
	 { "MAppBase_GetText", _wrap_MAppBase_GetText, 1 },
	 { "MAppBase_TopLevelFrame", _wrap_MAppBase_TopLevelFrame, 1 },
	 { "MAppBase_Exit", _wrap_MAppBase_Exit, 1 },
	 { "MDialog_AdbLookupList", _wrap_MDialog_AdbLookupList, 1 },
	 { "MDialog_FileRequester", _wrap_MDialog_FileRequester, 1 },
	 { "MDialog_YesNoDialog", _wrap_MDialog_YesNoDialog, 1 },
	 { "MDialog_Message", _wrap_MDialog_Message, 1 },
	 { "MDialog_FatalErrorMessage", _wrap_MDialog_FatalErrorMessage, 1 },
	 { "MDialog_SystemErrorMessage", _wrap_MDialog_SystemErrorMessage, 1 },
	 { "MDialog_ErrorMessage", _wrap_MDialog_ErrorMessage, 1 },
	 { "wxGetApp", _wrap_wxGetApp, 1 },
	 { NULL, NULL }
};
static PyObject *SWIG_globals;
#ifdef __cplusplus
extern "C" 
#endif
SWIGEXPORT(void,initMAppBasec)() {
	 PyObject *m, *d;
	 SWIG_globals = SWIG_newvarlink();
	 m = Py_InitModule("MAppBasec", MAppBasecMethods);
	 d = PyModule_GetDict(m);
/*
 * These are the pointer type-equivalency mappings. 
 * (Used by the SWIG pointer type-checker).
 */
	 SWIG_RegisterMapping("_signed_long","_long",0);
	 SWIG_RegisterMapping("_MAppBase","_class_MAppBase",0);
	 SWIG_RegisterMapping("_long","_unsigned_long",0);
	 SWIG_RegisterMapping("_long","_signed_long",0);
	 SWIG_RegisterMapping("_unsigned_long","_long",0);
	 SWIG_RegisterMapping("_signed_int","_int",0);
	 SWIG_RegisterMapping("_unsigned_short","_short",0);
	 SWIG_RegisterMapping("_class_MAppBase","_MAppBase",0);
	 SWIG_RegisterMapping("_signed_short","_short",0);
	 SWIG_RegisterMapping("_unsigned_int","_int",0);
	 SWIG_RegisterMapping("_short","_unsigned_short",0);
	 SWIG_RegisterMapping("_short","_signed_short",0);
	 SWIG_RegisterMapping("_String","_class_String",0);
	 SWIG_RegisterMapping("_int","_unsigned_int",0);
	 SWIG_RegisterMapping("_int","_signed_int",0);
	 SWIG_RegisterMapping("_class_String","_String",0);
}
