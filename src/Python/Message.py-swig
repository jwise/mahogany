# This file was automatically generated by SWIG (http://www.swig.org).
# Version 1.3.40
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.
# This file is compatible with both classic and new-style classes.

from sys import version_info
if version_info >= (2,6,0):
    def swig_import_helper():
        from os.path import dirname
        import imp
        fp = None
        try:
            fp, pathname, description = imp.find_module('_Message', [dirname(__file__)])
        except ImportError:
            import _Message
            return _Message
        if fp is not None:
            try:
                _mod = imp.load_module('_Message', fp, pathname, description)
            finally:
                fp.close()
            return _mod
    _Message = swig_import_helper()
    del swig_import_helper
else:
    import _Message
del version_info
try:
    _swig_property = property
except NameError:
    pass # Python < 2.2 doesn't have 'property'.
def _swig_setattr_nondynamic(self,class_type,name,value,static=1):
    if (name == "thisown"): return self.this.own(value)
    if (name == "this"):
        if type(value).__name__ == 'SwigPyObject':
            self.__dict__[name] = value
            return
    method = class_type.__swig_setmethods__.get(name,None)
    if method: return method(self,value)
    if (not static) or hasattr(self,name):
        self.__dict__[name] = value
    else:
        raise AttributeError("You cannot add attributes to %s" % self)

def _swig_setattr(self,class_type,name,value):
    return _swig_setattr_nondynamic(self,class_type,name,value,0)

def _swig_getattr(self,class_type,name):
    if (name == "thisown"): return self.this.own()
    method = class_type.__swig_getmethods__.get(name,None)
    if method: return method(self)
    raise AttributeError(name)

def _swig_repr(self):
    try: strthis = "proxy of " + self.this.__repr__()
    except: strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)

try:
    _object = object
    _newclass = 1
except AttributeError:
    class _object : pass
    _newclass = 0


MAT_FROM = _Message.MAT_FROM
MAT_SENDER = _Message.MAT_SENDER
MAT_RETURNPATH = _Message.MAT_RETURNPATH
MAT_REPLYTO = _Message.MAT_REPLYTO
MAT_TO = _Message.MAT_TO
MAT_CC = _Message.MAT_CC
MAT_BCC = _Message.MAT_BCC
class HeaderIterator(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, HeaderIterator, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, HeaderIterator, name)
    __repr__ = _swig_repr
    Collapse = _Message.HeaderIterator_Collapse
    MultiLineOk = _Message.HeaderIterator_MultiLineOk
    DuplicatesOk = _Message.HeaderIterator_DuplicatesOk
    def __init__(self, *args): 
        this = _Message.new_HeaderIterator(*args)
        try: self.this.append(this)
        except: self.this = this
    def GetNext(self, *args): return _Message.HeaderIterator_GetNext(self, *args)
    def GetNextDecoded(self, *args): return _Message.HeaderIterator_GetNextDecoded(self, *args)
    def GetAll(self, *args): return _Message.HeaderIterator_GetAll(self, *args)
    def GetAllDecoded(self, *args): return _Message.HeaderIterator_GetAllDecoded(self, *args)
    def Reset(self): return _Message.HeaderIterator_Reset(self)
    __swig_destroy__ = _Message.delete_HeaderIterator
    __del__ = lambda self : None;
HeaderIterator_swigregister = _Message.HeaderIterator_swigregister
HeaderIterator_swigregister(HeaderIterator)

class Message(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, Message, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, Message, name)
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    __swig_getmethods__["Create"] = lambda x: _Message.Message_Create
    if _newclass:Create = staticmethod(_Message.Message_Create)
    def GetHeaderLine(self, *args): return _Message.Message_GetHeaderLine(self, *args)
    def GetDecodedHeaderLine(self, *args): return _Message.Message_GetDecodedHeaderLine(self, *args)
    def GetHeaderLines(self, *args): return _Message.Message_GetHeaderLines(self, *args)
    def GetHeaderIterator(self): return _Message.Message_GetHeaderIterator(self)
    def GetAllHeaders(self, *args): return _Message.Message_GetAllHeaders(self, *args)
    def GetHeader(self): return _Message.Message_GetHeader(self)
    def GetAddresses(self, *args): return _Message.Message_GetAddresses(self, *args)
    def GetAddressList(self, *args): return _Message.Message_GetAddressList(self, *args)
    def GetAddressesString(self, *args): return _Message.Message_GetAddressesString(self, *args)
    def ExtractAddressesFromHeader(self, *args): return _Message.Message_ExtractAddressesFromHeader(self, *args)
    def Subject(self): return _Message.Message_Subject(self)
    def From(self): return _Message.Message_From(self)
    def Date(self): return _Message.Message_Date(self)
    def GetId(self): return _Message.Message_GetId(self)
    def GetReferences(self): return _Message.Message_GetReferences(self)
    def GetInReplyTo(self): return _Message.Message_GetInReplyTo(self)
    def GetNewsgroups(self): return _Message.Message_GetNewsgroups(self)
    def GetStatus(self): return _Message.Message_GetStatus(self)
    def GetSize(self): return _Message.Message_GetSize(self)
    def GetDate(self): return _Message.Message_GetDate(self)
    def GetFolder(self): return _Message.Message_GetFolder(self)
    def GetUId(self): return _Message.Message_GetUId(self)
    def GetProfile(self): return _Message.Message_GetProfile(self)
    def GetTopMimePart(self): return _Message.Message_GetTopMimePart(self)
    def CountParts(self): return _Message.Message_CountParts(self)
    def GetMimePart(self, *args): return _Message.Message_GetMimePart(self, *args)
    def GetPartContent(self, *args): return _Message.Message_GetPartContent(self, *args)
    def GetPartType(self, *args): return _Message.Message_GetPartType(self, *args)
    def GetTextPartEncoding(self, *args): return _Message.Message_GetTextPartEncoding(self, *args)
    def GetPartTransferEncoding(self, *args): return _Message.Message_GetPartTransferEncoding(self, *args)
    def GetPartSize(self, *args): return _Message.Message_GetPartSize(self, *args)
    def GetPartMimeType(self, *args): return _Message.Message_GetPartMimeType(self, *args)
    def GetPartDesc(self, *args): return _Message.Message_GetPartDesc(self, *args)
    def GetPartSpec(self, *args): return _Message.Message_GetPartSpec(self, *args)
    def GetParameters(self, *args): return _Message.Message_GetParameters(self, *args)
    def GetDisposition(self, *args): return _Message.Message_GetDisposition(self, *args)
    def FetchText(self): return _Message.Message_FetchText(self)
    def WriteToString(self, *args): return _Message.Message_WriteToString(self, *args)
    MSG_TYPETEXT = _Message.Message_MSG_TYPETEXT
    MSG_TYPEMULTIPART = _Message.Message_MSG_TYPEMULTIPART
    MSG_TYPEMESSAGE = _Message.Message_MSG_TYPEMESSAGE
    MSG_TYPEAPPLICATION = _Message.Message_MSG_TYPEAPPLICATION
    MSG_TYPEAUDIO = _Message.Message_MSG_TYPEAUDIO
    MSG_TYPEIMAGE = _Message.Message_MSG_TYPEIMAGE
    MSG_TYPEVIDEO = _Message.Message_MSG_TYPEVIDEO
    MSG_TYPEMODEL = _Message.Message_MSG_TYPEMODEL
    MSG_TYPEOTHER = _Message.Message_MSG_TYPEOTHER
    MSG_TYPEINVALID = _Message.Message_MSG_TYPEINVALID
Message_swigregister = _Message.Message_swigregister
Message_swigregister(Message)

def Message_Create(*args):
  return _Message.Message_Create(*args)
Message_Create = _Message.Message_Create



