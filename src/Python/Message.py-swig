# This file was created automatically by SWIG 1.3.28.
# Don't modify this file, modify the SWIG interface instead.
# This file is compatible with both classic and new-style classes.

import _Message
import new
new_instancemethod = new.instancemethod
def _swig_setattr_nondynamic(self,class_type,name,value,static=1):
    if (name == "thisown"): return self.this.own(value)
    if (name == "this"):
        if type(value).__name__ == 'PySwigObject':
            self.__dict__[name] = value
            return
    method = class_type.__swig_setmethods__.get(name,None)
    if method: return method(self,value)
    if (not static) or hasattr(self,name):
        self.__dict__[name] = value
    else:
        raise AttributeError("You cannot add attributes to %s" % self)

def _swig_setattr(self,class_type,name,value):
    return _swig_setattr_nondynamic(self,class_type,name,value,0)

def _swig_getattr(self,class_type,name):
    if (name == "thisown"): return self.this.own()
    method = class_type.__swig_getmethods__.get(name,None)
    if method: return method(self)
    raise AttributeError,name

import types
try:
    _object = types.ObjectType
    _newclass = 1
except AttributeError:
    class _object : pass
    _newclass = 0
del types


MAT_FROM = _Message.MAT_FROM
MAT_SENDER = _Message.MAT_SENDER
MAT_RETURNPATH = _Message.MAT_RETURNPATH
MAT_REPLYTO = _Message.MAT_REPLYTO
MAT_TO = _Message.MAT_TO
MAT_CC = _Message.MAT_CC
MAT_BCC = _Message.MAT_BCC
class HeaderIterator(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, HeaderIterator, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, HeaderIterator, name)
    def __repr__(self):
        try: strthis = "at 0x%x" %( self.this, ) 
        except: strthis = "" 
        return "<%s.%s; proxy of C++ HeaderIterator instance %s>" % (self.__class__.__module__, self.__class__.__name__, strthis,)
    Collapse = _Message.HeaderIterator_Collapse
    MultiLineOk = _Message.HeaderIterator_MultiLineOk
    def __init__(self, *args):
        this = _Message.new_HeaderIterator(*args)
        try: self.this.append(this)
        except: self.this = this
    def GetNext(*args): return _Message.HeaderIterator_GetNext(*args)
    def GetAll(*args): return _Message.HeaderIterator_GetAll(*args)
    def Reset(*args): return _Message.HeaderIterator_Reset(*args)
    __swig_destroy__ = _Message.delete_HeaderIterator
    __del__ = lambda self : None;
_Message.HeaderIterator_swigregister(HeaderIterator)

class Message(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, Message, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, Message, name)
    def __init__(self): raise AttributeError, "No constructor defined"
    def __repr__(self):
        try: strthis = "at 0x%x" %( self.this, ) 
        except: strthis = "" 
        return "<%s.%s; proxy of C++ Message instance %s>" % (self.__class__.__module__, self.__class__.__name__, strthis,)
    __swig_getmethods__["Create"] = lambda x: _Message.Message_Create
    if _newclass:Create = staticmethod(_Message.Message_Create)
    def GetHeaderLine(*args): return _Message.Message_GetHeaderLine(*args)
    def GetHeaderLines(*args): return _Message.Message_GetHeaderLines(*args)
    def GetHeaderIterator(*args): return _Message.Message_GetHeaderIterator(*args)
    def GetAllHeaders(*args): return _Message.Message_GetAllHeaders(*args)
    def GetHeader(*args): return _Message.Message_GetHeader(*args)
    def GetAddresses(*args): return _Message.Message_GetAddresses(*args)
    def GetAddressList(*args): return _Message.Message_GetAddressList(*args)
    def GetAddressesString(*args): return _Message.Message_GetAddressesString(*args)
    def ExtractAddressesFromHeader(*args): return _Message.Message_ExtractAddressesFromHeader(*args)
    def Subject(*args): return _Message.Message_Subject(*args)
    def From(*args): return _Message.Message_From(*args)
    def Date(*args): return _Message.Message_Date(*args)
    def GetId(*args): return _Message.Message_GetId(*args)
    def GetReferences(*args): return _Message.Message_GetReferences(*args)
    def GetInReplyTo(*args): return _Message.Message_GetInReplyTo(*args)
    def GetNewsgroups(*args): return _Message.Message_GetNewsgroups(*args)
    def GetStatus(*args): return _Message.Message_GetStatus(*args)
    def GetSize(*args): return _Message.Message_GetSize(*args)
    def GetDate(*args): return _Message.Message_GetDate(*args)
    def GetFolder(*args): return _Message.Message_GetFolder(*args)
    def GetUId(*args): return _Message.Message_GetUId(*args)
    def GetTopMimePart(*args): return _Message.Message_GetTopMimePart(*args)
    def CountParts(*args): return _Message.Message_CountParts(*args)
    def GetMimePart(*args): return _Message.Message_GetMimePart(*args)
    def GetPartContent(*args): return _Message.Message_GetPartContent(*args)
    def GetPartType(*args): return _Message.Message_GetPartType(*args)
    def GetTextPartEncoding(*args): return _Message.Message_GetTextPartEncoding(*args)
    def GetPartTransferEncoding(*args): return _Message.Message_GetPartTransferEncoding(*args)
    def GetPartSize(*args): return _Message.Message_GetPartSize(*args)
    def GetPartMimeType(*args): return _Message.Message_GetPartMimeType(*args)
    def GetPartDesc(*args): return _Message.Message_GetPartDesc(*args)
    def GetPartSpec(*args): return _Message.Message_GetPartSpec(*args)
    def GetParameters(*args): return _Message.Message_GetParameters(*args)
    def GetDisposition(*args): return _Message.Message_GetDisposition(*args)
    def FetchText(*args): return _Message.Message_FetchText(*args)
    def WriteToString(*args): return _Message.Message_WriteToString(*args)
    MSG_TYPETEXT = _Message.Message_MSG_TYPETEXT
    MSG_TYPEMULTIPART = _Message.Message_MSG_TYPEMULTIPART
    MSG_TYPEMESSAGE = _Message.Message_MSG_TYPEMESSAGE
    MSG_TYPEAPPLICATION = _Message.Message_MSG_TYPEAPPLICATION
    MSG_TYPEAUDIO = _Message.Message_MSG_TYPEAUDIO
    MSG_TYPEIMAGE = _Message.Message_MSG_TYPEIMAGE
    MSG_TYPEVIDEO = _Message.Message_MSG_TYPEVIDEO
    MSG_TYPEMODEL = _Message.Message_MSG_TYPEMODEL
    MSG_TYPEOTHER = _Message.Message_MSG_TYPEOTHER
    MSG_TYPEINVALID = _Message.Message_MSG_TYPEINVALID
    __swig_getmethods__["GetFirstNameFromAddress"] = lambda x: _Message.Message_GetFirstNameFromAddress
    if _newclass:GetFirstNameFromAddress = staticmethod(_Message.Message_GetFirstNameFromAddress)
    __swig_getmethods__["GetLastNameFromAddress"] = lambda x: _Message.Message_GetLastNameFromAddress
    if _newclass:GetLastNameFromAddress = staticmethod(_Message.Message_GetLastNameFromAddress)
    __swig_getmethods__["GetNameFromAddress"] = lambda x: _Message.Message_GetNameFromAddress
    if _newclass:GetNameFromAddress = staticmethod(_Message.Message_GetNameFromAddress)
    __swig_getmethods__["GetEMailFromAddress"] = lambda x: _Message.Message_GetEMailFromAddress
    if _newclass:GetEMailFromAddress = staticmethod(_Message.Message_GetEMailFromAddress)
    __swig_getmethods__["CompareAddresses"] = lambda x: _Message.Message_CompareAddresses
    if _newclass:CompareAddresses = staticmethod(_Message.Message_CompareAddresses)
    __swig_getmethods__["FindAddress"] = lambda x: _Message.Message_FindAddress
    if _newclass:FindAddress = staticmethod(_Message.Message_FindAddress)
_Message.Message_swigregister(Message)

Message_Create = _Message.Message_Create

Message_GetFirstNameFromAddress = _Message.Message_GetFirstNameFromAddress

Message_GetLastNameFromAddress = _Message.Message_GetLastNameFromAddress

Message_GetNameFromAddress = _Message.Message_GetNameFromAddress

Message_GetEMailFromAddress = _Message.Message_GetEMailFromAddress

Message_CompareAddresses = _Message.Message_CompareAddresses

Message_FindAddress = _Message.Message_FindAddress



