# This file was created automatically by SWIG.
import MProfilec

from MObject import *

from MString import *
class ProfilePtr(MObjectRCPtr):
    PT_Unknown = MProfilec.Profile_PT_Unknown
    PT_Any = MProfilec.Profile_PT_Any
    PT_FolderProfile = MProfilec.Profile_PT_FolderProfile
    def __init__(self,this):
        self.this = this
        self.thisown = 0
    def readEntry(self,arg0,arg1):
        val = MProfilec.Profile_readEntry(self.this,arg0.this,arg1)
        val = StringPtr(val)
        val.thisown = 1
        return val
    def writeEntry(self,arg0,arg1):
        val = MProfilec.Profile_writeEntry(self.this,arg0.this,arg1.this)
        return val
    def SetPath(self,arg0):
        val = MProfilec.Profile_SetPath(self.this,arg0.this)
        return val
    def HasEntry(self,arg0):
        val = MProfilec.Profile_HasEntry(self.this,arg0.this)
        return val
    def DeleteGroup(self,arg0):
        val = MProfilec.Profile_DeleteGroup(self.this,arg0.this)
        return val
    def GetName(self):
        val = MProfilec.Profile_GetName(self.this)
        val = StringPtr(val)
        val.thisown = 1
        return val
    def IsExpandingEnvVars(self):
        val = MProfilec.Profile_IsExpandingEnvVars(self.this)
        return val
    def SetExpandEnvVars(self,*args):
        val = apply(MProfilec.Profile_SetExpandEnvVars,(self.this,)+args)
        return val
    def __repr__(self):
        return "<C Profile instance>"
class Profile(ProfilePtr):
    def __init__(self,this):
        self.this = this






#-------------- FUNCTION WRAPPERS ------------------

def Profile_CreateGlobalConfig(arg0):
    val = MProfilec.Profile_CreateGlobalConfig(arg0.this)
    val = ProfilePtr(val)
    return val

def Profile_CreateProfile(arg0,arg1):
    val = MProfilec.Profile_CreateProfile(arg0.this,arg1.this)
    val = ProfilePtr(val)
    return val

def Profile_CreateModuleProfile(arg0,arg1):
    val = MProfilec.Profile_CreateModuleProfile(arg0.this,arg1.this)
    val = ProfilePtr(val)
    return val

def Profile_CreateEmptyProfile(arg0):
    val = MProfilec.Profile_CreateEmptyProfile(arg0.this)
    val = ProfilePtr(val)
    return val

Profile_DeleteGlobalConfig = MProfilec.Profile_DeleteGlobalConfig



#-------------- VARIABLE WRAPPERS ------------------

