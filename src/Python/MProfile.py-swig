# This file was created automatically by SWIG.
import MProfilec

from MObject import *

from MString import *
class Profile(MObjectRC):
    PT_Unknown = MProfilec.Profile_PT_Unknown
    PT_Any = MProfilec.Profile_PT_Any
    PT_FolderProfile = MProfilec.Profile_PT_FolderProfile
    def __init__(self,this):
        self.this = this

    def readEntry(*args):
        val = apply(MProfilec.Profile_readEntry,args)
        if val: val = StringPtr(val) ; val.thisown = 1
        return val
    def writeEntry(*args):
        val = apply(MProfilec.Profile_writeEntry,args)
        return val
    def SetPath(*args):
        val = apply(MProfilec.Profile_SetPath,args)
        return val
    def HasEntry(*args):
        val = apply(MProfilec.Profile_HasEntry,args)
        return val
    def DeleteGroup(*args):
        val = apply(MProfilec.Profile_DeleteGroup,args)
        return val
    def GetName(*args):
        val = apply(MProfilec.Profile_GetName,args)
        if val: val = StringPtr(val) ; val.thisown = 1
        return val
    def IsExpandingEnvVars(*args):
        val = apply(MProfilec.Profile_IsExpandingEnvVars,args)
        return val
    def SetExpandEnvVars(*args):
        val = apply(MProfilec.Profile_SetExpandEnvVars,args)
        return val
    def __repr__(self):
        return "<C Profile instance at %s>" % (self.this,)
class ProfilePtr(Profile):
    def __init__(self,this):
        self.this = this
        self.thisown = 0
        self.__class__ = Profile





#-------------- FUNCTION WRAPPERS ------------------

def Profile_CreateGlobalConfig(*args, **kwargs):
    val = apply(MProfilec.Profile_CreateGlobalConfig,args,kwargs)
    if val: val = ProfilePtr(val)
    return val

def Profile_CreateProfile(*args, **kwargs):
    val = apply(MProfilec.Profile_CreateProfile,args,kwargs)
    if val: val = ProfilePtr(val)
    return val

def Profile_CreateModuleProfile(*args, **kwargs):
    val = apply(MProfilec.Profile_CreateModuleProfile,args,kwargs)
    if val: val = ProfilePtr(val)
    return val

def Profile_CreateEmptyProfile(*args, **kwargs):
    val = apply(MProfilec.Profile_CreateEmptyProfile,args,kwargs)
    if val: val = ProfilePtr(val)
    return val

Profile_DeleteGlobalConfig = MProfilec.Profile_DeleteGlobalConfig



#-------------- VARIABLE WRAPPERS ------------------

