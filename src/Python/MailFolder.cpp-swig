/*
 * FILE : ./MailFolder.cpp
 * 
 * This file was automatically generated by :
 * Simplified Wrapper and Interface Generator (SWIG)
 * Version 1.1  (Final)
 * 
 * Portions Copyright (c) 1995-1997
 * The University of Utah and The Regents of the University of California.
 * Permission is granted to distribute this file in any manner provided
 * this notice remains intact.
 * 
 * Do not make changes to this file--changes will be lost!
 *
 */


#define SWIGCODE
/* Implementation : PYTHON */

#define SWIGPYTHON
#include <string.h>
#include <stdlib.h>
/* Definitions for Windows/Unix exporting */
#if defined(__WIN32__)
#   if defined(_MSC_VER)
#	define EXPORT(a,b) __declspec(dllexport) a b
#   else
#	if defined(__BORLANDC__)
#	    define EXPORT(a,b) a _export b
#	else
#	    define EXPORT(a,b) a b
#	endif
#   endif
#else
#   define EXPORT(a,b) a b
#endif

#ifdef __cplusplus
extern "C" {
#endif
#include "Python.h"
extern void SWIG_MakePtr(char *, void *, char *);
extern void SWIG_RegisterMapping(char *, char *, void *(*)(void *));
extern char *SWIG_GetPtr(char *, void **, char *);
extern void SWIG_addvarlink(PyObject *, char *, PyObject *(*)(void), int (*)(PyObject *));
extern PyObject *SWIG_newvarlink(void);
#ifdef __cplusplus
}
#endif

#define SWIG_init    initMailFolderc

#define SWIG_name    "MailFolderc"

#include   "Mpch.h"
#include   "Mcommon.h"   
#include   "MailFolder.h"
#include   "Profile.h"   
static PyObject *_wrap_python_const_MailFolder_MF_INBOX;
static PyObject *_wrap_python_const_MailFolder_MF_FILE;
static PyObject *_wrap_python_const_MailFolder_MF_POP;
static PyObject *_wrap_python_const_MailFolder_MF_IMAP;
static PyObject *_wrap_python_const_MailFolder_MF_NNTP;
static PyObject *_wrap_python_const_MailFolder_MF_PROFILE;
static PyObject *_wrap_python_const_MailFolder_MF_TYPEMASK;
static PyObject *_wrap_python_const_MailFolder_MF_FLAGS;
static PyObject *_wrap_python_const_MailFolder_MSG_STAT_UNREAD;
static PyObject *_wrap_python_const_MailFolder_MSG_STAT_DELETED;
static PyObject *_wrap_python_const_MailFolder_MSG_STAT_REPLIED;
static PyObject *_wrap_python_const_MailFolder_MSG_STAT_RECENT;
static PyObject *_wrap_python_const_MailFolder_MSG_STAT_SEARCHED;
static void *SwigMailFolderToMObjectRC(void *ptr) {
    MailFolder *src;
    MObjectRC *dest;
    src = (MailFolder *) ptr;
    dest = (MObjectRC *) src;
    return (void *) dest;
}

static void *SwigMailFolderToMObject(void *ptr) {
    MailFolder *src;
    MObject *dest;
    src = (MailFolder *) ptr;
    dest = (MObject *) src;
    return (void *) dest;
}

static PyObject *_wrap_MailFolder_OpenFolder(PyObject *self, PyObject *args) {
    PyObject * _resultobj;
    MailFolder * _result;
    MailFolder::Type * _arg0;
    String * _arg1;
    ProfileBase * _arg2 = NULL;
    String * _arg3 = &NULLstring;
    String * _arg4 = &NULLstring;
    char * _argc0 = 0;
    char * _argc1 = 0;
    char * _argc2 = 0;
    char * _argc3 = 0;
    char * _argc4 = 0;
    char _ptemp[128];

    if(!PyArg_ParseTuple(args,"ss|sss:MailFolder_OpenFolder",&_argc0,&_argc1,&_argc2,&_argc3,&_argc4)) 
        return NULL;
    if (_argc0) {
        if (SWIG_GetPtr(_argc0,(void **) &_arg0,"_MailFolder::Type_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of MailFolder_OpenFolder. Expected _MailFolder::Type_p.");
        return NULL;
        }
    }
    if (_argc1) {
        if (SWIG_GetPtr(_argc1,(void **) &_arg1,"_String_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 2 of MailFolder_OpenFolder. Expected _String_p.");
        return NULL;
        }
    }
    if (_argc2) {
        if (SWIG_GetPtr(_argc2,(void **) &_arg2,"_ProfileBase_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 3 of MailFolder_OpenFolder. Expected _ProfileBase_p.");
        return NULL;
        }
    }
    if (_argc3) {
        if (SWIG_GetPtr(_argc3,(void **) &_arg3,"_String_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 4 of MailFolder_OpenFolder. Expected _String_p.");
        return NULL;
        }
    }
    if (_argc4) {
        if (SWIG_GetPtr(_argc4,(void **) &_arg4,"_String_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 5 of MailFolder_OpenFolder. Expected _String_p.");
        return NULL;
        }
    }
    _result = (MailFolder *)MailFolder::OpenFolder(*_arg0,*_arg1,_arg2,*_arg3,*_arg4);
    SWIG_MakePtr(_ptemp, (char *) _result,"_MailFolder_p");
    _resultobj = Py_BuildValue("s",_ptemp);
    return _resultobj;
}

static bool  MailFolder_IsInitialised(MailFolder *obj) {
    bool  _result = (bool )obj->IsInitialised();
    return _result;
}
static PyObject *_wrap_MailFolder_IsInitialised(PyObject *self, PyObject *args) {
    PyObject * _resultobj;
    bool  _result;
    MailFolder * _arg0;
    char * _argc0 = 0;

    if(!PyArg_ParseTuple(args,"s:MailFolder_IsInitialised",&_argc0)) 
        return NULL;
    if (_argc0) {
        if (SWIG_GetPtr(_argc0,(void **) &_arg0,"_MailFolder_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of MailFolder_IsInitialised. Expected _MailFolder_p.");
        return NULL;
        }
    }
    _result = (bool )MailFolder_IsInitialised(_arg0);
    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

static void  MailFolder_RegisterView(MailFolder *obj,FolderViewBase * _arg0,bool  _arg1) {
    obj->RegisterView(_arg0,_arg1);
}
static PyObject *_wrap_MailFolder_RegisterView(PyObject *self, PyObject *args) {
    PyObject * _resultobj;
    MailFolder * _arg0;
    FolderViewBase * _arg1;
    bool  _arg2 = true;
    char * _argc0 = 0;
    char * _argc1 = 0;

    if(!PyArg_ParseTuple(args,"ss|i:MailFolder_RegisterView",&_argc0,&_argc1,&_arg2)) 
        return NULL;
    if (_argc0) {
        if (SWIG_GetPtr(_argc0,(void **) &_arg0,"_MailFolder_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of MailFolder_RegisterView. Expected _MailFolder_p.");
        return NULL;
        }
    }
    if (_argc1) {
        if (SWIG_GetPtr(_argc1,(void **) &_arg1,"_FolderViewBase_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 2 of MailFolder_RegisterView. Expected _FolderViewBase_p.");
        return NULL;
        }
    }
    MailFolder_RegisterView(_arg0,_arg1,_arg2);
    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

static bool  MailFolder_IsOk(MailFolder *obj) {
    bool  _result = (bool )obj->IsOk();
    return _result;
}
static PyObject *_wrap_MailFolder_IsOk(PyObject *self, PyObject *args) {
    PyObject * _resultobj;
    bool  _result;
    MailFolder * _arg0;
    char * _argc0 = 0;

    if(!PyArg_ParseTuple(args,"s:MailFolder_IsOk",&_argc0)) 
        return NULL;
    if (_argc0) {
        if (SWIG_GetPtr(_argc0,(void **) &_arg0,"_MailFolder_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of MailFolder_IsOk. Expected _MailFolder_p.");
        return NULL;
        }
    }
    _result = (bool )MailFolder_IsOk(_arg0);
    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

static String  MailFolder_GetName(MailFolder *obj) {
    String  _result = (String )obj->GetName();
    return _result;
}
static PyObject *_wrap_MailFolder_GetName(PyObject *self, PyObject *args) {
    PyObject * _resultobj;
    String * _result;
    MailFolder * _arg0;
    char * _argc0 = 0;
    char _ptemp[128];

    if(!PyArg_ParseTuple(args,"s:MailFolder_GetName",&_argc0)) 
        return NULL;
    if (_argc0) {
        if (SWIG_GetPtr(_argc0,(void **) &_arg0,"_MailFolder_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of MailFolder_GetName. Expected _MailFolder_p.");
        return NULL;
        }
    }
    _result = new String (MailFolder_GetName(_arg0));
    SWIG_MakePtr(_ptemp, (void *) _result,"_String_p");
    _resultobj = Py_BuildValue("s",_ptemp);
    return _resultobj;
}

static long  MailFolder_CountMessages(MailFolder *obj) {
    long  _result = (long )obj->CountMessages();
    return _result;
}
static PyObject *_wrap_MailFolder_CountMessages(PyObject *self, PyObject *args) {
    PyObject * _resultobj;
    long  _result;
    MailFolder * _arg0;
    char * _argc0 = 0;

    if(!PyArg_ParseTuple(args,"s:MailFolder_CountMessages",&_argc0)) 
        return NULL;
    if (_argc0) {
        if (SWIG_GetPtr(_argc0,(void **) &_arg0,"_MailFolder_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of MailFolder_CountMessages. Expected _MailFolder_p.");
        return NULL;
        }
    }
    _result = (long )MailFolder_CountMessages(_arg0);
    _resultobj = Py_BuildValue("l",_result);
    return _resultobj;
}

static void  MailFolder_Ping(MailFolder *obj) {
    obj->Ping();
}
static PyObject *_wrap_MailFolder_Ping(PyObject *self, PyObject *args) {
    PyObject * _resultobj;
    MailFolder * _arg0;
    char * _argc0 = 0;

    if(!PyArg_ParseTuple(args,"s:MailFolder_Ping",&_argc0)) 
        return NULL;
    if (_argc0) {
        if (SWIG_GetPtr(_argc0,(void **) &_arg0,"_MailFolder_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of MailFolder_Ping. Expected _MailFolder_p.");
        return NULL;
        }
    }
    MailFolder_Ping(_arg0);
    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

static int  MailFolder_GetMessageStatus(MailFolder *obj,unsigned int  _arg0,unsigned long * _arg1,unsigned int * _arg2,unsigned int * _arg3,unsigned int * _arg4) {
    int  _result = (int )obj->GetMessageStatus(_arg0,_arg1,_arg2,_arg3,_arg4);
    return _result;
}
static PyObject *_wrap_MailFolder_GetMessageStatus(PyObject *self, PyObject *args) {
    PyObject * _resultobj;
    int  _result;
    MailFolder * _arg0;
    unsigned int  _arg1;
    unsigned long * _arg2 = NULL;
    unsigned int * _arg3 = NULL;
    unsigned int * _arg4 = NULL;
    unsigned int * _arg5 = NULL;
    char * _argc0 = 0;
    char * _argc2 = 0;
    char * _argc3 = 0;
    char * _argc4 = 0;
    char * _argc5 = 0;

    if(!PyArg_ParseTuple(args,"si|ssss:MailFolder_GetMessageStatus",&_argc0,&_arg1,&_argc2,&_argc3,&_argc4,&_argc5)) 
        return NULL;
    if (_argc0) {
        if (SWIG_GetPtr(_argc0,(void **) &_arg0,"_MailFolder_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of MailFolder_GetMessageStatus. Expected _MailFolder_p.");
        return NULL;
        }
    }
    if (_argc2) {
        if (SWIG_GetPtr(_argc2,(void **) &_arg2,"_unsigned_long_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 3 of MailFolder_GetMessageStatus. Expected _unsigned_long_p.");
        return NULL;
        }
    }
    if (_argc3) {
        if (SWIG_GetPtr(_argc3,(void **) &_arg3,"_unsigned_int_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 4 of MailFolder_GetMessageStatus. Expected _unsigned_int_p.");
        return NULL;
        }
    }
    if (_argc4) {
        if (SWIG_GetPtr(_argc4,(void **) &_arg4,"_unsigned_int_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 5 of MailFolder_GetMessageStatus. Expected _unsigned_int_p.");
        return NULL;
        }
    }
    if (_argc5) {
        if (SWIG_GetPtr(_argc5,(void **) &_arg5,"_unsigned_int_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 6 of MailFolder_GetMessageStatus. Expected _unsigned_int_p.");
        return NULL;
        }
    }
    _result = (int )MailFolder_GetMessageStatus(_arg0,_arg1,_arg2,_arg3,_arg4,_arg5);
    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

static class Message * MailFolder_GetMessage(MailFolder *obj,unsigned long  _arg0) {
    class Message * _result = (class Message *)obj->GetMessage(_arg0);
    return _result;
}
static PyObject *_wrap_MailFolder_GetMessage(PyObject *self, PyObject *args) {
    PyObject * _resultobj;
    class Message * _result;
    MailFolder * _arg0;
    unsigned long  _arg1;
    char * _argc0 = 0;
    char _ptemp[128];

    if(!PyArg_ParseTuple(args,"sl:MailFolder_GetMessage",&_argc0,&_arg1)) 
        return NULL;
    if (_argc0) {
        if (SWIG_GetPtr(_argc0,(void **) &_arg0,"_MailFolder_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of MailFolder_GetMessage. Expected _MailFolder_p.");
        return NULL;
        }
    }
    _result = (class Message *)MailFolder_GetMessage(_arg0,_arg1);
    SWIG_MakePtr(_ptemp, (char *) _result,"_class_Message_p");
    _resultobj = Py_BuildValue("s",_ptemp);
    return _resultobj;
}

static void  MailFolder_DeleteMessage(MailFolder *obj,unsigned long  _arg0) {
    obj->DeleteMessage(_arg0);
}
static PyObject *_wrap_MailFolder_DeleteMessage(PyObject *self, PyObject *args) {
    PyObject * _resultobj;
    MailFolder * _arg0;
    unsigned long  _arg1;
    char * _argc0 = 0;

    if(!PyArg_ParseTuple(args,"sl:MailFolder_DeleteMessage",&_argc0,&_arg1)) 
        return NULL;
    if (_argc0) {
        if (SWIG_GetPtr(_argc0,(void **) &_arg0,"_MailFolder_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of MailFolder_DeleteMessage. Expected _MailFolder_p.");
        return NULL;
        }
    }
    MailFolder_DeleteMessage(_arg0,_arg1);
    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

static void  MailFolder_UnDeleteMessage(MailFolder *obj,unsigned long  _arg0) {
    obj->UnDeleteMessage(_arg0);
}
static PyObject *_wrap_MailFolder_UnDeleteMessage(PyObject *self, PyObject *args) {
    PyObject * _resultobj;
    MailFolder * _arg0;
    unsigned long  _arg1;
    char * _argc0 = 0;

    if(!PyArg_ParseTuple(args,"sl:MailFolder_UnDeleteMessage",&_argc0,&_arg1)) 
        return NULL;
    if (_argc0) {
        if (SWIG_GetPtr(_argc0,(void **) &_arg0,"_MailFolder_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of MailFolder_UnDeleteMessage. Expected _MailFolder_p.");
        return NULL;
        }
    }
    MailFolder_UnDeleteMessage(_arg0,_arg1);
    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

static void  MailFolder_SetMessageFlag(MailFolder *obj,unsigned long  _arg0,int  _arg1,bool  _arg2) {
    obj->SetMessageFlag(_arg0,_arg1,_arg2);
}
static PyObject *_wrap_MailFolder_SetMessageFlag(PyObject *self, PyObject *args) {
    PyObject * _resultobj;
    MailFolder * _arg0;
    unsigned long  _arg1;
    int  _arg2;
    bool  _arg3 = true;
    char * _argc0 = 0;

    if(!PyArg_ParseTuple(args,"sli|i:MailFolder_SetMessageFlag",&_argc0,&_arg1,&_arg2,&_arg3)) 
        return NULL;
    if (_argc0) {
        if (SWIG_GetPtr(_argc0,(void **) &_arg0,"_MailFolder_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of MailFolder_SetMessageFlag. Expected _MailFolder_p.");
        return NULL;
        }
    }
    MailFolder_SetMessageFlag(_arg0,_arg1,_arg2,_arg3);
    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

static void  MailFolder_AppendMessage(MailFolder *obj,Message * _arg0) {
    obj->AppendMessage(*_arg0);
}
static PyObject *_wrap_MailFolder_AppendMessage(PyObject *self, PyObject *args) {
    PyObject * _resultobj;
    MailFolder * _arg0;
    Message * _arg1;
    char * _argc0 = 0;
    char * _argc1 = 0;

    if(!PyArg_ParseTuple(args,"ss:MailFolder_AppendMessage",&_argc0,&_argc1)) 
        return NULL;
    if (_argc0) {
        if (SWIG_GetPtr(_argc0,(void **) &_arg0,"_MailFolder_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of MailFolder_AppendMessage. Expected _MailFolder_p.");
        return NULL;
        }
    }
    if (_argc1) {
        if (SWIG_GetPtr(_argc1,(void **) &_arg1,"_Message_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 2 of MailFolder_AppendMessage. Expected _Message_p.");
        return NULL;
        }
    }
    MailFolder_AppendMessage(_arg0,_arg1);
    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

static void  MailFolder_ExpungeMessages(MailFolder *obj) {
    obj->ExpungeMessages();
}
static PyObject *_wrap_MailFolder_ExpungeMessages(PyObject *self, PyObject *args) {
    PyObject * _resultobj;
    MailFolder * _arg0;
    char * _argc0 = 0;

    if(!PyArg_ParseTuple(args,"s:MailFolder_ExpungeMessages",&_argc0)) 
        return NULL;
    if (_argc0) {
        if (SWIG_GetPtr(_argc0,(void **) &_arg0,"_MailFolder_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of MailFolder_ExpungeMessages. Expected _MailFolder_p.");
        return NULL;
        }
    }
    MailFolder_ExpungeMessages(_arg0);
    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

static ProfileBase * MailFolder_GetProfile(MailFolder *obj) {
    ProfileBase * _result = (ProfileBase *)obj->GetProfile();
    return _result;
}
static PyObject *_wrap_MailFolder_GetProfile(PyObject *self, PyObject *args) {
    PyObject * _resultobj;
    ProfileBase * _result;
    MailFolder * _arg0;
    char * _argc0 = 0;
    char _ptemp[128];

    if(!PyArg_ParseTuple(args,"s:MailFolder_GetProfile",&_argc0)) 
        return NULL;
    if (_argc0) {
        if (SWIG_GetPtr(_argc0,(void **) &_arg0,"_MailFolder_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of MailFolder_GetProfile. Expected _MailFolder_p.");
        return NULL;
        }
    }
    _result = (ProfileBase *)MailFolder_GetProfile(_arg0);
    SWIG_MakePtr(_ptemp, (char *) _result,"_ProfileBase_p");
    _resultobj = Py_BuildValue("s",_ptemp);
    return _resultobj;
}

static char * MailFolder_GetClassName(MailFolder *obj) {
    char * _result = (char *)obj->GetClassName();
    return _result;
}
static PyObject *_wrap_MailFolder_GetClassName(PyObject *self, PyObject *args) {
    PyObject * _resultobj;
    char * _result;
    MailFolder * _arg0;
    char * _argc0 = 0;

    if(!PyArg_ParseTuple(args,"s:MailFolder_GetClassName",&_argc0)) 
        return NULL;
    if (_argc0) {
        if (SWIG_GetPtr(_argc0,(void **) &_arg0,"_MailFolder_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of MailFolder_GetClassName. Expected _MailFolder_p.");
        return NULL;
        }
    }
    _result = (char *)MailFolder_GetClassName(_arg0);
    _resultobj = Py_BuildValue("s", _result);
    return _resultobj;
}

static int  MailFolder_GetUpdateInterval(MailFolder *obj) {
    int  _result = (int )obj->GetUpdateInterval();
    return _result;
}
static PyObject *_wrap_MailFolder_GetUpdateInterval(PyObject *self, PyObject *args) {
    PyObject * _resultobj;
    int  _result;
    MailFolder * _arg0;
    char * _argc0 = 0;

    if(!PyArg_ParseTuple(args,"s:MailFolder_GetUpdateInterval",&_argc0)) 
        return NULL;
    if (_argc0) {
        if (SWIG_GetPtr(_argc0,(void **) &_arg0,"_MailFolder_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of MailFolder_GetUpdateInterval. Expected _MailFolder_p.");
        return NULL;
        }
    }
    _result = (int )MailFolder_GetUpdateInterval(_arg0);
    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

static PyMethodDef MailFoldercMethods[] = {
	 { "MailFolder_GetUpdateInterval", _wrap_MailFolder_GetUpdateInterval, 1 },
	 { "MailFolder_GetClassName", _wrap_MailFolder_GetClassName, 1 },
	 { "MailFolder_GetProfile", _wrap_MailFolder_GetProfile, 1 },
	 { "MailFolder_ExpungeMessages", _wrap_MailFolder_ExpungeMessages, 1 },
	 { "MailFolder_AppendMessage", _wrap_MailFolder_AppendMessage, 1 },
	 { "MailFolder_SetMessageFlag", _wrap_MailFolder_SetMessageFlag, 1 },
	 { "MailFolder_UnDeleteMessage", _wrap_MailFolder_UnDeleteMessage, 1 },
	 { "MailFolder_DeleteMessage", _wrap_MailFolder_DeleteMessage, 1 },
	 { "MailFolder_GetMessage", _wrap_MailFolder_GetMessage, 1 },
	 { "MailFolder_GetMessageStatus", _wrap_MailFolder_GetMessageStatus, 1 },
	 { "MailFolder_Ping", _wrap_MailFolder_Ping, 1 },
	 { "MailFolder_CountMessages", _wrap_MailFolder_CountMessages, 1 },
	 { "MailFolder_GetName", _wrap_MailFolder_GetName, 1 },
	 { "MailFolder_IsOk", _wrap_MailFolder_IsOk, 1 },
	 { "MailFolder_RegisterView", _wrap_MailFolder_RegisterView, 1 },
	 { "MailFolder_IsInitialised", _wrap_MailFolder_IsInitialised, 1 },
	 { "MailFolder_OpenFolder", _wrap_MailFolder_OpenFolder, 1 },
	 { NULL, NULL }
};
static PyObject *SWIG_globals;
#ifdef __cplusplus
extern "C" 
#endif
EXPORT(void,initMailFolderc)() {
	 PyObject *m, *d;
	 SWIG_globals = SWIG_newvarlink();
	 m = Py_InitModule("MailFolderc", MailFoldercMethods);
	 d = PyModule_GetDict(m);
	 _wrap_python_const_MailFolder_MF_INBOX = PyInt_FromLong(MailFolder::MF_INBOX);
	 PyDict_SetItemString(d,"MailFolder_MF_INBOX", _wrap_python_const_MailFolder_MF_INBOX);
	 _wrap_python_const_MailFolder_MF_FILE = PyInt_FromLong(MailFolder::MF_FILE);
	 PyDict_SetItemString(d,"MailFolder_MF_FILE", _wrap_python_const_MailFolder_MF_FILE);
	 _wrap_python_const_MailFolder_MF_POP = PyInt_FromLong(MailFolder::MF_POP);
	 PyDict_SetItemString(d,"MailFolder_MF_POP", _wrap_python_const_MailFolder_MF_POP);
	 _wrap_python_const_MailFolder_MF_IMAP = PyInt_FromLong(MailFolder::MF_IMAP);
	 PyDict_SetItemString(d,"MailFolder_MF_IMAP", _wrap_python_const_MailFolder_MF_IMAP);
	 _wrap_python_const_MailFolder_MF_NNTP = PyInt_FromLong(MailFolder::MF_NNTP);
	 PyDict_SetItemString(d,"MailFolder_MF_NNTP", _wrap_python_const_MailFolder_MF_NNTP);
	 _wrap_python_const_MailFolder_MF_PROFILE = PyInt_FromLong(MailFolder::MF_PROFILE);
	 PyDict_SetItemString(d,"MailFolder_MF_PROFILE", _wrap_python_const_MailFolder_MF_PROFILE);
	 _wrap_python_const_MailFolder_MF_TYPEMASK = PyInt_FromLong(MailFolder::MF_TYPEMASK);
	 PyDict_SetItemString(d,"MailFolder_MF_TYPEMASK", _wrap_python_const_MailFolder_MF_TYPEMASK);
	 _wrap_python_const_MailFolder_MF_FLAGS = PyInt_FromLong(MailFolder::MF_FLAGS);
	 PyDict_SetItemString(d,"MailFolder_MF_FLAGS", _wrap_python_const_MailFolder_MF_FLAGS);
	 _wrap_python_const_MailFolder_MSG_STAT_UNREAD = PyInt_FromLong(MailFolder::MSG_STAT_UNREAD);
	 PyDict_SetItemString(d,"MailFolder_MSG_STAT_UNREAD", _wrap_python_const_MailFolder_MSG_STAT_UNREAD);
	 _wrap_python_const_MailFolder_MSG_STAT_DELETED = PyInt_FromLong(MailFolder::MSG_STAT_DELETED);
	 PyDict_SetItemString(d,"MailFolder_MSG_STAT_DELETED", _wrap_python_const_MailFolder_MSG_STAT_DELETED);
	 _wrap_python_const_MailFolder_MSG_STAT_REPLIED = PyInt_FromLong(MailFolder::MSG_STAT_REPLIED);
	 PyDict_SetItemString(d,"MailFolder_MSG_STAT_REPLIED", _wrap_python_const_MailFolder_MSG_STAT_REPLIED);
	 _wrap_python_const_MailFolder_MSG_STAT_RECENT = PyInt_FromLong(MailFolder::MSG_STAT_RECENT);
	 PyDict_SetItemString(d,"MailFolder_MSG_STAT_RECENT", _wrap_python_const_MailFolder_MSG_STAT_RECENT);
	 _wrap_python_const_MailFolder_MSG_STAT_SEARCHED = PyInt_FromLong(MailFolder::MSG_STAT_SEARCHED);
	 PyDict_SetItemString(d,"MailFolder_MSG_STAT_SEARCHED", _wrap_python_const_MailFolder_MSG_STAT_SEARCHED);
/*
 * These are the pointer type-equivalency mappings. 
 * (Used by the SWIG pointer type-checker).
 */
	 SWIG_RegisterMapping("_signed_long","_long",0);
	 SWIG_RegisterMapping("_Message","_class_Message",0);
	 SWIG_RegisterMapping("_ProfileBase","_class_ProfileBase",0);
	 SWIG_RegisterMapping("_long","_unsigned_long",0);
	 SWIG_RegisterMapping("_long","_signed_long",0);
	 SWIG_RegisterMapping("_class_Message","_Message",0);
	 SWIG_RegisterMapping("_MailFolder","_class_MailFolder",0);
	 SWIG_RegisterMapping("_unsigned_long","_long",0);
	 SWIG_RegisterMapping("_signed_int","_int",0);
	 SWIG_RegisterMapping("_MObject","_class_MailFolder",SwigMailFolderToMObject);
	 SWIG_RegisterMapping("_MObject","_MailFolder",SwigMailFolderToMObject);
	 SWIG_RegisterMapping("_MObject","_class_MObject",0);
	 SWIG_RegisterMapping("_unsigned_short","_short",0);
	 SWIG_RegisterMapping("_class_MailFolder","_MailFolder",0);
	 SWIG_RegisterMapping("_signed_short","_short",0);
	 SWIG_RegisterMapping("_MObjectRC","_class_MailFolder",SwigMailFolderToMObjectRC);
	 SWIG_RegisterMapping("_MObjectRC","_MailFolder",SwigMailFolderToMObjectRC);
	 SWIG_RegisterMapping("_MObjectRC","_class_MObjectRC",0);
	 SWIG_RegisterMapping("_unsigned_int","_int",0);
	 SWIG_RegisterMapping("_class_ProfileBase","_ProfileBase",0);
	 SWIG_RegisterMapping("_short","_unsigned_short",0);
	 SWIG_RegisterMapping("_short","_signed_short",0);
	 SWIG_RegisterMapping("_String","_class_String",0);
	 SWIG_RegisterMapping("_MessageParameter","_class_MessageParameter",0);
	 SWIG_RegisterMapping("_int","_unsigned_int",0);
	 SWIG_RegisterMapping("_int","_signed_int",0);
	 SWIG_RegisterMapping("_class_MObjectRC","_class_MailFolder",SwigMailFolderToMObjectRC);
	 SWIG_RegisterMapping("_class_MObjectRC","_MailFolder",SwigMailFolderToMObjectRC);
	 SWIG_RegisterMapping("_class_MObjectRC","_MObjectRC",0);
	 SWIG_RegisterMapping("_class_MObject","_class_MailFolder",SwigMailFolderToMObject);
	 SWIG_RegisterMapping("_class_MObject","_MailFolder",SwigMailFolderToMObject);
	 SWIG_RegisterMapping("_class_MObject","_MObject",0);
	 SWIG_RegisterMapping("_class_String","_String",0);
	 SWIG_RegisterMapping("_class_MessageParameter","_MessageParameter",0);
}
