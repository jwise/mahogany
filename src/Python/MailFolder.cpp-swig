/*
 * FILE : ./MailFolder.cpp
 * 
 * This file was automatically generated by :
 * Simplified Wrapper and Interface Generator (SWIG)
 * Version 1.1 (Patch 5)
 * 
 * Portions Copyright (c) 1995-1998
 * The University of Utah and The Regents of the University of California.
 * Permission is granted to distribute this file in any manner provided
 * this notice remains intact.
 * 
 * Do not make changes to this file--changes will be lost!
 *
 */


#define SWIGCODE
/* Implementation : PYTHON */

#define SWIGPYTHON
#include <string.h>
#include <stdlib.h>
/* Definitions for Windows/Unix exporting */
#if defined(__WIN32__)
#   if defined(_MSC_VER)
#	define SWIGEXPORT(a,b) __declspec(dllexport) a b
#   else
#	if defined(__BORLANDC__)
#	    define SWIGEXPORT(a,b) a _export b
#	else
#	    define SWIGEXPORT(a,b) a b
#	endif
#   endif
#else
#   define SWIGEXPORT(a,b) a b
#endif

#ifdef __cplusplus
extern "C" {
#endif
#include "Python.h"
extern void SWIG_MakePtr(char *, void *, char *);
extern void SWIG_RegisterMapping(char *, char *, void *(*)(void *));
extern char *SWIG_GetPtr(char *, void **, char *);
extern void SWIG_addvarlink(PyObject *, char *, PyObject *(*)(void), int (*)(PyObject *));
extern PyObject *SWIG_newvarlink(void);
#ifdef __cplusplus
}
#endif

#define SWIG_init    initMailFolderc

#define SWIG_name    "MailFolderc"

#include   "Mcommon.h"

#include   <wx/config.h>

#include   "kbList.h"
#include   "Profile.h"
#include   "MailFolder.h"

// we don't want to export our functions as we don't build a shared library
#undef SWIGEXPORT
#define SWIGEXPORT(a,b) a b
#define MailFolder_IsInitialised(_swigobj)  (_swigobj->IsInitialised())
static PyObject *_wrap_MailFolder_IsInitialised(PyObject *self, PyObject *args) {
    PyObject * _resultobj;
    bool  _result;
    MailFolder * _arg0;
    char * _argc0 = 0;

    self = self;
    if(!PyArg_ParseTuple(args,"s:MailFolder_IsInitialised",&_argc0)) 
        return NULL;
    if (_argc0) {
        if (SWIG_GetPtr(_argc0,(void **) &_arg0,"_MailFolder_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of MailFolder_IsInitialised. Expected _MailFolder_p.");
        return NULL;
        }
    }
    _result = (bool )MailFolder_IsInitialised(_arg0);
    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

#define MailFolder_RegisterView(_swigobj,_swigarg0,_swigarg1)  (_swigobj->RegisterView(_swigarg0,_swigarg1))
static PyObject *_wrap_MailFolder_RegisterView(PyObject *self, PyObject *args) {
    PyObject * _resultobj;
    MailFolder * _arg0;
    FolderViewBase * _arg1;
    bool  _arg2 = true;
    char * _argc0 = 0;
    char * _argc1 = 0;
    int tempbool2;

    self = self;
    if(!PyArg_ParseTuple(args,"ss|i:MailFolder_RegisterView",&_argc0,&_argc1,&tempbool2)) 
        return NULL;
    if (_argc0) {
        if (SWIG_GetPtr(_argc0,(void **) &_arg0,"_MailFolder_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of MailFolder_RegisterView. Expected _MailFolder_p.");
        return NULL;
        }
    }
    if (_argc1) {
        if (SWIG_GetPtr(_argc1,(void **) &_arg1,"_FolderViewBase_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 2 of MailFolder_RegisterView. Expected _FolderViewBase_p.");
        return NULL;
        }
    }
    _arg2 = (bool ) tempbool2;
    MailFolder_RegisterView(_arg0,_arg1,_arg2);
    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define MailFolder_IsOk(_swigobj)  (_swigobj->IsOk())
static PyObject *_wrap_MailFolder_IsOk(PyObject *self, PyObject *args) {
    PyObject * _resultobj;
    bool  _result;
    MailFolder * _arg0;
    char * _argc0 = 0;

    self = self;
    if(!PyArg_ParseTuple(args,"s:MailFolder_IsOk",&_argc0)) 
        return NULL;
    if (_argc0) {
        if (SWIG_GetPtr(_argc0,(void **) &_arg0,"_MailFolder_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of MailFolder_IsOk. Expected _MailFolder_p.");
        return NULL;
        }
    }
    _result = (bool )MailFolder_IsOk(_arg0);
    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

#define MailFolder_GetName(_swigobj)  (_swigobj->GetName())
static PyObject *_wrap_MailFolder_GetName(PyObject *self, PyObject *args) {
    PyObject * _resultobj;
    String * _result;
    MailFolder * _arg0;
    char * _argc0 = 0;
    char _ptemp[128];

    self = self;
    if(!PyArg_ParseTuple(args,"s:MailFolder_GetName",&_argc0)) 
        return NULL;
    if (_argc0) {
        if (SWIG_GetPtr(_argc0,(void **) &_arg0,"_MailFolder_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of MailFolder_GetName. Expected _MailFolder_p.");
        return NULL;
        }
    }
    const String & _result_ref = MailFolder_GetName(_arg0);
    _result = (String *) &_result_ref;
    SWIG_MakePtr(_ptemp, (char *) _result,"_String_p");
    _resultobj = Py_BuildValue("s",_ptemp);
    return _resultobj;
}

#define MailFolder_CountMessages(_swigobj)  (_swigobj->CountMessages())
static PyObject *_wrap_MailFolder_CountMessages(PyObject *self, PyObject *args) {
    PyObject * _resultobj;
    long  _result;
    MailFolder * _arg0;
    char * _argc0 = 0;

    self = self;
    if(!PyArg_ParseTuple(args,"s:MailFolder_CountMessages",&_argc0)) 
        return NULL;
    if (_argc0) {
        if (SWIG_GetPtr(_argc0,(void **) &_arg0,"_MailFolder_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of MailFolder_CountMessages. Expected _MailFolder_p.");
        return NULL;
        }
    }
    _result = (long )MailFolder_CountMessages(_arg0);
    _resultobj = Py_BuildValue("l",_result);
    return _resultobj;
}

#define MailFolder_Ping(_swigobj)  (_swigobj->Ping())
static PyObject *_wrap_MailFolder_Ping(PyObject *self, PyObject *args) {
    PyObject * _resultobj;
    MailFolder * _arg0;
    char * _argc0 = 0;

    self = self;
    if(!PyArg_ParseTuple(args,"s:MailFolder_Ping",&_argc0)) 
        return NULL;
    if (_argc0) {
        if (SWIG_GetPtr(_argc0,(void **) &_arg0,"_MailFolder_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of MailFolder_Ping. Expected _MailFolder_p.");
        return NULL;
        }
    }
    MailFolder_Ping(_arg0);
    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define MailFolder_GetMessageStatus(_swigobj,_swigarg0,_swigarg1,_swigarg2,_swigarg3,_swigarg4)  (_swigobj->GetMessageStatus(_swigarg0,_swigarg1,_swigarg2,_swigarg3,_swigarg4))
static PyObject *_wrap_MailFolder_GetMessageStatus(PyObject *self, PyObject *args) {
    PyObject * _resultobj;
    int  _result;
    MailFolder * _arg0;
    unsigned int  _arg1;
    unsigned long * _arg2 = NULL;
    unsigned int * _arg3 = NULL;
    unsigned int * _arg4 = NULL;
    unsigned int * _arg5 = NULL;
    char * _argc0 = 0;
    char * _argc2 = 0;
    char * _argc3 = 0;
    char * _argc4 = 0;
    char * _argc5 = 0;

    self = self;
    if(!PyArg_ParseTuple(args,"si|ssss:MailFolder_GetMessageStatus",&_argc0,&_arg1,&_argc2,&_argc3,&_argc4,&_argc5)) 
        return NULL;
    if (_argc0) {
        if (SWIG_GetPtr(_argc0,(void **) &_arg0,"_MailFolder_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of MailFolder_GetMessageStatus. Expected _MailFolder_p.");
        return NULL;
        }
    }
    if (_argc2) {
        if (SWIG_GetPtr(_argc2,(void **) &_arg2,"_unsigned_long_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 3 of MailFolder_GetMessageStatus. Expected _unsigned_long_p.");
        return NULL;
        }
    }
    if (_argc3) {
        if (SWIG_GetPtr(_argc3,(void **) &_arg3,"_unsigned_int_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 4 of MailFolder_GetMessageStatus. Expected _unsigned_int_p.");
        return NULL;
        }
    }
    if (_argc4) {
        if (SWIG_GetPtr(_argc4,(void **) &_arg4,"_unsigned_int_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 5 of MailFolder_GetMessageStatus. Expected _unsigned_int_p.");
        return NULL;
        }
    }
    if (_argc5) {
        if (SWIG_GetPtr(_argc5,(void **) &_arg5,"_unsigned_int_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 6 of MailFolder_GetMessageStatus. Expected _unsigned_int_p.");
        return NULL;
        }
    }
    _result = (int )MailFolder_GetMessageStatus(_arg0,_arg1,_arg2,_arg3,_arg4,_arg5);
    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

#define MailFolder_GetMessage(_swigobj,_swigarg0)  (_swigobj->GetMessage(_swigarg0))
static PyObject *_wrap_MailFolder_GetMessage(PyObject *self, PyObject *args) {
    PyObject * _resultobj;
    class Message * _result;
    MailFolder * _arg0;
    unsigned long  _arg1;
    char * _argc0 = 0;
    char _ptemp[128];

    self = self;
    if(!PyArg_ParseTuple(args,"sl:MailFolder_GetMessage",&_argc0,&_arg1)) 
        return NULL;
    if (_argc0) {
        if (SWIG_GetPtr(_argc0,(void **) &_arg0,"_MailFolder_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of MailFolder_GetMessage. Expected _MailFolder_p.");
        return NULL;
        }
    }
    _result = (class Message *)MailFolder_GetMessage(_arg0,_arg1);
    SWIG_MakePtr(_ptemp, (char *) _result,"_class_Message_p");
    _resultobj = Py_BuildValue("s",_ptemp);
    return _resultobj;
}

#define MailFolder_DeleteMessage(_swigobj,_swigarg0)  (_swigobj->DeleteMessage(_swigarg0))
static PyObject *_wrap_MailFolder_DeleteMessage(PyObject *self, PyObject *args) {
    PyObject * _resultobj;
    MailFolder * _arg0;
    unsigned long  _arg1;
    char * _argc0 = 0;

    self = self;
    if(!PyArg_ParseTuple(args,"sl:MailFolder_DeleteMessage",&_argc0,&_arg1)) 
        return NULL;
    if (_argc0) {
        if (SWIG_GetPtr(_argc0,(void **) &_arg0,"_MailFolder_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of MailFolder_DeleteMessage. Expected _MailFolder_p.");
        return NULL;
        }
    }
    MailFolder_DeleteMessage(_arg0,_arg1);
    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define MailFolder_ExpungeMessages(_swigobj)  (_swigobj->ExpungeMessages())
static PyObject *_wrap_MailFolder_ExpungeMessages(PyObject *self, PyObject *args) {
    PyObject * _resultobj;
    MailFolder * _arg0;
    char * _argc0 = 0;

    self = self;
    if(!PyArg_ParseTuple(args,"s:MailFolder_ExpungeMessages",&_argc0)) 
        return NULL;
    if (_argc0) {
        if (SWIG_GetPtr(_argc0,(void **) &_arg0,"_MailFolder_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of MailFolder_ExpungeMessages. Expected _MailFolder_p.");
        return NULL;
        }
    }
    MailFolder_ExpungeMessages(_arg0);
    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define MailFolder_GetProfile(_swigobj)  (_swigobj->GetProfile())
static PyObject *_wrap_MailFolder_GetProfile(PyObject *self, PyObject *args) {
    PyObject * _resultobj;
    ProfileBase * _result;
    MailFolder * _arg0;
    char * _argc0 = 0;
    char _ptemp[128];

    self = self;
    if(!PyArg_ParseTuple(args,"s:MailFolder_GetProfile",&_argc0)) 
        return NULL;
    if (_argc0) {
        if (SWIG_GetPtr(_argc0,(void **) &_arg0,"_MailFolder_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of MailFolder_GetProfile. Expected _MailFolder_p.");
        return NULL;
        }
    }
    _result = (ProfileBase *)MailFolder_GetProfile(_arg0);
    SWIG_MakePtr(_ptemp, (char *) _result,"_ProfileBase_p");
    _resultobj = Py_BuildValue("s",_ptemp);
    return _resultobj;
}

static PyMethodDef MailFoldercMethods[] = {
	 { "MailFolder_GetProfile", _wrap_MailFolder_GetProfile, 1 },
	 { "MailFolder_ExpungeMessages", _wrap_MailFolder_ExpungeMessages, 1 },
	 { "MailFolder_DeleteMessage", _wrap_MailFolder_DeleteMessage, 1 },
	 { "MailFolder_GetMessage", _wrap_MailFolder_GetMessage, 1 },
	 { "MailFolder_GetMessageStatus", _wrap_MailFolder_GetMessageStatus, 1 },
	 { "MailFolder_Ping", _wrap_MailFolder_Ping, 1 },
	 { "MailFolder_CountMessages", _wrap_MailFolder_CountMessages, 1 },
	 { "MailFolder_GetName", _wrap_MailFolder_GetName, 1 },
	 { "MailFolder_IsOk", _wrap_MailFolder_IsOk, 1 },
	 { "MailFolder_RegisterView", _wrap_MailFolder_RegisterView, 1 },
	 { "MailFolder_IsInitialised", _wrap_MailFolder_IsInitialised, 1 },
	 { NULL, NULL }
};
static PyObject *SWIG_globals;
#ifdef __cplusplus
extern "C" 
#endif
SWIGEXPORT(void,initMailFolderc)() {
	 PyObject *m, *d;
	 SWIG_globals = SWIG_newvarlink();
	 m = Py_InitModule("MailFolderc", MailFoldercMethods);
	 d = PyModule_GetDict(m);
/*
 * These are the pointer type-equivalency mappings. 
 * (Used by the SWIG pointer type-checker).
 */
	 SWIG_RegisterMapping("_signed_long","_long",0);
	 SWIG_RegisterMapping("_long","_unsigned_long",0);
	 SWIG_RegisterMapping("_long","_signed_long",0);
	 SWIG_RegisterMapping("_MailFolder","_class_MailFolder",0);
	 SWIG_RegisterMapping("_unsigned_long","_long",0);
	 SWIG_RegisterMapping("_signed_int","_int",0);
	 SWIG_RegisterMapping("_unsigned_short","_short",0);
	 SWIG_RegisterMapping("_class_MailFolder","_MailFolder",0);
	 SWIG_RegisterMapping("_signed_short","_short",0);
	 SWIG_RegisterMapping("_unsigned_int","_int",0);
	 SWIG_RegisterMapping("_short","_unsigned_short",0);
	 SWIG_RegisterMapping("_short","_signed_short",0);
	 SWIG_RegisterMapping("_String","_class_String",0);
	 SWIG_RegisterMapping("_int","_unsigned_int",0);
	 SWIG_RegisterMapping("_int","_signed_int",0);
	 SWIG_RegisterMapping("_class_String","_String",0);
}
