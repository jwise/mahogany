/*
 * FILE : ./Profile.cpp
 * 
 * This file was automatically generated by :
 * Simplified Wrapper and Interface Generator (SWIG)
 * Version 1.1 (Patch 5)
 * 
 * Portions Copyright (c) 1995-1998
 * The University of Utah and The Regents of the University of California.
 * Permission is granted to distribute this file in any manner provided
 * this notice remains intact.
 * 
 * Do not make changes to this file--changes will be lost!
 *
 */


#define SWIGCODE
/* Implementation : PYTHON */

#define SWIGPYTHON
#include <string.h>
#include <stdlib.h>
/* Definitions for Windows/Unix exporting */
#if defined(__WIN32__)
#   if defined(_MSC_VER)
#	define SWIGEXPORT(a,b) __declspec(dllexport) a b
#   else
#	if defined(__BORLANDC__)
#	    define SWIGEXPORT(a,b) a _export b
#	else
#	    define SWIGEXPORT(a,b) a b
#	endif
#   endif
#else
#   define SWIGEXPORT(a,b) a b
#endif

#ifdef __cplusplus
extern "C" {
#endif
#include "Python.h"
extern void SWIG_MakePtr(char *, void *, char *);
extern void SWIG_RegisterMapping(char *, char *, void *(*)(void *));
extern char *SWIG_GetPtr(char *, void **, char *);
extern void SWIG_addvarlink(PyObject *, char *, PyObject *(*)(void), int (*)(PyObject *));
extern PyObject *SWIG_newvarlink(void);
#ifdef __cplusplus
}
#endif

#define SWIG_init    initMProfilec

#define SWIG_name    "MProfilec"

#include  "Mcommon.h"
#include  <wx/config.h>
#include  "kbList.h"
#include  "Profile.h"
#include  "strutil.h"

#include  "MFrame.h"
#include  "guidef.h"
#include  "gui/wxMFrame.h"

#include  "Mdefaults.h"

#include  "PathFinder.h"
#include  "MimeList.h"
#include  "MimeTypes.h"
#include  "Profile.h"

#include  "MApplication.h"

// we don't want to export our functions as we don't build a shared library
#undef SWIGEXPORT
#define SWIGEXPORT(a,b) a b
#define ProfileBase_readEntry(_swigobj,_swigarg0,_swigarg1)  (_swigobj->readEntry(_swigarg0,_swigarg1))
static PyObject *_wrap_ProfileBase_readEntry(PyObject *self, PyObject *args) {
    PyObject * _resultobj;
    String * _result;
    ProfileBase * _arg0;
    char * _arg1;
    char * _arg2 = NULL;
    char * _argc0 = 0;
    char _ptemp[128];

    self = self;
    if(!PyArg_ParseTuple(args,"ss|s:ProfileBase_readEntry",&_argc0,&_arg1,&_arg2)) 
        return NULL;
    if (_argc0) {
        if (SWIG_GetPtr(_argc0,(void **) &_arg0,"_ProfileBase_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of ProfileBase_readEntry. Expected _ProfileBase_p.");
        return NULL;
        }
    }
    _result = new String (ProfileBase_readEntry(_arg0,_arg1,_arg2));
    SWIG_MakePtr(_ptemp, (void *) _result,"_String_p");
    _resultobj = Py_BuildValue("s",_ptemp);
    return _resultobj;
}

#define ProfileBase_writeEntry(_swigobj,_swigarg0,_swigarg1)  (_swigobj->writeEntry(_swigarg0,_swigarg1))
static PyObject *_wrap_ProfileBase_writeEntry(PyObject *self, PyObject *args) {
    PyObject * _resultobj;
    bool  _result;
    ProfileBase * _arg0;
    char * _arg1;
    char * _arg2;
    char * _argc0 = 0;

    self = self;
    if(!PyArg_ParseTuple(args,"sss:ProfileBase_writeEntry",&_argc0,&_arg1,&_arg2)) 
        return NULL;
    if (_argc0) {
        if (SWIG_GetPtr(_argc0,(void **) &_arg0,"_ProfileBase_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of ProfileBase_writeEntry. Expected _ProfileBase_p.");
        return NULL;
        }
    }
    _result = (bool )ProfileBase_writeEntry(_arg0,_arg1,_arg2);
    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

static PyMethodDef MProfilecMethods[] = {
	 { "ProfileBase_writeEntry", _wrap_ProfileBase_writeEntry, 1 },
	 { "ProfileBase_readEntry", _wrap_ProfileBase_readEntry, 1 },
	 { NULL, NULL }
};
static PyObject *SWIG_globals;
#ifdef __cplusplus
extern "C" 
#endif
SWIGEXPORT(void,initMProfilec)() {
	 PyObject *m, *d;
	 SWIG_globals = SWIG_newvarlink();
	 m = Py_InitModule("MProfilec", MProfilecMethods);
	 d = PyModule_GetDict(m);
/*
 * These are the pointer type-equivalency mappings. 
 * (Used by the SWIG pointer type-checker).
 */
	 SWIG_RegisterMapping("_signed_long","_long",0);
	 SWIG_RegisterMapping("_ProfileBase","_class_ProfileBase",0);
	 SWIG_RegisterMapping("_long","_unsigned_long",0);
	 SWIG_RegisterMapping("_long","_signed_long",0);
	 SWIG_RegisterMapping("_unsigned_long","_long",0);
	 SWIG_RegisterMapping("_signed_int","_int",0);
	 SWIG_RegisterMapping("_unsigned_short","_short",0);
	 SWIG_RegisterMapping("_signed_short","_short",0);
	 SWIG_RegisterMapping("_unsigned_int","_int",0);
	 SWIG_RegisterMapping("_class_ProfileBase","_ProfileBase",0);
	 SWIG_RegisterMapping("_short","_unsigned_short",0);
	 SWIG_RegisterMapping("_short","_signed_short",0);
	 SWIG_RegisterMapping("_int","_unsigned_int",0);
	 SWIG_RegisterMapping("_int","_signed_int",0);
}
