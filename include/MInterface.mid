/* -*- text -*-
 * $Id$
 *
 *.mid file for generating IDL and .h files for Mahogany C interface
 */
include(M4FILE)

FILE_HEADER(MApplication)

INCLUDE(`"MApplication.h"')
INCLUDE(`"Profile.h"')
INCLUDE(`"strutil.h"')
INCLUDE(`"MDialogs.h"')
INCLUDE(`"MFolder.h"')
INCLUDE(`"MailFolder.h"')
INCLUDE(`"Message.h"')
INCLUDE(`"SendMessage.h"')
INCLUDE(`"wx/persctrl.h"')

/* Define the MInterface ABC: */

INTERFACE(MInterface,`

FUNCTION(GetMApplication, MAppBase *, `(void)',
`
 return mApplication;
')

FUNCTION(CreateProfile, Profile *, (
ARG(STRING, classname),
ARG(Profile *, parent, =NULL)
),
`
 return Profile::CreateProfile(classname,parent);
')

FUNCTION(GetGlobalProfile, Profile *, `(void)',
`
 return mApplication->GetProfile();
')

FUNCTION(CreateModuleProfile, Profile *, (
ARG(STRING, classname),
ARG(Profile *, parent, =NULL)
),
`
 return Profile::CreateModuleProfile(classname,parent);
')

FUNCTION(CreatePListCtrl, wxPListCtrl *, (
ARG(STRING, name),
ARG(wxWindow *, parent, =NULL),
ARG(INT, id, =-1),
ARG(INT, style, =0)
),
`
return new wxPListCtrl(name, parent, id, wxDefaultPosition,
wxDefaultSize, style);
')


FUNCTION(CreateMessage, Message *, (
ARG(STRING, text),
ARG(UIDTYPE, uid, = UID_ILLEGAL),
ARG(Profile *, profile, =NULL)
),
`
 return Message::Create(text, uid, profile);
')

FUNCTION(MessageDialog, void , (
ARG(STRING, message), ARG(const MWindow *, parent, =NULL),
ARG(STRING, title, =MDIALOG_MSGTITLE),
ARG(STRING, configPath, =NULL) )
,
`
 MDialog_Message(message,parent,title,configPath);
')

FUNCTION(Log, void , (
ARG(int, level),
ARG(STRING, message)
)
,
`
   wxLogGeneric(level, message);
')

FUNCTION(YesNoDialog, bool , (
ARG(STRING, message), ARG(const MWindow *, parent, =NULL),
ARG(STRING, title, =MDIALOG_YESNOTITLE),
ARG(bool, yesdefault, =true),
ARG(STRING, configPath, =NULL) )
,
`
   return MDialog_YesNoDialog(message,parent,title,yesdefault, configPath);
')

FUNCTION(StatusMessage, void , ( ARG(STRING, message) )
,
`
  STATUSMESSAGE((message));
')

FUNCTION(CreateSendMessage, SendMessage *, (
ARG(Profile, *profile),
ARG(Protocol , protocol, =Prot_SMTP)
),
`
 return SendMessage::Create(profile,protocol);
')

FUNCTION(GetMFolder, MFolder *, (
ARG(STRING, name)
),
` return MFolder::Get(name); ')

FUNCTION(OpenMailFolder, MailFolder *, (
ARG(STRING , path)
),
`
 return MailFolder::OpenFolder(path);
')

FUNCTION(OpenASMailFolder, ASMailFolder *, (
ARG(STRING , path)
),
`
 return ASMailFolder::OpenFolder(path);
')

FUNCTION(CreateMailFolder, bool, (
ARG(STRING, name),
ARG(INT, type, =MF_FILE),
ARG(INT, flags, = MF_FLAGS_DEFAULT),
ARG(STRING, path, = ""),
ARG(STRING, comment, = "")
),
` return MailFolder::CreateFolder(name,(FolderType)type,flags,path,comment); ')



FUNCTION(strutil_tolower, void, ( ARG(String &, str)), `::strutil_tolower(str);')

FUNCTION(strutil_compileRegEx, class strutil_RegEx *, (
ARG(const String &, pattern),
ARG(int, flags)),
`return ::strutil_compileRegEx(pattern, flags);')
FUNCTION(strutil_matchRegEx, bool, (
ARG(const class strutil_RegEx *regex),
ARG(const String &, str),
ARG(int, flags)
),
`return ::strutil_matchRegEx(regex, str, flags);')
FUNCTION(strutil_freeRegEx, void, (
ARG(strutil_RegEx *, re)), `::strutil_freeRegEx(re);')

FUNCTION(RemoveModule, void, (ARG(MModuleCommon *, module)),
      `mApplication->RemoveModule(module);')

/* The following line is the end of the MInterface interface definition. */
')

FILE_FOOTER
