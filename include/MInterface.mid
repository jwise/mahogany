/* -*- text -*-
 * $Id$
 *
 *.mid file for generating IDL and .h files for Mahogany C interface
 */
include(M4FILE)

FILE_HEADER(MApplication)

INCLUDE(`"MApplication.h"')
INCLUDE(`"strutil.h"')
INCLUDE(`"MDialogs.h"')
INCLUDE(`"MailFolderCC.h"')
INCLUDE(`"MessageCC.h"')
INCLUDE(`"SendMessageCC.h"')

/* Define the MInterface ABC: */

INTERFACE(MInterface,`

FUNCTION(GetMApplication, MAppBase *, `(void)',
`
 return mApplication;
')

FUNCTION(CreateProfile, ProfileBase *, (
ARG(STRING, classname),
ARG(ProfileBase *, parent, =NULL)
),
`
 return ProfileBase::CreateProfile(classname,parent);
')

FUNCTION(GetGlobalProfile, ProfileBase *, `(void)',
`
 return mApplication->GetProfile();
')

FUNCTION(CreateModuleProfile, ProfileBase *, (
ARG(STRING, classname),
ARG(ProfileBase *, parent, =NULL)
),
`
 return ProfileBase::CreateModuleProfile(classname,parent);
')

FUNCTION(Message, void , (
ARG(STRING, message), ARG(const MWindow *, parent, =NULL),
ARG(STRING, title, =MDIALOG_MSGTITLE),
ARG(STRING, configPath, =NULL) )
,
`
 MDialog_Message(message,parent,title,configPath);
')

FUNCTION(Log, void , (
ARG(int, level),
ARG(STRING, message)
)
,
`
   wxLogGeneric(level, message);
')

FUNCTION(YesNoDialog, bool , (
ARG(STRING, message), ARG(const MWindow *, parent, =NULL),
ARG(STRING, title, =MDIALOG_YESNOTITLE),
ARG(bool, yesdefault, =true),
ARG(STRING, configPath, =NULL) )
,
`
   return MDialog_YesNoDialog(message,parent,title,yesdefault, configPath);
')

FUNCTION(StatusMessage, void , ( ARG(STRING, message) )
,
`
  STATUSMESSAGE((message));
')

FUNCTION(CreateSendMessageCC, SendMessageCC *, (
ARG(ProfileBase, *profile),
ARG(Protocol , protocol, =Prot_SMTP)
),
`
 return new SendMessageCC(profile,protocol);
')

FUNCTION(OpenFolder, MailFolder *, (
ARG(int, typeAndFlags),
ARG(STRING , path)
),
`
 return MailFolder::OpenFolder(typeAndFlags,path);
')


FUNCTION(strutil_tolower, void, ( ARG(String &, str)), `::strutil_tolower(str);')

FUNCTION(strutil_compileRegEx, class strutil_RegEx *, ( ARG(const
String &, pattern)),
`return ::strutil_compileRegEx(pattern);')
FUNCTION(strutil_matchRegEx, bool, (
ARG(const class strutil_RegEx *regex),
ARG(const String &, str),
ARG(int, flags)
),
`return ::strutil_matchRegEx(regex, str, flags);')
FUNCTION(strutil_freeRegEx, void, (
ARG(strutil_RegEx *, re)), `::strutil_freeRegEx(re);')

FUNCTION(RemoveModule, void, (ARG(MModuleCommon *, module)),
      `mApplication->RemoveModule(module);')

/* The following line is the end of the MInterface interface definition. */
')

FILE_FOOTER
